{"version":3,"sources":["./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanel.html","./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanelHeader.html","./node_modules/@swimlane/ngx-charts/release/common/charts/chart.component.d.ts.ChartComponent.html","./node_modules/@swimlane/ngx-charts/release/common/legend/legend-entry.component.d.ts.LegendEntryComponent.html","./node_modules/@swimlane/ngx-charts/release/common/legend/legend.component.d.ts.LegendComponent.html","./node_modules/@swimlane/ngx-charts/release/common/legend/scale-legend.component.d.ts.ScaleLegendComponent.html","./node_modules/@swimlane/ngx-charts/release/common/svg-radial-gradient.component.d.ts.SvgRadialGradientComponent.html","./node_modules/@swimlane/ngx-charts/release/pie-chart/pie-arc.component.d.ts.PieArcComponent.html","./node_modules/@swimlane/ngx-charts/release/pie-chart/pie-chart.component.d.ts.PieChartComponent.html","./node_modules/@swimlane/ngx-charts/release/pie-chart/pie-label.component.d.ts.PieLabelComponent.html","./node_modules/@swimlane/ngx-charts/release/pie-chart/pie-series.component.d.ts.PieSeriesComponent.html","./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","./src/app/main/_models/account-statement/as-chart/as-chart-categorisation.model.ts","./src/app/main/_models/account-statement/as-chart/as-chart-evolution.model.ts","./src/app/main/_models/account-statement/as-chart/as-chart.model.ts","./src/app/main/_models/chart/pie-chart.model.ts","./src/app/main/_models/chart/widget-card-chart-bar.model.ts","./src/app/main/_models/chart/widget-card-chart-pie-select.model.ts","./src/app/main/_models/filters/account-statement.filter.ts","./src/app/main/_models/filters/mini-filter/date-range.filter.ts","./src/app/main/_models/filters/mini-filter/number-range.filter.ts","./src/app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.action.ts","./src/app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.state.ts","./src/app/main/_ngxs/account-statement/account-statement-detail/account-statement-detail.action.ts","./src/app/main/_ngxs/account-statement/account-statement-detail/account-statement-detail.state.ts","./src/app/main/_ngxs/account-statement/account-statement-internal-transfer/as-internal-transfer.action.ts","./src/app/main/_ngxs/account-statement/account-statement-internal-transfer/as-internal-transfer.state.ts","./src/app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state.ts","./src/app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.action.ts","./src/app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.state.ts","./src/app/main/apps/account-statement/account-statement-chart/as-chart-categorisation/as-chart-categorisation.component.html","./src/app/main/apps/account-statement/account-statement-chart/as-chart-categorisation/as-chart-categorisation.component.ts","./src/app/main/apps/account-statement/account-statement-chart/as-chart-evolution/as-chart-evolution.component.html","./src/app/main/apps/account-statement/account-statement-chart/as-chart-evolution/as-chart-evolution.component.ts","./src/app/main/apps/account-statement/account-statement-detail/account-statement-detail.component.html","./src/app/main/apps/account-statement/account-statement-detail/account-statement-detail.component.ts","./src/app/main/apps/account-statement/account-statement-detail/account-statement-detail.validator.ts","./src/app/main/apps/account-statement/account-statement-filter/account-statement-filter.component.html","./src/app/main/apps/account-statement/account-statement-filter/account-statement-filter.component.ts","./src/app/main/apps/account-statement/account-statement-internal-transfer/as-internal-transfer-main/as-internal-transfer-main.component.html","./src/app/main/apps/account-statement/account-statement-internal-transfer/as-internal-transfer-main/as-internal-transfer-main.component.ts","./src/app/main/apps/account-statement/account-statement-list/account-statement-list.component.html","./src/app/main/apps/account-statement/account-statement-list/account-statement-list.component.ts","./src/app/main/apps/account-statement/account-statement-main/account-statement-main.component.html","./src/app/main/apps/account-statement/account-statement-main/account-statement-main.component.ts","./src/app/main/apps/account-statement/account-statement.module.ts","./src/app/main/apps/web-component/mat-table-filter/component/mat-table-filter.component.html","./src/app/main/apps/web-component/mat-table-filter/component/mat-table-filter.component.ts","./src/app/main/apps/web-component/mat-table-filter/directive/resize-observer.directive.ts","./src/app/main/apps/web-component/mat-table-filter/mat-table-filter.module.ts","./src/app/main/apps/web-component/mat-table-filter/model/mat-table-filter.model.ts","./src/app/main/apps/web-component/mat-table-filter/pipe/pipe-date.ts","./src/app/main/apps/web-component/mat-table-filter/service/mat-table-filter-col-resize.service.ts","./src/app/main/apps/web-component/mini-filter/filter-date-range/filter-date-range.component.html","./src/app/main/apps/web-component/mini-filter/filter-date-range/filter-date-range.component.ts","./src/app/main/apps/web-component/mini-filter/filter-number-range/filter-number-range.component.html","./src/app/main/apps/web-component/mini-filter/filter-number-range/filter-number-range.component.ts","./src/app/main/apps/widgets/widget-card-chart-bar/widget-card-chart-bar-skeleton.model.ts","./src/app/main/apps/widgets/widget-card-chart-bar/widget-card-chart-bar.component.html","./src/app/main/apps/widgets/widget-card-chart-bar/widget-card-chart-bar.component.ts","./src/app/main/apps/widgets/widget-card-chart-pie-select/widget-card-chart-pie-select.component.html","./src/app/main/apps/widgets/widget-card-chart-pie-select/widget-card-chart-pie-select.component.ts"],"names":[],"mappings":"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AAyB,EAEzB,SAAmC,EACnC,SAA2B,GAlB3B,4BAAmB,qBAJnB,kBAA6B,+BAC7B,kBAAyB,6BACzB,oBAA2B,cAC3B,oBAA2B,cAE3B,mBAAwB,+BAGxB,oBAAW,MADX,mBAAiB,yBAEjB,oBAA+B,gBAH/B,oBAAqB,WAKrB,oBAAsB,aADtB,gCAA+B,0BAZjC,eAME,SAAmB,EAJnB,SAA6B,EAC7B,SAAyB,EACzB,UAA2B,EAC3B,UAA2B,EAE3B,UAAwB,EAGxB,UAAW,EADX,UAAiB,EAEjB,UAA+B,EAH/B,UAAqB,EAKrB,UAAsB,EADtB,UAA+B,CAahC;wGAxCH,ufAAkD,iDAA3C,6CAA0C,UAAjD,YAAkD,EAA3C,oBAA0C;;;;;;;;;;;;;;;;ACDrD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA,iCAAiC,YAAY;AAC7C,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,6BAA6B,EAAE,aAAa;AAC5G,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,mCAAmC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC,iEAAiE;AACnG;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8CAA8C;AAC9C,CAAC;AACD;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2CAA2C;AAC7E;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA,eAAe,yBAAyB;AACxC;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;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","file":"account-statement-account-statement-module-ngfactory.js","sourcesContent":["<ng-content select=\"mat-expansion-panel-header\"></ng-content><div class=\"mat-expansion-panel-content\" role=\"region\" [@bodyExpansion]=\"_getExpandedState()\" (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\" #body><div class=\"mat-expansion-panel-body\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\"_portal\"></ng-template></div><ng-content select=\"mat-action-row\"></ng-content></div>","<span class=\"mat-content\"><ng-content select=\"mat-panel-title\"></ng-content><ng-content select=\"mat-panel-description\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\" class=\"mat-expansion-indicator\"></span>","\n    <div\n      class=\"ngx-charts-outer\"\n      [style.width.px]=\"view[0]\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\">\n      <svg\n        class=\"ngx-charts\"\n        [attr.width]=\"chartWidth\"\n        [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\">\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === 'legend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\">\n      </ngx-charts-legend>\n    </div>\n  ","\n    <span \n      [title]=\"formattedLabel\"\n      tabindex=\"-1\"\n      [class.active]=\"isActive\"\n      (click)=\"select.emit(formattedLabel)\">\n      <span\n        class=\"legend-label-color\"\n        [style.background-color]=\"color\"\n        (click)=\"toggle.emit(formattedLabel)\">\n      </span>\n      <span class=\"legend-label-text\">\n        {{trimmedLabel}}\n      </span>\n    </span>\n  ","\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\"\n            [class.horizontal-legend]=\"horizontal\"\n          [style.max-height.px]=\"height - 45\">\n          <li\n            *ngFor=\"let entry of legendEntries; trackBy: trackBy\"\n            class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\">\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  ","\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\">\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div\n        class=\"scale-legend-wrap\"\n        [style.background]=\"gradient\">\n      </div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  ","\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradientUnits=\"userSpaceOnUse\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  ","\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"radialGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  ","\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  ","\n    <title>{{label}}</title>\n    <svg:g\n      [attr.transform]=\"attrTransform\"\n      [style.transform]=\"styleTransform\"\n      [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\">\n        {{labelTrim ? trimLabel(label, labelTrimSize) : label}}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\">\n    </svg:path>\n  ","\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  ","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import { WidgetCardChartPieSelect } from \"../../chart/widget-card-chart-pie-select.model\";\r\n\r\nexport class AsChartCategorisation {\r\n    debit: AsChartCategorisationSelect;\r\n    // noIntTransfer: AsChartEvolutionCdb;\r\n    // customOtfs: AsChartEvolutionCustomOtf;\r\n\r\n    constructor() {\r\n        this.debit = new AsChartCategorisationSelect();\r\n        // this.noIntTransfer = new AsChartEvolutionCdb();\r\n        // this.customOtfs = new AsChartEvolutionCustomOtf();\r\n    }\r\n}\r\n\r\nexport class AsChartCategorisationSelect {\r\n    operationMethod: WidgetCardChartPieSelect; \r\n    operationTypeFamily: WidgetCardChartPieSelect;\r\n    operationType: WidgetCardChartPieSelect;\r\n\r\n    constructor() {\r\n        this.operationMethod = new WidgetCardChartPieSelect([]);\r\n        this.operationTypeFamily = new WidgetCardChartPieSelect([]);\r\n        this.operationType = new WidgetCardChartPieSelect([]);\r\n\r\n    }\r\n}","import { WidgetCardChartBar } from \"../../chart/widget-card-chart-bar.model\";\r\nimport { ISelectGroup, ISelect } from \"../../generics/select.model\";\r\nimport { IUserForGroup } from \"../../user.model\";\r\nimport { IMonthYear } from \"../../generics/date-time.model\";\r\n\r\nexport class AsChartEvolution {\r\n    brut: AsChartEvolutionCdb;\r\n    noIntTransfer: AsChartEvolutionCdb;\r\n    customOtfs: AsChartEvolutionCustomOtf;\r\n\r\n    constructor() {\r\n        this.brut = new AsChartEvolutionCdb();\r\n        this.noIntTransfer = new AsChartEvolutionCdb();\r\n        this.customOtfs = new AsChartEvolutionCustomOtf();\r\n    }\r\n}\r\n\r\nexport class AsChartEvolutionCdb {\r\n    debit: WidgetCardChartBar;\r\n    credit: WidgetCardChartBar;\r\n    balance: WidgetCardChartBar;\r\n}\r\n\r\nexport class AsChartEvolutionCustomOtf {\r\n    filter: AsChartEvolutionCustomOtfFilter=new AsChartEvolutionCustomOtfFilter();\r\n    widgetCardChartBars: WidgetCardChartBar[]=null;\r\n}\r\n\r\nexport class AsChartEvolutionCustomOtfFilter {\r\n    selected: AsChartEvolutionCustomOtfFilterSelected;\r\n    operationTypeFamilies: ISelectGroup[]= null;\r\n    \r\n    constructor() {\r\n        this.selected = new AsChartEvolutionCustomOtfFilterSelected();\r\n    }\r\n}\r\n\r\nexport class AsChartEvolutionCustomOtfFilterSelected {\r\n    idAccount: number = null;\r\n    user: IUserForGroup = null;\r\n    monthYear: IMonthYear;\r\n    operationTypeFamilies: ISelect[] = null;\r\n}","import { AsChartEvolution } from \"./as-chart-evolution.model\";\r\nimport { AsChartCategorisation } from \"./as-chart-categorisation.model\";\r\n\r\n\r\nexport class AsChart {\r\n    asChartEvolution: AsChartEvolution;\r\n    asChartCategorisation: AsChartCategorisation;\r\n\r\n    constructor() {\r\n        this.asChartEvolution = new AsChartEvolution();\r\n        this.asChartCategorisation = new AsChartCategorisation();\r\n    }\r\n}\r\n\r\n\r\n\r\n","export class PieChart {\r\n    // currentRange : string;\r\n    legend       : boolean;\r\n    explodeSlices: boolean;\r\n    labels       : boolean;\r\n    doughnut     : boolean;\r\n    gradient     : boolean;\r\n    scheme       : Scheme;\r\n\r\n    constructor( colors:string[]) {\r\n        this.legend         = false;\r\n        this.explodeSlices  = true;\r\n        this.labels         = true;\r\n        this.doughnut       = false;\r\n        this.gradient       = true;\r\n        \r\n        // this.currentRange   = currentRange;\r\n        this.scheme         = new Scheme(colors);\r\n\r\n    }\r\n    // onSelect(ev) => {\r\n    //       console.log(ev);\r\n    //   }\r\n}\r\n\r\nclass Scheme {\r\n    domain       : string[];\r\n\r\n    constructor(domain: string[]) {\r\n        this.domain=domain;\r\n    }\r\n}","import { BaseChart } from \"./base-chart.model\";\r\n\r\nexport class WidgetCardChartBar {\r\n    chart: BaseChart;\r\n    title: WidgetCardChartBarTitle;\r\n    isLoaded: boolean;\r\n\r\n    constructor () {\r\n        this.chart = null;\r\n        this.title = null;\r\n        this.isLoaded =false;\r\n    }\r\n}\r\n\r\nexport class WidgetCardChartBarTitle {\r\n    label: string;\r\n    averageAmount: number;\r\n    ratioNumber: number;\r\n    ratioLabel: string;\r\n}\r\n","import { Scheduler } from \"rxjs\";\r\nimport { PieChart } from \"./pie-chart.model\";\r\nimport { ComboMultiple, ComboNameValueMultiple,} from \"../generics/combo.model\";\r\nimport { ISelect, SelectNameValue, SelectNameValueGroup } from \"../generics/select.model\";\r\n\r\nexport class WidgetCardChartPieSelect {\r\n    pieChart: PieChart;\r\n    data: DataPieChart;\r\n    isLoaded: boolean;\r\n\r\n    constructor (colors:string[]) {\r\n        this.pieChart = new PieChart(colors);\r\n        this.data = null;\r\n        this.isLoaded =false;\r\n    }\r\n}\r\n\r\nexport class DataPieChart {\r\n    title : string;\r\n    ranges:  ComboNameValueMultiple<SelectNameValueGroup<number>, number>; // ComboMultipleValue<number>;\r\n    mainChart: SelectNameValue<number>[];\r\n}\r\n\r\n","import { Pagination } from \"../pagination.model\";\r\nimport { IMonthYear, DateTimeFactory } from \"../generics/date-time.model\";\r\nimport { ISelect, ISelectGroup } from \"../generics/select.model\";\r\nimport { IUserForGroup } from \"../user.model\";\r\nimport { FilterDateRange } from \"./mini-filter/date-range.filter\";\r\nimport { FilterNumberRange } from \"./mini-filter/number-range.filter\";\r\n\r\nexport class FilterAsTableSelected {\r\n    idAccount: number = null;\r\n    user: IUserForGroup= null;\r\n    operationMethod: ISelect[] = null;\r\n    operationTypeFamily: ISelect[] = null;\r\n    operationType: ISelect[] = null;\r\n    operation: ISelect[] = null;\r\n    dateIntegration: FilterDateRange = null; \r\n    // dateIntegrationMax: Date = null; \r\n    amountOperation: FilterNumberRange = null;\r\n    // amountMax: number = null;\r\n    monthYear: IMonthYear = this.getMonthYear();\r\n    isWithItTransfer: boolean;\r\n    pagination: Pagination = null;\r\n\r\n    getMonthYear() {\r\n        var currentDate = new Date();\r\n        currentDate.setMonth(currentDate.getMonth()-1);\r\n        var id = currentDate.getMonth()+1;\r\n        let month =  DateTimeFactory.getMonths.filter(x=>x.id===id)[0];\r\n        let monthYear = <IMonthYear> {\r\n            month: month,\r\n            year: currentDate.getFullYear() \r\n        }\r\n        return monthYear;\r\n    }\r\n   \r\n}\r\n\r\nexport class FilterAsTable {\r\n    operationMethod: ISelect[];\r\n    operationTypeFamily: ISelectGroup[];\r\n    operationType: ISelectGroup[];\r\n    operation: ISelect[];\r\n\r\n    selected : FilterAsTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterAsTableSelected();\r\n    }\r\n}\r\n\r\nexport class FilterAsDetail {\r\n    idAs: number;\r\n    user: IUserForGroup;\r\n}\r\n\r\n\r\n\r\n","export class FilterDateRange {\r\n    // placeholder: string;\r\n    dateMin: Date;\r\n    dateMax: Date;\r\n}","export class FilterNumberRange {\r\n    // placeholder: string;\r\n    // suffixIcon: string;\r\n    numberMin: number;\r\n    numberMax: number;\r\n}","import { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { AsChartEvolutionCdb, AsChartEvolutionCustomOtfFilter, AsChartEvolutionCustomOtfFilterSelected } from \"app/main/_models/account-statement/as-chart/as-chart-evolution.model\";\r\nimport { WidgetCardChartBar } from \"app/main/_models/chart/widget-card-chart-bar.model\";\r\nimport { AsChartCategorisationSelect } from \"app/main/_models/account-statement/as-chart/as-chart-categorisation.model\";\r\n\r\nexport const AS_CHART_EVOLUTION_LOAD = 'as-chart-evolution-load';\r\n// export const AS_CHART_EVOLUTION_LOAD_SUCCESS = 'as-chart-evolution-load-success';\r\n\r\nexport const AS_CHART_EVOLUTION_BRUT_LOAD = 'as-chart-evolution-brut-load';\r\n// export const AS_CHART_EVOLUTION_BRUT_LOAD_SUCCESS = 'as-chart-evolution-brut-load-success';\r\n\r\nexport const AS_CHART_EVOLUTION_NO_INT_TRANSFER_LOAD = 'as-chart-evolution-no-int-transfer-load';\r\n// export const AS_CHART_EVOLUTION_BRUT_NO_INT_TRANSFER_SUCCESS = 'as-chart-evolution-no-int-transfer-load-success';\r\n\r\nexport const AS_CHART_EVOLUTION_CUSTOM_OTF_LOAD = 'as-chart-evolution-custom-otf-load';\r\n// export const AS_CHART_EVOLUTION_CUSTOM_OTF_LOAD_SUCCESS = 'as-chart-evolution-custom-otf-load-success';\r\n\r\nexport const AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_LOAD = 'as-chart-evolution-custom-otf-filter-load';\r\n// export const AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_LOAD_SUCCESS = 'as-chart-evolution-custom-otf-filter-load-success';\r\n\r\nexport const AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_UPDATE = 'as-chart-evolution-custom-otf-filter-update';\r\n// export const AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_UPDATE_SUCCESS = 'as-chart-evolution-custom-otf-filter-update-success';\r\n\r\n\r\nexport const AS_CHART_CATEGORISATION_LOAD = 'as-chart-categorisation-load';\r\n// export const AS_CHART_CATEGORISATION_LOAD_SUCCESS = 'as-chart-categorisation-load-success'\r\n\r\nexport const AS_CHART_CATEGORISATION_DEBIT_LOAD = 'as-chart-categorisation-debit-load';\r\n// export const AS_CHART_CATEGORISATION_DEBIT_LOAD_SUCCESS = 'as-chart-categorisation-debit-load-success';\r\n\r\n\r\nexport class LoadAsChartEvolution {\r\n    static readonly type = AS_CHART_EVOLUTION_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartEvolutionSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_LOAD_SUCCESS;\r\n \r\n//     constructor() { }\r\n// }\r\n\r\n\r\nexport class LoadAsChartEvolutionBrut {\r\n    static readonly type = AS_CHART_EVOLUTION_BRUT_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartEvolutionBrutSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_BRUT_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: AsChartEvolutionCdb) { }\r\n// }\r\n\r\nexport class LoadAsChartEvolutionNoIntTransfer {\r\n    static readonly type = AS_CHART_EVOLUTION_NO_INT_TRANSFER_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartEvolutionNoIntTransferSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_BRUT_NO_INT_TRANSFER_SUCCESS;\r\n \r\n//     constructor(public payload: AsChartEvolutionCdb) { }\r\n// }\r\n\r\nexport class LoadAsChartEvolutionCustomOtf {\r\n    static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartEvolutionCustomOtfSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: WidgetCardChartBar[]) { }\r\n// }\r\n\r\nexport class LoadAsChartEvolutionCustomOtfFilter {\r\n    static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartEvolutionCustomOtfFilterSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: AsChartEvolutionCustomOtfFilter) { }\r\n// }\r\n\r\nexport class UpdateAsChartEvolutionCustomOtfFilter {\r\n    static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_UPDATE;\r\n \r\n    constructor(public payload: AsChartEvolutionCustomOtfFilterSelected) { }\r\n}\r\n\r\n// export class UpdateAsChartEvolutionCustomOtfFilterSuccess {\r\n//     static readonly type = AS_CHART_EVOLUTION_CUSTOM_OTF_FILTER_UPDATE_SUCCESS;\r\n \r\n//     constructor(public payload: AsChartEvolutionCustomOtfFilterSelected) { }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class LoadAsChartCategorisation {\r\n    static readonly type = AS_CHART_CATEGORISATION_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartCategorisationSuccess {\r\n//     static readonly type = AS_CHART_CATEGORISATION_LOAD_SUCCESS;\r\n \r\n//     constructor() { }\r\n// }\r\n\r\nexport class LoadAsChartCategorisationDebit {\r\n    static readonly type = AS_CHART_CATEGORISATION_DEBIT_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsChartCategorisationDebitSuccess {\r\n//     static readonly type = AS_CHART_CATEGORISATION_DEBIT_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: AsChartCategorisationSelect) { }\r\n// }\r\n","import { AsChartEvolutionCustomOtfFilterSelected } from \"app/main/_models/account-statement/as-chart/as-chart-evolution.model\";\r\nimport { AsService } from \"app/main/apps/account-statement/account-statement.service\";\r\nimport { LoadAsChartEvolutionBrut, LoadAsChartEvolutionNoIntTransfer, LoadAsChartEvolutionCustomOtf, LoadAsChartEvolution, LoadAsChartEvolutionCustomOtfFilter, UpdateAsChartEvolutionCustomOtfFilter, LoadAsChartCategorisation, LoadAsChartCategorisationDebit} from \"./account-statement-chart.action\";\r\nimport { WidgetCardChartBar } from \"app/main/_models/chart/widget-card-chart-bar.model\";\r\nimport { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { zip } from \"rxjs\";\r\nimport { AsChart } from \"app/main/_models/account-statement/as-chart/as-chart.model\";\r\nimport { AsChartCategorisationSelect } from \"app/main/_models/account-statement/as-chart/as-chart-categorisation.model\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\n\r\nexport class AsChartStateModel extends Datas<AsChart> {\r\n    constructor () {\r\n        super();\r\n        this.datas = new AsChart();\r\n    }\r\n}\r\n\r\nlet asChartStateModel = new AsChartStateModel();\r\n\r\n@State<AsChartStateModel>({\r\n    name: 'AsChart',\r\n    defaults : asChartStateModel\r\n})\r\n\r\nexport class AsChartState extends LoaderState {\r\n    constructor(\r\n        private _asService: AsService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: AsChartStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadAsChartEvolution)\r\n    loadAsChartEvolution(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolution) {\r\n        this.loading(context,'asChartEvolution');\r\n\r\n        const state = context.getState();\r\n        context.patchState(state);\r\n\r\n        zip(   \r\n            context.dispatch(new LoadAsChartEvolutionBrut(action.payload)),\r\n            context.dispatch(new LoadAsChartEvolutionNoIntTransfer(action.payload)),\r\n            context.dispatch(new LoadAsChartEvolutionCustomOtfFilter(action.payload)),\r\n            context.dispatch(new LoadAsChartEvolutionCustomOtf(action.payload))\r\n        ).subscribe(x=>{\r\n            let state = context.getState();\r\n            context.patchState(state);\r\n\r\n            this.loaded(context,'asChartEvolution');\r\n        });\r\n    }\r\n\r\n    // @Action(LoadAsChartEvolutionSuccess)\r\n    // LoadAsChartEvolutionSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionSuccess) {\r\n    //     let state = context.getState();\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    @Action(LoadAsChartEvolutionBrut)\r\n    loadAsChartEvolutionBrut(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionBrut) {\r\n        this.loading(context,'asChartEvolutionBrut');\r\n\r\n        const state = context.getState();\r\n        state.datas.asChartEvolution.brut.balance= new WidgetCardChartBar();\r\n        state.datas.asChartEvolution.brut.credit=new WidgetCardChartBar();\r\n        state.datas.asChartEvolution.brut.debit=new WidgetCardChartBar();\r\n        context.patchState(state);\r\n        \r\n        this._asService.getAsChartEvolutionBrut(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.asChartEvolution.brut = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'asChartEvolutionBrut');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadAsChartEvolutionBrutSuccess)\r\n    // LoadAsChartEvolutionBrutSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionBrutSuccess) {\r\n    //     let state = context.getState();\r\n\r\n    //     state.datas.asChartEvolution.brut = action.payload;\r\n\r\n    //     context.patchState(state);\r\n\r\n \r\n\r\n    // }\r\n\r\n    @Action(LoadAsChartEvolutionNoIntTransfer)\r\n    loadAsChartEvolutionNoIntTransfer(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionNoIntTransfer) {\r\n        this.loading(context,'asChartEvolutionNoIntTransfer');\r\n        \r\n        const state = context.getState();\r\n        state.datas.asChartEvolution.noIntTransfer.balance= new WidgetCardChartBar();\r\n        state.datas.asChartEvolution.noIntTransfer.credit=new WidgetCardChartBar();\r\n        state.datas.asChartEvolution.noIntTransfer.debit=new WidgetCardChartBar();\r\n        \r\n        context.patchState(state);\r\n        this._asService.getAsChartEvolutionNoIntTransfer(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.asChartEvolution.noIntTransfer = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'asChartEvolutionNoIntTransfer');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadAsChartEvolutionNoIntTransferSuccess)\r\n    // LoadAsChartEvolutionNoIntTransferSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionNoIntTransferSuccess) {\r\n    //     let state = context.getState();\r\n    //     // console.log('noIntTransfer',action.payload);\r\n    //     state.datas.asChartEvolution.noIntTransfer = action.payload;\r\n\r\n    //     context.patchState(state);\r\n\r\n\r\n    // }\r\n\r\n    @Action(LoadAsChartEvolutionCustomOtf)\r\n    loadAsChartEvolutionCustomOtf(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionCustomOtf) {\r\n        this.loading(context,'asChartEvolutionCustomOtf');\r\n        \r\n        const state = context.getState();\r\n        state.datas.asChartEvolution.customOtfs.widgetCardChartBars = null;\r\n        context.patchState(state);\r\n\r\n        this._asService.getAsChartEvolutionCustomOtf(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.asChartEvolution.customOtfs.widgetCardChartBars = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'asChartEvolutionCustomOtf');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadAsChartEvolutionCustomOtfSuccess)\r\n    // LoadAsChartEvolutionCustomOtfSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionCustomOtfSuccess) {\r\n    //     let state = context.getState();\r\n\r\n    //     // console.log('customOtf',action.payload);\r\n    //     state.datas.asChartEvolution.customOtfs.widgetCardChartBars = action.payload;\r\n\r\n    //     context.patchState(state);\r\n\r\n \r\n    // }\r\n    \r\n    @Action(LoadAsChartEvolutionCustomOtfFilter)\r\n    loadAsChartEvolutionCustomOtfFilter(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionCustomOtfFilter) {\r\n        this.loading(context,'asChartEvolutionCustomOtfFilter');\r\n        \r\n        const state = context.getState();\r\n        state.datas.asChartEvolution.customOtfs.filter.selected = new AsChartEvolutionCustomOtfFilterSelected();\r\n        state.datas.asChartEvolution.customOtfs.filter.operationTypeFamilies = [] ;\r\n        context.patchState(state);\r\n\r\n        this._asService.getAsChartEvolutionCustomOtfFilter(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.asChartEvolution.customOtfs.filter = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'asChartEvolutionCustomOtfFilter');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadAsChartEvolutionCustomOtfFilterSuccess)\r\n    // LoadAsChartEvolutionCustomOtfFilterSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartEvolutionCustomOtfFilterSuccess) {\r\n    //     let state = context.getState();\r\n\r\n    //     // console.log('customOtfFilter',action.payload);\r\n    //     state.datas.asChartEvolution.customOtfs.filter = action.payload;\r\n\r\n    //     context.patchState(state);\r\n\r\n    // }\r\n    \r\n\r\n    @Action(UpdateAsChartEvolutionCustomOtfFilter)\r\n    UpdateAsChartEvolutionCustomOtfFilter(context: StateContext<AsChartStateModel>, action: UpdateAsChartEvolutionCustomOtfFilter) {\r\n\r\n        this._asService.updateAsChartEvolutionCustomOtfFilter(action.payload)\r\n            .subscribe(result=> {\r\n                let filterAsTableSelected = <FilterAsTableSelected> {\r\n                    idAccount : action.payload.idAccount,\r\n                    user: action.payload.user,\r\n                    monthYear: action.payload.monthYear\r\n                };\r\n                \r\n                context.dispatch(new LoadAsChartEvolutionCustomOtfFilter(filterAsTableSelected));\r\n                context.dispatch(new LoadAsChartEvolutionCustomOtf(filterAsTableSelected));\r\n            });\r\n    }\r\n\r\n    // @Action(UpdateAsChartEvolutionCustomOtfFilterSuccess)\r\n    // UpdateAsChartEvolutionCustomOtfFilterSuccess(context: StateContext<AsChartStateModel>, action: UpdateAsChartEvolutionCustomOtfFilterSuccess) {\r\n    //     // let state = context.getState();\r\n        \r\n    //     let filterAsTableSelected = <FilterAsTableSelected> {\r\n    //         idAccount : action.payload.idAccount,\r\n    //         user: action.payload.user,\r\n    //         monthYear: action.payload.monthYear\r\n    //     };\r\n        \r\n    //     context.dispatch(new LoadAsChartEvolutionCustomOtfFilter(filterAsTableSelected));\r\n    //     context.dispatch(new LoadAsChartEvolutionCustomOtf(filterAsTableSelected));\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @Action(LoadAsChartCategorisation)\r\n    loadAsChartCategorisation(context: StateContext<AsChartStateModel>, action: LoadAsChartCategorisation) {\r\n        this.loading(context,'asChartCategorisation');\r\n\r\n        const state = context.getState();\r\n        context.patchState(state);\r\n\r\n        zip(   \r\n            context.dispatch(new LoadAsChartCategorisationDebit(action.payload))\r\n        ).subscribe(x=>{\r\n            let state = context.getState();\r\n            context.patchState(state);\r\n\r\n            this.loaded(context,'asChartCategorisation');\r\n        });\r\n\r\n    }\r\n\r\n    // @Action(LoadAsChartCategorisationSuccess)\r\n    // LoadAsChartCategorisationSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartCategorisationSuccess) {\r\n        \r\n\r\n    // }\r\n\r\n    @Action(LoadAsChartCategorisationDebit)\r\n    loadAsChartCategorisationDebit(context: StateContext<AsChartStateModel>, action: LoadAsChartCategorisationDebit) {\r\n        this.loading(context,'asChartCategorisationDebit');\r\n        \r\n        const state = context.getState();\r\n        state.datas.asChartCategorisation.debit = new AsChartCategorisationSelect();\r\n\r\n        context.patchState(state);\r\n        this._asService.GetAsChartCategorisationDebit(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.asChartCategorisation.debit = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'asChartCategorisationDebit');\r\n\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadAsChartCategorisationDebitSuccess)\r\n    // LoadAsChartCategorisationDebitSuccess(context: StateContext<AsChartStateModel>, action: LoadAsChartCategorisationDebitSuccess) {\r\n    //     let state = context.getState();\r\n\r\n    //     // console.log('action.payload-->DEBIT',action.payload);\r\n    //     state.datas.asChartCategorisation.debit = action.payload;\r\n\r\n    //     context.patchState(state);\r\n\r\n \r\n\r\n    // }\r\n}","import { FilterAsDetail } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { ISelect } from \"app/main/_models/generics/select.model\";\r\nimport { AsDetail } from \"app/main/_models/account-statement/account-statement-detail.model\";\r\nimport { FilterOperation } from \"app/main/_models/filters/operation.filter\";\r\n\r\nexport const AS_DETAIL_LOAD = 'as-detail-load';\r\n// export const AS_DETAIL_LOAD_SUCCESS = 'as-detail-load-success';\r\nexport const AS_DETAIL_OPERATION_TYPE_FAMILY_CHANGE = 'as-detail-operation-type-family-change'\r\n// export const AS_DETAIL_OPERATION_TYPE_FAMILY_CHANGE_SUCCESS = 'as-detail-operation-type-family-change-success'\r\nexport const AS_DETAIL_OPERATION_TYPE_CHANGE = 'as-detail-operation-type-change'\r\n// export const AS_DETAIL_OPERATION_TYPE_CHANGE_SUCCESS = 'as-detail-operation-type-change-success'\r\nexport const AS_DETAIL_CLEAR = 'as-detail-clear';\r\n\r\nexport class LoadAsDetail {\r\n    static readonly type = AS_DETAIL_LOAD;\r\n \r\n    constructor(public payload: FilterAsDetail) { }\r\n}\r\n\r\n// export class LoadAsDetailSuccess {\r\n//     static readonly type = AS_DETAIL_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: AsDetail) { }\r\n// }\r\n\r\nexport class ClearAsDetail {\r\n    static readonly type = AS_DETAIL_CLEAR;\r\n}\r\n\r\n//OperationTypeFamily CHANGE\r\nexport class asDetailChangeOperationTypeFamily {\r\n    static readonly type = AS_DETAIL_OPERATION_TYPE_FAMILY_CHANGE;\r\n    constructor(public payload: ISelect) { }\r\n}\r\n\r\n// export class asDetailChangeOperationTypeFamilySuccess {\r\n//     static readonly type = AS_DETAIL_OPERATION_TYPE_FAMILY_CHANGE_SUCCESS;\r\n \r\n//     constructor(public payload: ISelect[]) { }\r\n// }\r\n\r\n//OperationType CHANGE\r\nexport class asDetailChangeOperationType {\r\n    static readonly type = AS_DETAIL_OPERATION_TYPE_CHANGE;\r\n    constructor(public payload: FilterOperation) { }\r\n}\r\n\r\n// export class asDetailChangeOperationTypeSuccess {\r\n//     static readonly type = AS_DETAIL_OPERATION_TYPE_CHANGE_SUCCESS;\r\n \r\n//     constructor(public payload: ISelect[]) { }\r\n// }\r\n","import { ReferentialService } from \"app/main/_services/Referential/referential.service\";\r\nimport { LoadAsDetail, asDetailChangeOperationTypeFamily, asDetailChangeOperationType, ClearAsDetail } from \"./account-statement-detail.action\";\r\nimport { ComboSimple } from \"app/main/_models/generics/combo.model\";\r\nimport { ISelect, EnumSelectType } from \"app/main/_models/generics/select.model\";\r\nimport { AsDetail } from \"app/main/_models/account-statement/account-statement-detail.model\";\r\nimport { AsService } from \"app/main/apps/account-statement/account-statement.service\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class AsDetailStateModel extends Datas<AsDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet asDetailStateModel = new AsDetailStateModel();\r\n\r\n@State<AsDetailStateModel>({\r\n    name: 'AsDetail',\r\n    defaults : asDetailStateModel\r\n})\r\n\r\nexport class AsDetailState extends LoaderState {\r\n\r\n    constructor(\r\n        private _asService: AsService,\r\n        private _referentialService: ReferentialService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: AsDetailStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    // @Selector()\r\n    // static getFilter(state: PlanTableComboFilterStateModel) {\r\n    //     return state.filter;\r\n    // }\r\n\r\n    @Action(LoadAsDetail)\r\n    loadAsDetail(context: StateContext<AsDetailStateModel>, action: LoadAsDetail) {\r\n        this.loading(context,'datas');\r\n\r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._asService.getAsDetail(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n                console.log('result',result);\r\n                console.log('context',context);\r\n                this.loaded(context,'datas');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadAsDetailSuccess)\r\n    // loadSuccess(context: StateContext<AsDetailStateModel>, action: LoadAsDetailSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    @Action(ClearAsDetail)\r\n    clear(context: StateContext<AsDetailStateModel>) {\r\n        return context.setState(new AsDetailStateModel());\r\n    }\r\n\r\n    //====================================\r\n    //          OperationTypeFamily\r\n    //====================================\r\n    @Action(asDetailChangeOperationTypeFamily)\r\n    asDetailChangeOperationTypeFamily(context: StateContext<AsDetailStateModel>, action: asDetailChangeOperationTypeFamily) {\r\n        this.loading(context,'operationTypeFamily');\r\n\r\n        const state = context.getState();\r\n        state.datas.operationTypeFamily.selected = action.payload;\r\n        state.datas.operationType = new ComboSimple<ISelect>();\r\n        \r\n        context.patchState(state);\r\n        this._referentialService.operationTypeService.GetSelectList(action.payload.id,EnumSelectType.inconnu)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.operationType.list = result;\r\n                state.datas.operationType.selected = action.payload[0];\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'operationTypeFamily');\r\n            });\r\n    }\r\n\r\n    // @Action(asDetailChangeOperationTypeFamilySuccess)\r\n    // asDetailChangeOperationTypeFamilySuccess(context: StateContext<AsDetailStateModel>, action: asDetailChangeOperationTypeFamilySuccess) {\r\n       \r\n    //     let state = context.getState();\r\n    //     state.datas.operationType.list = action.payload;\r\n    //     state.datas.operationType.selected = action.payload[0];\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    //====================================\r\n    //          OperationType\r\n    //====================================\r\n    @Action(asDetailChangeOperationType)\r\n    asDetailChangeOperationType(context: StateContext<AsDetailStateModel>, action: asDetailChangeOperationType) {\r\n        this.loading(context,'operationType');\r\n        \r\n        const state = context.getState();\r\n        state.datas.operationType.selected = action.payload.operationType;\r\n        state.datas.operationMethod.selected = action.payload.operationMethod;\r\n        state.datas.operation = new ComboSimple<ISelect>();\r\n        context.patchState(state);\r\n        \r\n        this._referentialService.operationService.GetSelectList(action.payload.operationMethod.id,action.payload.operationType.id,EnumSelectType.inconnu)\r\n            .subscribe(result => {\r\n                let state = context.getState();\r\n                state.datas.operation.list = result;\r\n                state.datas.operation.selected = action.payload[0];\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'operationType');\r\n            });\r\n    }\r\n\r\n    // @Action(asDetailChangeOperationTypeSuccess)\r\n    // asifDetailChangeOperationTypeSuccess(context: StateContext<AsDetailStateModel>, action: asDetailChangeOperationTypeSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas.operation.list = action.payload;\r\n    //     state.datas.operation.selected = action.payload[0];\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n    \r\n}\r\n","import { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { InternalTransferCouple } from \"app/main/_models/account-statement/account-statement-internal-transfer.model\";\r\n\r\nexport const AS_INTERNAL_TRANSFER_LOAD = 'as-internal-transfer-load';\r\nexport const AS_INTERNAL_TRANSFER_LOAD_SUCCESS = 'as-internal-transfer-load-success';\r\nexport const AS_INTERNAL_TRANSFER_CHANGE = 'as-internal-transfer-change';\r\n\r\nexport class LoadAsInternalTransferCouple {\r\n    static readonly type = AS_INTERNAL_TRANSFER_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsInternalTransferCoupleSuccess {\r\n//     static readonly type = AS_INTERNAL_TRANSFER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: InternalTransferCouple[]) { }\r\n// }\r\n\r\nexport class ChangeAsInternalTransferFilter {\r\n    static readonly type = AS_INTERNAL_TRANSFER_CHANGE;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}","import { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { AsService } from \"app/main/apps/account-statement/account-statement.service\";\r\nimport { LoadAsInternalTransferCouple } from \"./as-internal-transfer.action\";\r\nimport { InternalTransferCouple } from \"app/main/_models/account-statement/account-statement-internal-transfer.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\nimport { DatasFilter } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class AsInternalTransferStateModel extends DatasFilter<InternalTransferCouple[],FilterAsTableSelected> {\r\n    constructor () {\r\n        super();\r\n        this.filter = new FilterAsTableSelected();\r\n    }\r\n}\r\n\r\nlet detailInfo = new AsInternalTransferStateModel();\r\n\r\n@State<AsInternalTransferStateModel>({\r\n    \r\n    name: 'asInternalTransfer',\r\n    defaults : detailInfo \r\n})\r\n\r\nexport class AsInternalTransferState extends LoaderState {\r\n    constructor(\r\n        private _asService: AsService\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: AsInternalTransferStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Selector()\r\n    static getFilter(state: FilterAsTableSelected) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadAsInternalTransferCouple)\r\n    loadGrid(context: StateContext<AsInternalTransferStateModel>, action: LoadAsInternalTransferCouple) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.filter = action.payload;\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._asService.getAsInternalTransferCouple(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            })\r\n    }\r\n\r\n    // @Action(LoadAsInternalTransferCoupleSuccess)\r\n    // loadSuccess(context: StateContext<AsInternalTransferStateModel>, action: LoadAsInternalTransferCoupleSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.dataInfos.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n        \r\n    // }\r\n\r\n\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterAsTable } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { AsService } from \"app/main/apps/account-statement/account-statement.service\";\r\nimport { LoadAsTableFilter, ChangeAsTableFilter, UpdatePaginationAsTableFilter } from \"./account-statement-filter.action\";\r\nimport { LoadAsTableDatas } from \"../account-statement-list/account-statement-list.action\";\r\nimport { Store, State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\n\r\nexport class AsTableFilterStateModel extends FilterInfo<FilterAsTable> {\r\n    constructor () {\r\n        super(FilterAsTable);\r\n    }\r\n}\r\n\r\nlet asTableFilterStateModel = new AsTableFilterStateModel();\r\n\r\n@State<AsTableFilterStateModel>({\r\n    name: 'AsTableFilter',\r\n    defaults : asTableFilterStateModel\r\n})\r\n\r\nexport class AsTableFilterState extends LoaderState {\r\n\r\n    constructor(\r\n        private _asService: AsService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    async delay(ms: number) {\r\n        await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\r\n      }\r\n\r\n    @Selector()\r\n    static get(state: AsTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    // @Selector()\r\n    // static getFilter(state: PlanTableComboFilterStateModel) {\r\n    //     return state.filter;\r\n    // }\r\n\r\n    @Action(LoadAsTableFilter)\r\n    loadAsTableFilter(context: StateContext<AsTableFilterStateModel>, action: LoadAsTableFilter) {\r\n        this.loading(context,'filters');\r\n        \r\n        const state = context.getState();\r\n        state.filters = null;\r\n    \r\n        context.patchState(state);\r\n        this._asService.getAsTableFilter(action.payload)\r\n            .subscribe(result=> {\r\n                //conserver le payload\r\n                let payload = JSON.parse(JSON.stringify(result.selected));\r\n                let state = context.getState();\r\n                state.filters = result; // action.payload;\r\n                context.patchState(state);\r\n\r\n                context.dispatch(new ChangeAsTableFilter(payload));\r\n\r\n                this.loaded(context,'filters');\r\n                // context.dispatch(new LoadAsTableFilterSuccess(result));\r\n            });\r\n    }\r\n\r\n    // @Action(LoadAsTableFilterSuccess)\r\n    // loadSuccess(context: StateContext<AsTableFilterStateModel>, action: LoadAsTableFilterSuccess) {\r\n        \r\n    //     // //conserver le payload\r\n    //     // let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n    //     // console.log('-->action.payload.selected',action.payload.selected)\r\n    //     // let state = context.getState();\r\n    //     // state.filters = action.payload;\r\n\r\n    //     // context.patchState(state);\r\n        \r\n    //     // context.dispatch(new ChangeAsTableFilter(payload));\r\n    // }\r\n        // this.delay(3000).then(any=>{\r\n    @Action(ChangeAsTableFilter)\r\n    changeFilter(context: StateContext<AsTableFilterStateModel>, action: ChangeAsTableFilter) {\r\n        this._store.dispatch(new LoadAsTableDatas(action.payload));\r\n     }\r\n\r\n    @Action(UpdatePaginationAsTableFilter)\r\n    UpdatePaginationAsTableFilter(context: StateContext<AsTableFilterStateModel>, action: UpdatePaginationAsTableFilter) {\r\n        const state = context.getState();\r\n        state.filters.selected.pagination = action.payload;\r\n        context.patchState(state);\r\n    }\r\n\r\n}","import { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\n\r\nexport const AS_SOLDE_LOAD = 'as-solde-load';\r\n// export const AS_SOLDE_LOAD_SUCCESS = 'as-solde-load-success';\r\nexport const AS_SOLDE_CHANGE = 'as-solde-change';\r\n\r\nexport class LoadAsSolde {\r\n    static readonly type = AS_SOLDE_LOAD;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}\r\n\r\n// export class LoadAsSoldeSuccess {\r\n//     static readonly type = AS_SOLDE_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\nexport class ChangeAsSoldeFilter {\r\n    static readonly type = AS_SOLDE_CHANGE;\r\n \r\n    constructor(public payload: FilterAsTableSelected) { }\r\n}","import { AsService } from \"app/main/apps/account-statement/account-statement.service\";\r\nimport { LoadAsSolde } from \"./account-statement-solde.action\";\r\nimport { FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\nimport { AsSolde } from \"app/main/_models/account-statement/account-statement-solde.model\";\r\nimport { State, Selector, StateContext, Action } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\nimport { DatasFilter } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class AsSoldeStateModel extends DatasFilter<AsSolde,FilterAsTableSelected> {\r\n    constructor () {\r\n        super();\r\n        this.filter = new FilterAsTableSelected();\r\n    }\r\n}\r\n\r\nlet detailInfo = new AsSoldeStateModel();\r\n\r\n@State<AsSoldeStateModel>({\r\n    \r\n    name: 'asSolde',\r\n    defaults : detailInfo \r\n})\r\n\r\nexport class AsSoldeState extends LoaderState {\r\n    constructor(\r\n        private _asService: AsService\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: AsSoldeStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Selector()\r\n    static getFilter(state: FilterAsTableSelected) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadAsSolde)\r\n    loadGrid(context: StateContext<AsSoldeStateModel>, action: LoadAsSolde) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.filter = action.payload;\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._asService.getAsSolde(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            })\r\n\r\n    }\r\n\r\n    // @Action(LoadAsSoldeSuccess)\r\n    // loadSuccess(context: StateContext<AsSoldeStateModel>, action: LoadAsSoldeSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.dataInfos.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n        \r\n    // }\r\n\r\n    // @Action(ChangeAsSoldeFilter)\r\n    // changeFilter(context: StateContext<AsSoldeStateModel>, action: ChangeAsSoldeFilter) {\r\n    //     const state = context.getState();\r\n    //     state.filter=action.payload\r\n\r\n\r\n    //     context.patchState(state);\r\n    //     context.dispatch(new LoadAsSolde(action.payload));\r\n    // }\r\n\r\n\r\n\r\n}","<div class=\"example-container-no-footer grey-100-bg\">\n  <div fxLayout=\"column\">\n      <div class=\"position-relative pt-24 pl-24 pr-24 pb-10 mat-blue-600-bg\"\n          fxLayoutAlign=\"space-between center\">\n          <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n              <span class=\"h2\">Evolution globale</span>\n              <span class=\"h5 secondary-text\">Evolution sur les 12 derniers mois. Comparaison de la moyenne des 12 derniers mois avec le mois en cours</span>\n          </div>\n      </div>\n\n      <mat-grid-list cols=\"3\" rowHeight=\"350px\"  >\n          <mat-grid-tile>\n            <app-widget-card-chart-pie-select [widget]=\"asChartCategorisationSelectOperationMethod\"\n              [@animate]=\"{value:'*',params:{y:'100%'}}\">\n            </app-widget-card-chart-pie-select>\n          </mat-grid-tile>\n          <mat-grid-tile>\n            <app-widget-card-chart-pie-select [widget]=\"asChartCategorisationSelectOperationTypeFamily\"\n              [@animate]=\"{value:'*',params:{y:'100%'}}\">\n            </app-widget-card-chart-pie-select>\n          </mat-grid-tile>\n          <mat-grid-tile>\n            <app-widget-card-chart-pie-select [widget]=\"asChartCategorisationSelectOperationType\"\n              [@animate]=\"{value:'*',params:{y:'100%'}}\">\n            </app-widget-card-chart-pie-select>\n          </mat-grid-tile>\n      </mat-grid-list>\n\n\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { AsChartState } from 'app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.state';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { AsChart } from 'app/main/_models/account-statement/as-chart/as-chart.model';\nimport { WidgetCardChartPieSelect } from 'app/main/_models/chart/widget-card-chart-pie-select.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'as-chart-categorisation',\n  templateUrl: './as-chart-categorisation.component.html',\n  styleUrls: ['./as-chart-categorisation.component.scss'],\n  animations   : fuseAnimations,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsChartCategorisationComponent implements OnInit {\n  @Select(AsChartState.get) asChart$: Observable<Datas<AsChart>>;\n\n  asChartCategorisationSelectOperationMethod: WidgetCardChartPieSelect;\n  asChartCategorisationSelectOperationTypeFamily: WidgetCardChartPieSelect;\n  asChartCategorisationSelectOperationType: WidgetCardChartPieSelect;\n\n  constructor() {\n    this.asChart$.subscribe(x=>{\n      this.asChartCategorisationSelectOperationMethod = x.datas.asChartCategorisation.debit.operationMethod;\n      this.asChartCategorisationSelectOperationTypeFamily = x.datas.asChartCategorisation.debit.operationTypeFamily;\n      this.asChartCategorisationSelectOperationType = x.datas.asChartCategorisation.debit.operationType;\n    });\n   }\n\n  ngOnInit() {\n  }\n\n}\n","\n<div class=\"example-container-no-footer grey-100-bg\">\n    <div fxLayout=\"column\">\n        <div class=\"position-relative pt-24 pl-24 pr-24 pb-10 mat-blue-600-bg\"\n            fxLayoutAlign=\"space-between center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n                <span class=\"h2\">Evolution globale</span>\n                <span class=\"h5 secondary-text\">Evolution sur les 12 derniers mois. Comparaison de la moyenne des 12 derniers mois avec le mois en cours</span>\n            </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n        <div>\n            <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionBrutDebit\"\n                [@animate]=\"{value:'*',params:{y:'100%'}}\" \n                fxFlex=30\n                >\n            </widget-card-chart-bar>\n        </div>\n        <div>\n            <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionBrutCredit\"\n                [@animate]=\"{value:'*',params:{y:'100%'}}\" \n                fxFlex=30\n            >\n            </widget-card-chart-bar>\n        </div>\n            <div>\n            <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionBrutBalance\"\n                \n                [@animate]=\"{value:'*',params:{y:'100%'}}\" \n                fxFlex=30\n            >\n            </widget-card-chart-bar>\n        </div>\n        </div>\n\n\n\n        <div class=\"position-relative pt-24 pl-24 pr-24 pb-10 mat-blue-600-bg\"\n            fxLayoutAlign=\"space-between center\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n            <span class=\"h2\">Evolution avec exclusion des virements internes</span>\n            <span class=\"h5 secondary-text\">Evolution sur les 12 derniers mois. Comparaison de la moyenne des 12 derniers mois avec le mois en cours</span>\n        </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n        <div>\n        <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionNoIntTransferDebit\"\n            [@animate]=\"{value:'*',params:{y:'100%'}}\" \n            fxFlex=30\n            >\n        </widget-card-chart-bar>\n        </div>\n        <div>\n        <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionNoIntTransferCredit\"\n            [@animate]=\"{value:'*',params:{y:'100%'}}\" \n            fxFlex=30\n        >\n        </widget-card-chart-bar>\n        </div>\n        <div>\n        <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionNoIntTransferBalance\"\n            \n            [@animate]=\"{value:'*',params:{y:'100%'}}\" \n            fxFlex=30\n        >\n        </widget-card-chart-bar>\n        </div>\n        </div>\n\n        <div class=\"position-relative pt-24 pl-24 pr-24 pb-10 mat-blue-600-bg\"\n            fxLayoutAlign=\"space-between center\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n            <span class=\"h2\">Evolution de catégories personnalisées</span>\n            <span class=\"h5 secondary-text\">Evolution sur les 12 derniers mois. Comparaison de la moyenne des 12 derniers mois avec le mois en cours</span>\n        </div>\n        <form *ngIf=\"(asChart$ | async).datas.asChartEvolution.customOtfs.filter as filter\"\n            name=\"operationForm\" \n            [formGroup]=\"customOtfForm\" fxFlex=\"20\"\n            class=\"mt-12\" fxLayout=\"column\" >\n                <mat-form-field appearance=\"outline\" floatLabel=\"always\" >\n                    <mat-label>Catégorie d'opérations</mat-label>\n                    <mat-select class=\"mini-select\" \n                        formControlName=\"operationTypeFamilies\" \n                        [compareWith]=\"compareObjects\" \n                        placeholder=\"Catégorie d'opérations\" \n                        (selectionChange)=\"change($event)\"\n                        multiple>\n                    \n                    <mat-optgroup *ngFor=\"let group of filter.operationTypeFamilies\" [label]=\"group.label\">\n                        <mat-option *ngFor=\"let item of group.selects\" [value]=\"item\">\n                        {{ item.label }}\n                        </mat-option>\n                    </mat-optgroup>\n                    </mat-select>\n        \n                </mat-form-field>\n            </form>\n        </div>\n\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\"  >\n            <div *ngFor=\"let asChartEvolutionCustomOtf of asChartEvolutionCustomOtfs\">\n                <widget-card-chart-bar [widgetCardChartBar]=\"asChartEvolutionCustomOtf\"\n                    \n                    [@animate]=\"{value:'*',params:{y:'100%'}}\" \n                    fxFlex=30\n                >\n                </widget-card-chart-bar>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit, Input, SimpleChanges, SimpleChange, OnChanges } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { AsChartState } from 'app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.state';\nimport { Observable } from 'rxjs';\nimport { AsChartEvolutionCustomOtfFilter, AsChartEvolutionCustomOtfFilterSelected } from 'app/main/_models/account-statement/as-chart/as-chart-evolution.model';\nimport { WidgetCardChartBar } from 'app/main/_models/chart/widget-card-chart-bar.model';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { UpdateAsChartEvolutionCustomOtfFilter } from 'app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.action';\nimport { AsChart } from 'app/main/_models/account-statement/as-chart/as-chart.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'as-chart-evolution',\n  templateUrl: './as-chart-evolution.component.html',\n  styleUrls: ['./as-chart-evolution.component.scss'],\n  animations   : fuseAnimations\n})\n\nexport class AsChartEvolutionComponent implements OnInit {\n  @Select(AsChartState.get) asChart$: Observable<Datas<AsChart>>;\n\n  customOtfForm: FormGroup;\n\n  asChartEvolutionBrutDebit: WidgetCardChartBar;\n  asChartEvolutionBrutCredit: WidgetCardChartBar;\n  asChartEvolutionBrutBalance: WidgetCardChartBar;\n\n  asChartEvolutionNoIntTransferDebit: WidgetCardChartBar;\n  asChartEvolutionNoIntTransferCredit: WidgetCardChartBar;\n  asChartEvolutionNoIntTransferBalance: WidgetCardChartBar;\n\n  asChartEvolutionCustomOtfs: WidgetCardChartBar[];\n  asChartEvolutionCustomOtfFilter : AsChartEvolutionCustomOtfFilter;\n  \n  constructor(\n    private _formBuilder: FormBuilder,\n    private _store: Store\n  ) {\n    this.asChart$.subscribe(x=>{\n      this.asChartEvolutionBrutDebit = x.datas.asChartEvolution.brut.debit;\n      this.asChartEvolutionBrutCredit = x.datas.asChartEvolution.brut.credit;\n      this.asChartEvolutionBrutBalance = x.datas.asChartEvolution.brut.balance;\n\n      this.asChartEvolutionNoIntTransferDebit = x.datas.asChartEvolution.noIntTransfer.debit;\n      this.asChartEvolutionNoIntTransferCredit = x.datas.asChartEvolution.noIntTransfer.credit;\n      this.asChartEvolutionNoIntTransferBalance = x.datas.asChartEvolution.noIntTransfer.balance;\n    \n      this.asChartEvolutionCustomOtfs = x.datas.asChartEvolution.customOtfs.widgetCardChartBars;\n      this.asChartEvolutionCustomOtfFilter = x.datas.asChartEvolution.customOtfs.filter;\n\n      this.customOtfForm = this._formBuilder.group({\n        operationTypeFamilies: [this.asChartEvolutionCustomOtfFilter.selected.operationTypeFamilies]\n      });\n\n      this.onChanges();\n    });\n   }\n\n  ngOnInit() {\n    \n\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   // const name: SimpleChange = changes.headerPanelIsVisible;\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;;\n  // }\n\n  onChanges() {\n    this.customOtfForm.get('operationTypeFamilies').valueChanges\n        .subscribe(val => {\n          \n          let filter = <AsChartEvolutionCustomOtfFilterSelected> {\n            idAccount : this.asChartEvolutionCustomOtfFilter.selected.idAccount,\n            user: this.asChartEvolutionCustomOtfFilter.selected.user,\n            monthYear: this.asChartEvolutionCustomOtfFilter.selected.monthYear,\n            operationTypeFamilies:val\n          };\n          this._store.dispatch(new UpdateAsChartEvolutionCustomOtfFilter(filter));\n          \n        });\n  }\n\n  change($event) {\n\n    //this.asChartEvolutionCustomOtfFilter.operationTypeFamiliesSelected = this.customOtfForm.get('operationTypeFamilies').value;\n    //this._store.dispatch(new UpdateAsChartEvolutionCustomOtfFilter(this.asChartEvolutionCustomOtfFilter));\n\n  }\n\n  compareObjects(o1: ISelect, o2: ISelect) {\n    return o1 && o2 ? o1.id === o2.id : o1 === o2;\n  }\n\n}\n","<div id=\"product\" class=\"page-layout carded fullwidth inner-scroll\">\n\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent\"></div>\n  <!-- / TOP BACKGROUND -->\n\n  <!-- CENTER -->\n  <div class=\"center\">\n\n      <!-- HEADER -->\n      <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n          <!-- APP TITLE -->\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button class=\"mr-0 mr-sm-16\" mat-icon-button [routerLink]=\"['/apps/account-statements/accounts',idAccount]\" [queryParams]=\"{ idTab: 2 }\">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n\n            <div class=\"product-image mr-8 mr-sm-16\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                <img *ngIf=\"formLoaded && asDetail\" [src]=\"asDetail.logoUrl\">\n            </div>\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                <div class=\"h2\" *ngIf=\"formLoaded && asDetail\" >\n                    {{asDetail.labelOperation}}\n                </div>\n                <div class=\"subtitle secondary-text\">\n                    <span>Détail de l'opération</span>\n                </div>\n            </div>\n        </div>\n          <!-- / APP TITLE -->\n\n        <button mat-raised-button *ngIf=\"formLoaded && asDetail\"\n            class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n            [disabled]= \"asDetailForm.invalid \n                || asDetailForm.pristine \n                || (asDetail.isLocalisable && asDetail.operationPlace.selected.id>3 && asDetail.operationDetail.gMapAddress.id==1)\"\n            (click)=\"updateAs()\"\n        >\n            <span>SAVE</span>\n        </button>\n    </div>\n      <!-- / HEADER -->\n\n      <!-- CONTENT CARD -->\n    <div class=\"content-card mat-white-bg\">\n\n        <!-- CONTENT -->\n        <div class=\"content\" >\n\n        <form *ngIf=\"formLoaded && asDetail\"\n            name=\"asDetailForm\" \n            [formGroup]=\"asDetailForm\" \n            class=\"product w-100-p\" fxLayout=\"column\" fxFlex\n        >\n\n            <mat-tab-group>\n                <mat-tab label=\"Détail\">\n                    <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                    <mat-form-field class=\"w-100-p\">\n                            <input matInput\n                                    name=\"labelOperation\"\n                                    formControlName=\"labelOperation\"\n                                    placeholder=\"Libellé opération\">\n                    </mat-form-field>\n\n                    <!-- <mat-form-field class=\"w-100-p\">\n                        <input matInput [matDatepicker]=\"dpIntegration\" formControlName=\"dateIntegration\" placeholder=\"Date intégration\" disabled> \n                        <mat-datepicker-toggle matSuffix [for]=\"dpIntegration\"></mat-datepicker-toggle>\n                        <mat-datepicker #dpIntegration disabled=\"false\"></mat-datepicker>\n                    </mat-form-field> -->\n\n                    <mat-form-field class=\"w-100-p\">\n                        <input\n                            matInput\n                            name=\"dateIntegration\"\n                            formControlName=\"dateIntegration\"\n                            placeholder=\"Date intégration\">\n                    </mat-form-field>\n\n                        <mat-form-field class=\"w-100-p\">\n                            <input matInput\n                                    name=\"amountOperation\"\n                                    formControlName=\"amountOperation\"\n                                    placeholder=\"Montant\" type=\"number\">\n                            <span matPrefix >€&nbsp;</span>\n                            <mat-icon *ngIf=\"asDetail.amountOperation>0\" matSuffix  class=\"green-fg mr-2\">trending_up</mat-icon>\n                            <mat-icon *ngIf=\"asDetail.amountOperation<0\" matSuffix  class=\"red-fg mr-2\">trending_down</mat-icon>\n                        </mat-form-field>\n                    \n                    </div>\n                </mat-tab>\n\n                <mat-tab label=\"Classification\">\n                    <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                        <mat-form-field class=\"w-100-p\" >\n                            <mat-select formControlName=\"operationMethod\" placeholder=\"Méthodes d'opération\" [compareWith]=\"compareObjects\" >\n                                <mat-option *ngFor=\"let item of asDetail.operationMethod.list\" [value]=\"item\">\n                                    {{ item.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        \n                        <mat-error *ngIf=\"asDetailForm.get('operationTypeFamily').errors && asDetailForm.get('operationTypeFamily').hasError('isUnknown')\">\n                            <p>La sélection ne doit pas être inconnue</p>\n                        </mat-error>\n                        <mat-form-field class=\"w-100-p\">\n                            <mat-select formControlName=\"operationTypeFamily\" \n                                placeholder=\"Catégories d'opération\"  [compareWith]=\"compareObjects\">\n                                <mat-option *ngFor=\"let item of asDetail.operationTypeFamily.list\" [value]=\"item\">\n                                    {{ item.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <mat-error *ngIf=\"asDetailForm.get('operationType').errors && asDetailForm.get('operationType').hasError('isUnknown')\">\n                            <p>La sélection ne doit pas être inconnue</p>\n                        </mat-error>\n                        <mat-form-field class=\"w-100-p\">\n                            <mat-select matInput formControlName=\"operationType\" placeholder=\"Types d'opération\" [compareWith]=\"compareObjects\" >\n                                <mat-option *ngFor=\"let item of asDetail.operationType.list\" [value]=\"item\">\n                                    {{ item.label }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <div *ngIf=\"!isNewOperationTemplate\">\n                            <mat-error *ngIf=\"asDetailForm.get('operation').errors && asDetailForm.get('operation').hasError('isUnknown')\">\n                                <p>La sélection ne doit pas être inconnue</p>\n                            </mat-error>\n                            <div class=\"w-100-p\">\n                                <mat-form-field fxFlex>\n                                    <mat-select matInput formControlName=\"operation\" placeholder=\"Opérations\" [compareWith]=\"compareObjects\" >\n                                        <mat-option *ngFor=\"let item of asDetail.operation.list\" [value]=\"item\">\n                                            {{ item.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <button mat-mini-fab type=\"button\" (click)=\"isNewOperationTemplate=!isNewOperationTemplate\">\n                                    <mat-icon style=\"color:white\">add</mat-icon>\n                                </button>\n                            </div>\n                        </div>\n\n                        <form *ngIf=\"isNewOperationTemplate\"  name=\"operationAddForm\" [formGroup]=\"operationAddForm\" >\n                            <div class=\"w-100-p\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                <div class=\"h2 secondary-text\">Proposition d'opération</div>\n                            </div>\n                            <div class=\"w-100-p\" fxLayout=\"row\">\n                                <mat-form-field fxFlex>\n                                    <input matInput\n                                        name=\"operationLabelTemp\"\n                                        formControlName=\"operationLabelTemp\"\n                                        placeholder=\"Opération\">\n                                </mat-form-field>\n                                \n                                <button mat-mini-fab type=\"button\" (click)=\"isNewOperationTemplate=!isNewOperationTemplate\">\n                                    <mat-icon style=\"color:white\">keyboard_return</mat-icon>\n                                </button>\n                            </div>\n                            \n                            <button mat-raised-button \n                                class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                                [disabled]=\"operationAddForm.invalid || operationAddForm.get('operationLabelTemp').errors\" (click)=\"addOperation()\">\n                                <span>VALIDER</span>\n                            </button>\n                            <mat-error *ngIf=\"operationAddForm.get('operationLabelTemp').errors && operationAddForm.get('operationLabelTemp').hasError('isUnknown')\">\n                                <p>L'opération doit contenir un libellé</p>\n                            </mat-error>\n                        </form>\n\n                        <div *ngIf=\"!isNewOperationTransverseTemplate\">\n                            <div class=\"w-100-p\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n                                <mat-form-field class=\"w-90-p\" fxFlex appearance=\"outline\" floatLabel=\"always\">\n                                    <mat-label>Opérations transverse</mat-label> \n                                    <mat-select \n                                        matInput \n                                        formControlName=\"operationTransverse\" \n                                        placeholder=\"Opérations transverse\" \n                                        [compareWith]=\"compareObjects\" \n                                        (selectionChange)=\"bindAsDetail(operationTransverseAddForm)\"\n                                        multiple>\n                                        <mat-option *ngFor=\"let item of asDetail.operationTransverse.list\" [value]=\"item\">\n                                            {{ item.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <div class=\"w-10-p pb-20\"  fxLayoutAlign=\"end center\">\n                                    <button  mat-mini-fab type=\"button\" (click)=\"isNewOperationTransverseTemplate=!isNewOperationTransverseTemplate\">\n                                        <mat-icon style=\"color:white\">add</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                            \n                        <form *ngIf=\"isNewOperationTransverseTemplate\"  name=\"operationTransverseAddForm\" [formGroup]=\"operationTransverseAddForm\" >\n                            <div class=\"w-100-p\" fxLayout=\"row\">\n                                <mat-form-field class=\"w-90-p\" appearance=\"outline\" floatLabel=\"always\" fxFlex>\n                                    <mat-label>Opération transverse</mat-label> \n                                    <input matInput\n                                        name=\"operationTransverse\"\n                                        formControlName=\"operationTransverse\" \n                                        placeholder=\"Opération transverse\"\n                                    >\n                                </mat-form-field>\n                                <div class=\"w-10-p pb-20\"  fxLayoutAlign=\"end center\">\n                                    <button mat-mini-fab type=\"button\" (click)=\"isNewOperationTransverseTemplate=!isNewOperationTransverseTemplate\">\n                                        <mat-icon style=\"color:white\">keyboard_return</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            \n                            <button mat-raised-button \n                                class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                                [disabled]=\"operationTransverseAddForm.invalid\" (click)=\"addOperationTransverse()\">\n                                <span>VALIDER</span>\n                            </button>\n                            <mat-error *ngIf=\"operationTransverseAddForm.get('operationTransverse').errors\">\n                                <p>L'opération transverse doit contenir un libellé</p>\n                            </mat-error>\n                        </form>\n                    </div>\n                </mat-tab>\n                \n                <mat-tab label=\"Mots clefs\">\n                    <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                        <div class=\"w-100-p\" fxLayout=\"row\" style=\"margin-bottom:20px\">       \n                        <mat-card  style=\"width:100%\">\n                            <mat-card-header>\n                                <div mat-card-avatar><mat-icon>feedback</mat-icon></div>\n                                <mat-card-title>Les mots clefs permettent de retrouver les informations dans le libellé d'opérations.</mat-card-title>\n                                <mat-card-subtitle>Un mot clef ne doit pas comporter d'espace, ni de caractères spéciaux (-/*)</mat-card-subtitle>\n                            </mat-card-header>\n                        </mat-card> \n                    </div>\n\n                        \n                        <div class=\"w-100-p\" fxLayout=\"row\">\n                            <mat-form-field fxFlex>\n                                <input matInput\n                                    name=\"operationKeywordTemp\"\n                                    formControlName=\"operationKeywordTemp\"\n                                    placeholder=\"Mot clef pour recherche de l'opération\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"w-100-p\" fxLayout=\"row\" *ngIf=\"asDetail.isLocalisable && asDetail.operationDetail.gMapAddress.id!=2 && asDetail.operationDetail.gMapAddress.id!=3\" >\n                            <mat-form-field fxFlex>\n                                <input matInput \n                                    name=\"placeKeywordTemp\"\n                                    formControlName=\"placeKeywordTemp\"\n                                    placeholder=\"Mot clef pour recherche du lieu d'opération\">\n                            </mat-form-field>\n                        </div>\n                        <mat-error *ngIf=\"asDetailForm.get('placeKeywordTemp').errors && asDetailForm.get('placeKeywordTemp').hasError('isLocalisable')\">\n                            <p>La sélection ne doit pas être vide</p>\n                        </mat-error>\n                    </div>\n                </mat-tab>\n                \n                <mat-tab label=\"Géolocalisation\" [disabled]=\"asDetail && !asDetail.isLocalisable\">\n                    <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                        <mat-error *ngIf=\"asDetailForm.get('operationPlace').errors && asDetailForm.get('operationPlace').hasError('isUnknown')\">\n                            <p>La sélection ne doit pas être inconnue</p>\n                        </mat-error>\n                        <div class=\"w-100-p\" fxLayout=\"row\">\n                            <mat-form-field fxFlex>\n                                <mat-select formControlName=\"operationPlace\" placeholder=\"Lieu opération\" [compareWith]=\"compareObjects\" >\n                                    <mat-option *ngFor=\"let item of asDetail.operationPlace.list\" [value]=\"item\">\n                                        {{ item.label }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        \n                        <g-map-search *ngIf=\"asDetail.gMapSearchInfo\" [gMapSearchInfo]=\"asDetail.gMapSearchInfo\" (changeGMapAddress)=\"onChangeGMapAddress($event)\"></g-map-search>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </form>\n\n        </div>\n        <!-- / CONTENT -->\n\n    </div>\n      <!-- / CONTENT CARD -->\n\n  </div>\n  <!-- / CENTER -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { NotificationsService } from 'angular2-notifications';\nimport { ValidateIsUnknown, ValidatorIfLocalisable } from './account-statement-detail.validator';\nimport { IOperation } from 'app/main/_models/referential/operation.model';\nimport { GMapSearchInfo } from 'app/main/_models/g-map.model.';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { ReferentialService } from 'app/main/_services/Referential/referential.service';\nimport { AsService } from '../account-statement.service';\nimport { FilterAsTable, FilterAsDetail } from 'app/main/_models/filters/account-statement.filter';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { AsDetailState } from 'app/main/_ngxs/account-statement/account-statement-detail/account-statement-detail.state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { LoadAsDetail, asDetailChangeOperationTypeFamily, asDetailChangeOperationType, ClearAsDetail } from 'app/main/_ngxs/account-statement/account-statement-detail/account-statement-detail.action';\nimport { OperationTransverse } from 'app/main/_models/referential/operation-transverse.model';\nimport { IUser } from 'app/main/_models/user.model';\nimport { LoadAsTableDatas } from 'app/main/_ngxs/account-statement/account-statement-list/account-statement-list.action';\nimport { AsDetail } from 'app/main/_models/account-statement/account-statement-detail.model';\nimport { FilterOperation } from 'app/main/_models/filters/operation.filter';\nimport * as moment from 'moment';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'account-statement-detail',\n  templateUrl: './account-statement-detail.component.html',\n  styleUrls: ['./account-statement-detail.component.scss'],\n  animations : fuseAnimations\n})\nexport class AccountStatementDetailComponent implements OnInit {\n  @Select(AsDetailState.get) asDetail$: Observable<Datas<AsDetail>>;\n  @Select(AsTableFilterState.get) asTableFilter$: Observable<FilterInfo<FilterAsTable>>;\n\n  user: IUser= JSON.parse(localStorage.getItem('currentUser'));\n  filterAsTable: FilterAsTable;\n  asDetail: AsDetail;\n  formLoaded: boolean;\n\n  idAccount: number;\n     \n  asDetailForm: FormGroup;\n  operationAddForm: FormGroup;\n  operationTransverseAddForm: FormGroup;\n  \n  isNewOperationTemplate: boolean;\n  isNewOperationTransverseTemplate: boolean;\n  firstLoad: boolean=true;\n\n    constructor(\n\n      private _activatedRoute: ActivatedRoute,\n      private _store : Store,\n      private _asService: AsService,\n      private _referentialService: ReferentialService,\n      private _formBuilder: FormBuilder,\n      private _datePipe: DatePipe,\n      private _notificationService: NotificationsService\n  \n    ) {\n      this.asTableFilter$.subscribe(asifTableFilter=>{\n        this.filterAsTable = JSON.parse(JSON.stringify(asifTableFilter.filters));\n      });\n  \n      this.asDetail$.subscribe(asDetail=>{\n        \n        if(asDetail.loader['datas'] && asDetail.loader['datas'].loaded) {\n          this.asDetail = JSON.parse(JSON.stringify(asDetail.datas));\n          console.log('asDetail',this.asDetail);\n          if(this.firstLoad) {\n            //creation du formulaire\n            this.createForms();\n            this.firstLoad=false;\n          }\n          this.formLoaded=true;\n        }\n      });\n     }\n  \n    ngOnInit() {\n      \n      this._activatedRoute.params.subscribe(routeParams => {\n        this.idAccount = routeParams['idAccount'];\n        let idAccountStatement = routeParams['idAccountStatement'];\n  \n        this._store.dispatch(new LoadAsDetail(<FilterAsDetail> {idAs:idAccountStatement}));\n\n        //chargement si page chargé directement sans passer par la liste\n        if(this.filterAsTable && this.filterAsTable.selected.idAccount==null && this.idAccount!=null) {\n          let filter = new FilterAsTable();\n          filter.selected.idAccount=this.idAccount;\n        }\n      });\n    }\n    \n    ngOnDestroy() {\n      this._store.dispatch(new ClearAsDetail());\n    }\n    \n    bindAsDetail(value: any) {\n      \n      this.asDetail.operationTransverse.listSelected = this.asDetailForm.controls['operationTransverse'].value; \n    }\n\n    createForms() {\n\n      this.asDetailForm = this._formBuilder.group({\n        \n          operationMethod: [this.asDetail.operationMethod.selected, [Validators.required]],\n          operationTypeFamily: [this.asDetail.operationTypeFamily.selected, [Validators.required, ValidateIsUnknown]],\n          operationType: [this.asDetail.operationType.selected, [Validators.required, ValidateIsUnknown]],\n          operation: [this.asDetail.operation.selected,[Validators.required, ValidateIsUnknown]],\n          operationTransverse: [this.asDetail.operationTransverse.listSelected],\n          amountOperation: [this.asDetail.amountOperation,[Validators.required]],\n          labelOperation: [this.asDetail.labelOperation,[Validators.required]],\n          dateIntegration: [this._datePipe.transform(this.asDetail.dateIntegration,\"dd/MM/yyyy\"),[Validators.required]],\n          // dateIntegration:[this.asDetail.dateIntegration.toISOString(),[Validators.required]],\n          operationKeywordTemp: [this.asDetail.operationDetail.keywordOperation,[Validators.required]],\n          placeKeywordTemp: [this.asDetail.operationDetail.keywordPlace,[ValidatorIfLocalisable(this.asDetail.isLocalisable)]],\n          operationPlace: [this.asDetail.operationPlace.selected,[Validators.required, ValidateIsUnknown]]\n        });\n  \n      this.asDetailForm.get('operationMethod').valueChanges\n        .subscribe(val => {\n          this.asDetailForm.controls['operation'].setValue({id:0,label:'INCONNU'});\n        });\n\n      this.asDetailForm.get('operationTypeFamily').valueChanges\n        .subscribe(val => {\n          this._store.dispatch(new asDetailChangeOperationTypeFamily(val));\n          this.asDetailForm.controls['operationType'].setValue({id:0,label:'INCONNU'});\n        });\n      \n      this.asDetailForm.get('operationType').valueChanges\n        .subscribe(val => {\n          let operationFilter=<FilterOperation> { operationType: val, operationMethod:this.asDetail.operationMethod.selected}\n          this._store.dispatch(new asDetailChangeOperationType(operationFilter));\n          this.asDetailForm.controls['operation'].setValue({id:0,label:'INCONNU'});\n        });\n\n      this.asDetailForm.get('operation').valueChanges\n        .subscribe(val => {\n          if(this.asDetail.isLocalisable)\n            this.asDetailForm.controls['operationPlace'].setValue({id:1,label:'INCONNU'});\n          else\n            this.asDetailForm.controls['operationPlace'].setValue({id:2,label:'NA'});\n        });\n      \n      this.asDetailForm.get('operationPlace')\n        .valueChanges\n        .subscribe(val => {\n          this.asDetail.operationPlace.selected=val;\n          this.asDetail.gMapSearchInfo=null;\n          if(this.asDetail.operationPlace.selected.id==4)\n          {\n            this.asDetail.gMapSearchInfo = <GMapSearchInfo> { \n              idGMapAddress: this.asDetail.operationDetail.gMapAddress.id>4 ? this.asDetail.operationDetail.gMapAddress.id  : 1,\n              operationPositionSearch: this.asDetail.operationDetail.keywordOperation,\n              operationPlaceSearch: this.asDetail.operationDetail.keywordPlace\n            };\n          } \n        });\n      \n      this.asDetailForm.valueChanges.subscribe(val=>{\n\n        this.asDetail.operationMethod.selected = val.operationMethod;\n        this.asDetail.operationTypeFamily.selected = val.operationTypeFamily;\n        this.asDetail.operationType.selected = val.operationType;\n        this.asDetail.operation.selected = val.operation;\n        this.asDetail.operationTransverse.listSelected = val.operationTransverse;\n        this.asDetail.amountOperation = val.amountOperation;\n        this.asDetail.labelOperation = val.labelOperation;\n        this.asDetail.dateIntegration = moment(val.dateIntegration,'DD/MM/YYYY').toDate();\n\n        this.asDetail.operationDetail.keywordOperation = val.operationKeywordTemp;\n        this.asDetail.operationDetail.keywordPlace = val.placeKeywordTemp;\n        this.asDetail.operationPlace.selected = val.operationPlace;\n        //TODO synchronize\n        // this._store.dispatch(new LoadAsDetailSuccess(this.asDetail));\n      });\n       \n      this.operationAddForm = this._formBuilder.group({\n          operationLabelTemp: [null,[Validators.required]]\n        });\n  \n      this.operationTransverseAddForm = this._formBuilder.group({\n          operationTransverse: [null,[Validators.required]]\n        });\n    }\n  \n    \n  \n    addOperation() {\n      const operationMethod:ISelect = this.asDetailForm.value.operationMethod;\n      const operationType: ISelect  = this.asDetailForm.value.operationType;\n      const keyword: string = this.operationAddForm.value.operationKeywordTemp;\n      const label: string = this.operationAddForm.value.operationLabelTemp;\n      \n      const operation: IOperation = <IOperation> {\n        id:0,\n        idOperationMethod: operationMethod.id,\n        idOperationType: operationType.id,\n        keyword: keyword,\n        label: label,\n        reference: null\n      };\n      \n      this._referentialService.operationService.Create(operation)\n        .subscribe(operation => {\n            let operationSelect = <ISelect>{id:operation.id,label:operation.label};\n            //maj du data avec les infos operation\n            this.asDetail.operation.selected = operationSelect;\n            this.asDetailForm.controls['operation'].setValue(this.asDetail.operation.selected);\n            this.asDetailForm.markAsDirty();\n\n            //Ajout de la nouvelle opération dans la liste Operation\n            this.asDetail.operation.list.push(operationSelect);\n            this.isNewOperationTemplate=false;\n\n            this._notificationService.success('Enregistrement effectué', `L'opération est enregistrée`);\n        });\n  \n    }\n    \n    addOperationTransverse() {\n      const label: string = this.operationTransverseAddForm.value.operationTransverse;\n        \n      const operationTransverse: OperationTransverse = <OperationTransverse> {\n        id:0,\n        label:label,\n        idUser:this.user.id\n      };\n      \n      this._referentialService.operationTransverseService.Create(operationTransverse)\n        .subscribe(operationTransverse => {\n            let operationTransverseSelect = <ISelect>{id:operationTransverse.id,label:operationTransverse.label};\n            //maj du data avec les infos operation transverse\n            this.asDetail.operationTransverse.listSelected.push(operationTransverseSelect);\n            this.asDetailForm.controls['operationTransverse'].setValue(this.asDetail.operationTransverse.listSelected);\n            this.asDetailForm.markAsDirty();\n\n            //Ajout de la nouvelle opération transverse dans la liste Operation transverse\n            this.asDetail.operationTransverse.list.push(operationTransverseSelect);\n            this.isNewOperationTransverseTemplate=false;\n            \n            this._notificationService.success('Enregistrement effectué', `L'opération transverse est enregistrée`);\n        });\n \n    }\n    \n    updateAs() {\n\n      // this.asDetail.amountOperation = this.asDetailForm.value.amountOperation;\n      // this.asDetail.labelOperation = this.asDetailForm.value.labelOperation;\n      // this.asDetail.operationMethod.selected = this.asDetailForm.value.operationMethod;\n      // this.asDetail.operationType.selected = this.asDetailForm.value.operationType;\n      // this.asDetail.operationTypeFamily.selected = this.asDetailForm.value.operationTypeFamily;\n      // this.asDetail.operation.selected = this.asDetailForm.value.operation;\n      \n\n      this._asService.update(this.asDetail).subscribe(resp=> {\n        if(resp==true)\n        {\n          this._notificationService.success('Enregistrement effectué', `Le relevé est enregistré`);\n          \n          this._store.dispatch(new LoadAsTableDatas(this.filterAsTable.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n      // ,\n      // error => {\n      //   this.notificationService.error('Echec de l\\'enregistrement', error);\n      // });\n  \n    }\n\n\n\n    onChangeGMapAddress($event) {\n      this.asDetail.operationDetail.gMapAddress=$event;\n      this.asDetail.gMapSearchInfo.idGMapAddress = $event.id;\n      \n      //TODO synchronize\n      // this._store.dispatch(new LoadAsDetailSuccess(this.asDetail));\n\n    }\n\n    compareObjects(o1: any, o2: any) {\n      if(o1.label == o2.label && o1.id == o2.id )\n      return true;\n      else return false;\n    }\n  \n    \n\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { ISelect } from 'app/main/_models/generics/select.model';\r\n\r\n\r\nexport function ValidateIsUnknown(control: AbstractControl) {\r\n    \r\n    var select=<ISelect>control.value;\r\n    \r\n    if (select.label=='INCONNU' || select.label=='INCONNUE') {\r\n        return { isUnknown: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n//   \r\nexport function ValidatorIfLocalisable(isLocalisable: boolean): ValidatorFn  {\r\n    return (control: AbstractControl): {[key: string]: any} => {\r\n        if(control.value==null || control.value=='')\r\n        {\r\n            if(isLocalisable)\r\n                return { isLocalisable: isLocalisable };\r\n        }\r\n        return null;\r\n    };\r\n\r\n}","<div \n    fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n    <div fxflex fxLayoutAlign=\"start center\">\n        <div *ngFor=\"let item of months\"\n\n            class=\"selected-project cursor-pointer\"\n            (click)=\"updateMonthsSelected(item)\"\n            (dblclick)=\"monthsSelected=[item]\"\n            [ngClass]=\"{'blue-600-bg': isInMonthSelected(item)}\">\n            {{ item.label }}\n        </div>\n    </div>\n    <div fxflex fxLayoutAlign=\"end center\" >\n        <div *ngIf=\"(asTableFilter$ | async).loader['datas']?.loaded; else emptyYear\" \n            class=\"selected-project\"\n        >\n            {{ (asTableFilter$ | async).filter.monthYear.year }}\n        </div>\n        <ng-template #emptyYear>\n            <div class=\"selected-project\"><mat-spinner [diameter]=\"15\"></mat-spinner></div>\n        </ng-template>\n\n        <button mat-icon-button \n            class=\"project-selector\" \n            [matMenuTriggerFor]=\"projectsMenu\"\n            aria-label=\"Select project\">\n            <mat-icon>more_horiz</mat-icon>\n        </button>\n\n        <mat-menu #projectsMenu=\"matMenu\">\n            <button mat-menu-item *ngFor=\"let year of years\" (click)=\"updateYearSelected(year)\">\n                <span>{{year}}</span>\n            </button>\n        </mat-menu>\n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DateTimeFactory } from 'app/main/_models/generics/date-time.model';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { FilterAsTableSelected } from 'app/main/_models/filters/account-statement.filter';\nimport { AsSoldeState } from 'app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.state';\nimport { AsSolde } from 'app/main/_models/account-statement/account-statement-solde.model';\nimport { DatasFilter } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'account-statement-filter',\n  templateUrl: './account-statement-filter.component.html',\n  styleUrls: ['./account-statement-filter.component.scss']\n})\nexport class AccountStatementFilterComponent implements OnInit {\n  @Select(AsSoldeState.get) asTableFilter$: Observable<DatasFilter<AsSolde,FilterAsTableSelected>>;\n  asTableFilterSelected: FilterAsTableSelected;\n\n  months: ISelect[];\n  years: number[]=[2015,2016,2017,2018,2019];\n\n  @Output() changeFilter = new EventEmitter<FilterAsTableSelected>();\n  \n  constructor(\n      private _store: Store\n  ) { \n    this.months = DateTimeFactory.getMonths;\n\n    // this.asTableFilter$.subscribe(filter => {\n    //   this.asTableFilter = filter.filters;\n    // });\n\n    this.asTableFilter$.subscribe(filter => {\n      this.asTableFilterSelected = filter.filter;\n    });\n\n    // this.tableInfo$.subscribe(gridInfo=> {\n    //   this.filter = gridInfo.filter;\n    // })\n  }\n\n  ngOnInit() {\n\n  }\n\n  updateMonthsSelected(month: ISelect){\n    this.asTableFilterSelected.monthYear.month = month;\n    this.changeFilter.emit(this.asTableFilterSelected);\n  }\n\n  updateYearSelected(year: number) {\n    this.asTableFilterSelected.monthYear.year = year;\n    this.changeFilter.emit(this.asTableFilterSelected);\n  \n  }\n\n  isInMonthSelected(month: ISelect) {\n    if(this.asTableFilterSelected)\n      return month.id==this.asTableFilterSelected.monthYear.month.id;\n\n      return 0;\n  }\n\n}\n","<div class=\"example-container\">\n  <div *ngIf=\"(asInternalTransferCouple$ | async).datas as couples\">\n    <div >\n      <mat-accordion class='example-headers-align'>\n          <mat-expansion-panel *ngFor=\"let couple of couples\" >\n            <mat-expansion-panel-header\n              [ngClass]=\"couple.asSecond==null ? 'bg-color' : 'bg-color-none'\"\n            >\n              <mat-panel-title \n                [ngClass]=\"couple.asSecond==null ? 'bg-color' : 'bg-color-none'\"\n              >\n                <mat-icon *ngIf=\"couple.asSecond==null\" class=\"red-icon\">warning</mat-icon>\n                <mat-icon *ngIf=\"couple.asSecond!=null\" class=\"green-icon\">check_circle</mat-icon>\n              </mat-panel-title>\n\n              <mat-panel-description\n                [ngClass]=\"couple.asSecond==null ? 'bg-color' : 'bg-color-none'\"\n              >\n              <div>{{couple.asFirst.labelOperation}} </div>\n                \n                \n              </mat-panel-description>\n              \n              <mat-panel-description\n              [ngClass]=\"couple.asSecond==null ? 'bg-color' : 'bg-color-none'\">\n                <div>{{couple.asFirst.dateIntegration | date:'dd/MM/yyyy'}}</div>\n                <div>{{couple.asFirst.amountOperation}} €</div>\n              </mat-panel-description>\n\n            </mat-expansion-panel-header>\n            <div *ngIf=\"couple.asSecond!=null\">\n                <div fxLayout=\"row\" *ngIf=\"couple.asFirst.amountOperation>0\">\n                    <mat-icon class=\"green-icon\">subdirectory_arrow_left</mat-icon>\n                    Réception depuis le compte:\n                </div>\n                <div fxLayout=\"row\" *ngIf=\"couple.asFirst.amountOperation<0\">\n                    <mat-icon class=\"red-icon\">subdirectory_arrow_right</mat-icon>\n                    <div >Emission vers le compte:</div>\n                </div>\n                <div><b fxFlex=\"30\">Banque:</b> {{couple.asSecond.bankAgency.label}}</div>\n                <div><b fxFlex=\"30\">Agence bancaire:</b> {{couple.asSecond.account.label}}</div>\n                <div><b fxFlex=\"30\">Libellé opération:</b> {{couple.asSecond.labelOperation}}</div>\n                <div><b fxFlex=\"30\">Date opération:</b> {{couple.asSecond.dateIntegration | date:'dd/MM/yyyy'}} </div>\n                <div><b fxFlex=\"30\">Montant opération:</b> {{couple.asSecond.amountOperation}} € </div>   \n            </div>\n            \n          </mat-expansion-panel>\n          <br>\n      </mat-accordion>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store, Select } from '@ngxs/store';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { Observable } from 'rxjs';\nimport { FilterAsTable, FilterAsTableSelected } from 'app/main/_models/filters/account-statement.filter';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { LoadAsInternalTransferCouple } from 'app/main/_ngxs/account-statement/account-statement-internal-transfer/as-internal-transfer.action';\nimport { AsInternalTransferState } from 'app/main/_ngxs/account-statement/account-statement-internal-transfer/as-internal-transfer.state';\nimport { InternalTransferCouple } from 'app/main/_models/account-statement/account-statement-internal-transfer.model';\nimport { DatasFilter } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'as-internal-transfer-main',\n  templateUrl: './as-internal-transfer-main.component.html',\n  styleUrls: ['./as-internal-transfer-main.component.scss']\n})\nexport class AsInternalTransferMainComponent implements OnInit {\n  @Select(AsTableFilterState.get) asTableFilter$: Observable<FilterInfo<FilterAsTable>>;\n  @Select(AsInternalTransferState.get) asInternalTransferCouple$: Observable<DatasFilter<InternalTransferCouple[],FilterAsTableSelected>>;\n  \n  constructor(\n    private _store: Store\n  ) {\n      this.asTableFilter$.subscribe(asifTableFilter=>{\n        if(asifTableFilter.loader['datas'] && asifTableFilter.loader['datas'].loaded) {\n\n          this._store.dispatch(new LoadAsInternalTransferCouple(asifTableFilter.filters.selected));\n        };\n        });\n  }\n\n  ngOnInit() {\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;\n  // }\n}\n","<!-- (changePagination)=\"changePaginationEvent($event)\"\n(onRowClick)=\"onRowClickEvent($event)\"  -->\n    <!-- [rows]=\"rows\"  -->\n    <!-- [columns]=\"columns\"  -->\n    <!-- [filter] = \"filterAs\" -->\n    <!-- [onloading]=\"onloading\"\n    [pagination]=\"pagination\" -->\n    <mat-table-filter \n        [observableFilter] = \"asTableFilter$\"\n        [observableTable] = \"asTable$\"\n        [columns] = \"columns\"\n        (onRowClick) = \"onRowClick($event)\"\n        (changeFilter)=\"applyFilter($event)\"\n \n        (clickButtonIcon)=\"viewDetail($event)\">\n    </mat-table-filter>\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n","\nimport { Component, OnInit, Input, ViewChild, ViewEncapsulation, SimpleChanges, OnChanges } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { Store, Select } from '@ngxs/store';\nimport { AsTable } from 'app/main/_models/account-statement/account-statement-table.model';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { AsTableState } from 'app/main/_ngxs/account-statement/account-statement-list/account-statement-list.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterAsTable, FilterAsTableSelected } from 'app/main/_models/filters/account-statement.filter';\nimport { ChangeAsTableFilter, LoadAsTableFilter } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.action';\nimport { FilterComboMultiple, FilterComboMultipleGroup } from 'app/main/_models/filters/mini-filter/combo-multiple.filters';\nimport { FilterDateRange } from 'app/main/_models/filters/mini-filter/date-range.filter';\nimport { Pagination } from 'app/main/_models/pagination.model';\nimport { FilterNumberRange } from 'app/main/_models/filters/mini-filter/number-range.filter';\nimport { Row, Column, FilterTable, EnumStyleType, EnumFilterType } from '../../web-component/mat-table-filter/model/mat-table-filter.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n\n@Component({\n  selector: 'account-statement-list',\n  templateUrl: './account-statement-list.component.html',\n  styleUrls: ['./account-statement-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class AccountStatementListComponent implements OnInit {\n  @Select(AsTableFilterState.get) asTableFilter$: Observable<FilterInfo<FilterAsTable>>;\n  @Select(AsTableState.get) asTable$: Observable<Datas<AsTable[]>>;\n  \n  // @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  // @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n\n  // toto: B<FilterAsTable> = new B<FilterAsTable>(FilterAsTable);\n  // rows: Row[];\n  // columns: Column[];\n  // pagination: Pagination;\n  // onloading: boolean;\n\n  \n        // {index:8, field: 'button',label:'',isSortable:false,width:{isFixed:true,value:50},filter: {type:EnumFilterType.none, datas: null, isEmpty: true},pipe:false,style: {type:EnumStyleType.buttonIcon,datas:{icon:'more_horiz',tooltip:'détail'}} }\n  filterAs: FilterAsTable = new FilterAsTable();\n  columns : Column[]=\n     [ \n        {index:0, field: 'id',label:'id',isSortable:true,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null, isEmpty: true}, pipe: false,style:{type:EnumStyleType.label,datas:null }},\n        {index:1, field: 'plans',label:'budget',isSortable:false,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null, isEmpty: true}, pipe: false,style:{type: EnumStyleType.dotDatas,datas:null}},\n        {index:2, field: 'operationMethod-label',label:'Méthode opérations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: null, isEmpty: true}, pipe: false,style:{type:EnumStyleType.label,datas:null}},\n        {index:3, field: 'operationTypeFamily-label',label:'Catégorie operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: null, isEmpty: true},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n        {index:4, field: 'operationType-label',label:'Type operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: null, isEmpty: true},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n        {index:5, field: 'operation-label',label:'Operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: null, isEmpty: true},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n        {index:6, field: 'dateIntegration',label:'Date int.',isSortable:true,width:{isFixed:false,value:-1}, filter: {type:EnumFilterType.dateRange, datas: null, isEmpty: true},pipe:true,style:{type:EnumStyleType.label,datas:null} },\n        {index:7, field: 'amountOperation',label:'montant',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.numberRange, datas: null, isEmpty: true},pipe:false,style: {type:EnumStyleType.numberUpDown,datas:{isoNumber:0}} }\n        ];\n\n  constructor(\n    private _router: Router,\n    private _store: Store\n    ) {\n\n      // this.asTable$.subscribe(asifTable=>{\n      //   this.onloading= (asifTable.loader['datas'] && asifTable.loader['datas'].loading);\n      //   if(asifTable.loader['datas'] && asifTable.loader['datas'].loaded){\n      //     // console.log('go');\n      //     //this.rows=this.getMatTableFilterRows(asifTable);\n      //   }\n      // });\n\n      this.asTableFilter$.subscribe(asTableFilter=>{\n        // this.onloading= (asTableFilter.loader['filters'] && asTableFilter.loader['filters'].loading);\n        if(asTableFilter.loader['filters'] && asTableFilter.loader['filters'].loaded) {\n          // console.log('change filter',asTableFilter.filters);\n          this.filterAs = asTableFilter.filters;\n          // this.pagination=this.filterAs.selected.pagination;\n          //this.columns=this.getMatTableFilterColumns(asTableFilter.filters);\n        }\n      });\n\n   }\n\n  ngOnInit() {\n    // console.log('initRelevé');\n  \n  }\n  onRowClick($event) {\n    this._router.navigate(\n      [`apps/account-statements/accounts/${this.filterAs.selected.idAccount}/account-statements/${$event.id}/detail`]);\n  }\n\n  viewDetail($event:Row) {\n   \n  }\n\n  // applyFilterAmount(data) {\n  //   this.filterAs.selected.amountMin = data.numberMin;\n  //   this.filterAs.selected.amountMax = data.numberMax;\n  //   this.applyFilter();\n  // }\n\n  // applyFilterOperationMethod(data) {\n  //   this.filterAs.selected.operationMethods = data;\n  //   this.applyFilter();\n  // }\n\n  // applyFilterOperationTypeFamily(data) {\n  //   this.filterAs.selected.operationTypeFamilies = data;\n  //   this.applyFilter();\n  // }\n\n  // applyFilterOperationType(data) {\n  //   this.filterAs.selected.operationTypes = data;\n  //   this.applyFilter();\n  // }\n\n  // applyFilterOperation(data) {\n  //   this.filterAs.selected.operations = data;\n  //   this.applyFilter();\n  // }\n\n  // applyFilterDateIntegration(data) {\n  //   this.filterAs.selected.dateIntegrationMin= data.dateMin;\n  //   this.filterAs.selected.dateIntegrationMax= data.dateMax;\n  //   this.applyFilter();\n  // }\n\n  applyFilter(selected: FilterAsTableSelected) {\n    // this.filterAs.selected.pagination.currentPage=0;\n    // this._store.dispatch(new LoadAsTableFilter(this.filterAs.selected));\n    console.log('----EMIT DONE', selected);\n    \n    this._store.dispatch(new ChangeAsTableFilter(selected));\n    \n  }\n\n\n  // getMatTableFilterColumns(filterDatas) {\n  //   let operationComboMultiple: FilterComboMultiple = null;\n  //   let operationMethodComboMultiple: FilterComboMultiple = null;\n  //   let operationTypeFamilyComboMultipleGroup: FilterComboMultipleGroup = null;\n  //   let operationTypeComboMultipleGroup: FilterComboMultipleGroup = null;\n  //   let filterDateIntegration: FilterDateRange = { placeholder:'Intégration',dateMin:null,dateMax:null }; \n  //   let filterNumberRange: FilterNumberRange ={ placeholder:'Montant',suffixIcon:'euro_symbol',numberMin:null,numberMax:null };\n\n  //   if(filterDatas!=null) {\n\n  //     operationComboMultiple = <FilterComboMultiple> { placeholder:'opération',combos:{list : filterDatas.operations, listSelected: filterDatas.selected.operations} };\n  //     operationMethodComboMultiple= <FilterComboMultiple> { placeholder:'Méthode d opération',combos:{list : filterDatas.operationMethods, listSelected: filterDatas.selected.operationMethods} };\n  //     operationTypeFamilyComboMultipleGroup = <FilterComboMultipleGroup> { placeholder:'Catégorie opération',combos:{list : filterDatas.operationTypeFamilies, listSelected: filterDatas.selected.operationTypeFamilies} };\n  //     operationTypeComboMultipleGroup = <FilterComboMultipleGroup> { placeholder:'Type opération',combos:{list : filterDatas.operationTypes, listSelected: filterDatas.selected.operationTypes} };\n  //     // filterDateIntegration = <FilterDateRange> { placeholder:'Intégration',dateMin:null,dateMax:null };\n    \n  //   }\n    \n    // let columns : Column[]= [];\n    // columns = [ \n    //     {index:0, field: 'id',label:'id',isSortable:true,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type:EnumStyleType.label,datas:null }},\n    //     {index:1, field: 'plan',label:'budget',isSortable:false,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type: EnumStyleType.dotDatas,datas:null}},\n    //     {index:2, field: 'operationMethod',label:'Méthode opérations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationMethodComboMultiple}, pipe: false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:3, field: 'operationTypeFamily',label:'Catégorie operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeFamilyComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:4, field: 'operationType',label:'Type operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:5, field: 'operation',label:'Operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationComboMultiple},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:6, field: 'dateIntegration',label:'Date int.',isSortable:true,width:{isFixed:false,value:-1}, filter: {type:EnumFilterType.dateRange, datas: filterDateIntegration},pipe:true,style:{type:EnumStyleType.label,datas:null} },\n    //     {index:7, field: 'amountOperation',label:'montant',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.numberRange, datas: filterNumberRange},pipe:false,style: {type:EnumStyleType.numberUpDown,datas:{isoNumber:0}} },\n    //     {index:8, field: 'button',label:'',isSortable:false,width:{isFixed:true,value:50},filter: {type:EnumFilterType.none, datas: null},pipe:false,style: {type:EnumStyleType.buttonIcon,datas:{icon:'more_horiz',tooltip:'détail'}} }\n    //     ];\n    // columns = [ \n    //       {index:0, field: 'id',label:'id',isSortable:true,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type:EnumStyleType.label,datas:null }},\n    //       {index:1, field: 'plans',label:'budget',isSortable:false,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type: EnumStyleType.dotDatas,datas:null}},\n    //       {index:2, field: 'operationMethod-label',label:'Méthode opérations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationMethodComboMultiple}, pipe: false,style:{type:EnumStyleType.label,datas:null}},\n    //       {index:3, field: 'operationTypeFamily-label',label:'Catégorie operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeFamilyComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //       {index:4, field: 'operationType-label',label:'Type operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //       {index:5, field: 'operation-label',label:'Operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationComboMultiple},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //       {index:6, field: 'dateIntegration',label:'Date int.',isSortable:true,width:{isFixed:false,value:-1}, filter: {type:EnumFilterType.dateRange, datas: filterDateIntegration},pipe:true,style:{type:EnumStyleType.label,datas:null} },\n    //       {index:7, field: 'amountOperation',label:'montant',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.numberRange, datas: filterNumberRange},pipe:false,style: {type:EnumStyleType.numberUpDown,datas:{isoNumber:0}} },\n    //       {index:8, field: 'button',label:'',isSortable:false,width:{isFixed:true,value:50},filter: {type:EnumFilterType.none, datas: null},pipe:false,style: {type:EnumStyleType.buttonIcon,datas:{icon:'more_horiz',tooltip:'détail'}} }\n    //       ];\n  //   let columns : Column[]= [];\n  //   columns = [ \n  //       {index:0, field: 'id',label:'id',isSortable:true,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type:EnumStyleType.label,datas:null }},\n  //       {index:1, field: 'plans',label:'budget',isSortable:false,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type: EnumStyleType.dotDatas,datas:null}},\n  //       {index:2, field: 'operationMethod-label',label:'Méthode opérations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationMethodComboMultiple}, pipe: false,style:{type:EnumStyleType.label,datas:null}},\n  //       {index:3, field: 'operationTypeFamily-label',label:'Catégorie operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeFamilyComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n  //       {index:4, field: 'operationType-label',label:'Type operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n  //       {index:5, field: 'operation-label',label:'Operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationComboMultiple},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n  //       {index:6, field: 'dateIntegration',label:'Date int.',isSortable:true,width:{isFixed:false,value:-1}, filter: {type:EnumFilterType.dateRange, datas: filterDateIntegration},pipe:true,style:{type:EnumStyleType.label,datas:null} },\n  //       {index:7, field: 'amountOperation',label:'montant',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.numberRange, datas: filterNumberRange},pipe:false,style: {type:EnumStyleType.numberUpDown,datas:{isoNumber:0}} },\n  //       {index:8, field: 'button',label:'',isSortable:false,width:{isFixed:true,value:50},filter: {type:EnumFilterType.none, datas: null},pipe:false,style: {type:EnumStyleType.buttonIcon,datas:{icon:'more_horiz',tooltip:'détail'}} }\n  //       ];\n  //   return columns;\n  // }\n\n\n  // getMatTableFilterRows(datas: Datas<AsTable[]> ) {\n  //   let tableRows: Row[] = [];\n  //   // console.log('in it',datas.datas);\n  //   // if (datas.loader['datas'] && datas.loader['datas'].loaded) {\n  //     for (let data of datas.datas) {\n\n  //       //creation de la ligne\n  //       let tableRow = new Row();\n  //       tableRow['id']= data.id;\n  //       tableRow['plan']= data.plans;\n  //       tableRow['operationMethod']=data.operationMethod.label;\n  //       tableRow['operationTypeFamily']=data.operationTypeFamily.label;\n  //       tableRow['operationType']=data.operationType.label;\n  //       tableRow['operation']=data.operation.label;\n  //       tableRow['dateIntegration']=data.dateIntegration;\n  //       tableRow['amountOperation']=data.amountOperation;\n  //       tableRow['button']=null;\n  //       // console.log('tableRow',tableRow);\n  //       //ajout d'une ligne\n  //       tableRows.push(tableRow);\n  //     }\n\n  //   //  console.log('tableRows',tableRows);\n\n  //     return tableRows;\n  // }\n  \n\n  changeFilterEvent($event: FilterTable) {\n    // switch($event.columnName) {\n    //   case 'operation':\n    //     this.applyFilterOperation($event.value);\n    //     break;\n    //   case 'operationMethod':\n    //     this.applyFilterOperationMethod($event.value);\n    //     break;\n    //   case 'operationTypeFamily':\n    //       this.applyFilterOperationTypeFamily($event.value);\n    //       break;\n    //   case 'operationType':\n    //       this.applyFilterOperationType($event.value);\n    //       break;\n    //   case 'dateIntegration':\n    //       this.applyFilterDateIntegration($event.value);\n    //       break;\n    //   case 'amountOperation':\n    //       this.applyFilterAmount($event.value);\n    //       break;\n\n    }\n\n    // this.applyFilter();\n  }\n\n  // changePaginationEvent($event){\n  //   // this.filterAs.selected.pagination = $event;\n\n  //   // this._store.dispatch(new ChangeAsTableFilter(this.filterAs.selected));\n  // }\n\n  // onRowClickEvent($event) {\n  //   // console.log('row on component',$event);\n  // }\n\n\n\n\n","<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\n    <!-- HEADER -->\n    <div class=\"top-bg accent header-1-background\"></div>\n    <div class=\"center\">\n        <div *ngIf=\"!fullscreen\" class=\"header-2-background accent p-12 pb-0 pt-6\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n            <div  class=\"left-side\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                <div  fxLayout=\"column\" fxLayoutAlign=\"space-between\"> \n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n                            <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                                account_balance\n                            </mat-icon>\n                            \n                            <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                                Compte courant \n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"(asSolde$ | async).datas as solde; else emptySolde\" fxLayout=\"column\" >\n                    <div class='pb-8' fxLayout=\"row\" fxLayoutAlign=\"end space-between\">\n                        <mat-chip-list *ngIf=\"(asSolde$ | async).datas as solde; else emptySolde\">\n                            <mat-chip class=\"mat-chip-green\" >Crédit: {{solde.credit}} €</mat-chip>\n                            <mat-chip class=\"mat-chip-red\" >Débit: {{solde.debit}} €</mat-chip>\n                            <mat-chip [ngClass]=\"solde.total>0 ? 'mat-chip-green' : 'mat-chip-red'\" >Balance: {{solde.total}} €</mat-chip>\n                            <mat-chip [ngClass]=\"solde.solde>0 ? 'mat-chip-green' : 'mat-chip-red'\" >Solde au {{solde.dateEnd }}: {{solde.solde}} €</mat-chip>\n                        </mat-chip-list>\n                    </div>\n                    <!-- <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                        <mat-chip-list>\n                            \n                        </mat-chip-list>\n                    </div> -->\n                </div>\n                <ng-template #emptySolde>\n                    <div fxLayout=\"column\" >\n                        <div class='pb-8' fxLayout=\"row\" fxLayoutAlign=\"end space-between\">\n                            <mat-chip-list>\n                                <mat-chip>Crédit: <mat-spinner [diameter]=\"15\"></mat-spinner></mat-chip>\n                                <mat-chip>Débit: <mat-spinner [diameter]=\"15\"></mat-spinner></mat-chip>\n                                <mat-chip>Balance: <mat-spinner [diameter]=\"15\"></mat-spinner></mat-chip>\n                            </mat-chip-list>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                            <mat-chip-list>\n                                <mat-chip>Solde: <mat-spinner [diameter]=\"15\"></mat-spinner></mat-chip>\n                            </mat-chip-list>\n                        </div>\n                    </div>\n                </ng-template>\n            </div>\n            <account-statement-filter (changeFilter)=\"changeAsFilter($event)\" *fuseIfOnDom [@animate]=\"{value:'*',params:{x:'50px'}}\"></account-statement-filter>\n        </div>\n\n        \n        <!-- CONTENT -->\n        <div class=\"content-card\">\n\n            <mat-tab-group \n                [selectedIndex]=\"selectedIndex\" \n                (selectedTabChange)=\"onTabClick($event)\"  \n                #tabGroup \n                fullwidth>\n\n                <mat-tab label=\"Evolution\">\n                    <as-chart-evolution \n                        *ngIf=\"selectedIndex == 0\"\n                        [@animateStagger]=\"{value:'50'}\">\n                    </as-chart-evolution>\n                </mat-tab>\n\n                <mat-tab label=\"Catégorisation\">\n                    <as-chart-categorisation \n                        *ngIf=\"selectedIndex == 1\"\n                        [@animateStagger]=\"{value:'50'}\">\n                    </as-chart-categorisation>\n\n                    \n                </mat-tab>\n\n                <mat-tab label=\"Relevés\" >\n                    <account-statement-list style=\"height:100%;\" \n                        *ngIf=\"selectedIndex == 2\">\n                    </account-statement-list>\n                </mat-tab>\n\n                <mat-tab label=\"Virements internes\">\n                    <as-internal-transfer-main style=\"height:100%;\" \n                        *ngIf=\"selectedIndex == 3\">\n                    </as-internal-transfer-main>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AsSoldeState } from 'app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.state';\nimport { FilterAsTableSelected, FilterAsTable } from 'app/main/_models/filters/account-statement.filter';\nimport { LoadAsTableFilter } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.action';\nimport { AsSolde } from 'app/main/_models/account-statement/account-statement-solde.model';\nimport { LoadAsChartEvolution, LoadAsChartCategorisation } from 'app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.action';\nimport { FuseConfigService } from '@fuse/services/config.service';\nimport { LoadAsSolde } from 'app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.action';\nimport { DatasFilter } from 'app/main/_models/generics/detail-info.model';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\n\n@Component({\n  selector: 'account-statement-main',\n  templateUrl: './account-statement-main.component.html',\n  styleUrls: ['./account-statement-main.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations   : fuseAnimations\n})\nexport class AccountStatementMainComponent implements OnInit {\n\n@Select(AsSoldeState.get) asSolde$: Observable<DatasFilter<AsSolde,FilterAsTableSelected>>;\n//@Select(AsTableFilterState.get) asTableFilter$: Observable<FilterInfo<FilterAsTable>>;\nasTableFilter$: Observable<FilterInfo<FilterAsTable>>;\n\nfilterAsSelected: FilterAsTableSelected;\nselectedIndex: number = 0;\nfullscreen: boolean;\ntabsLoaded=[false,false,false,false];\nreload: boolean;\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _fuseConfigService: FuseConfigService,\n  ) {\n    this.asTableFilter$ = this._store.select(state => state.AsTableFilter)\n\n    combineLatest(this._activatedRoute.params, this._activatedRoute.queryParams)\n      .pipe(map(results => ({idAccount: results[0].idAccount, idTab: results[1].idTab})))\n      .subscribe(results => {\n        \n        let idAccount = results.idAccount=='ALL' ? null : results.idAccount;\n        let idTab = results.idTab;\n        \n        if(idTab!=null)\n          {\n            this.selectedIndex = idTab;\n            this.reload=true;\n            console.log('get selectindex');\n          }\n          else\n          {\n          \n            this.filterAsSelected = new FilterAsTableSelected();\n            this.filterAsSelected.idAccount=idAccount;\n\n            this._store.dispatch(new LoadAsSolde(this.filterAsSelected));\n            this.loadTab();\n          }\n    });\n\n    // Subscribe to the config changes\n    this._fuseConfigService.config\n      .subscribe((settings) => {\n          this.fullscreen = settings.layout.toolbar.fullscreen;\n    });\n\n    \n\n  }\n\n  ngOnInit() {\n    this.asTableFilter$.subscribe(filter=>{\n      console.log('----> table filter');\n      if(filter.loader['filters'] && filter.loader['filters'].loaded) {\n        \n        this.filterAsSelected = filter.filters.selected;\n        if(this.reload) {\n          this.loadTab();\n          this.reload=false;\n        }\n      }\n    })\n  }\n\n  onTabClick($event){\n    this.selectedIndex=$event.index;\n    // if(!this.tabsLoaded[this.selectedIndex])\n      this.loadTab();\n  }\n\n  changeAsFilter($event) {\n    this._store.dispatch(new LoadAsSolde($event));\n    this.loadTab();\n\n  }\n\n  loadTab() {\n    // console.log('-->load data Tab',this.selectedIndex);\n    this.tabsLoaded[this.selectedIndex]=true;\n    console.log('--->idTab',isNaN(this.selectedIndex));\n    // this.selectedIndex=2;\n    if(isNaN(this.selectedIndex))\n      console.warn('no tab selected');\n    else {\n      switch(Number(this.selectedIndex)) { \n        case 0: \n          this._store.dispatch(new LoadAsChartEvolution(this.filterAsSelected));\n          break; \n        case 1:\n          this._store.dispatch(new LoadAsChartCategorisation(this.filterAsSelected));\n          break; \n        case 2: \n          console.log('passed 2',this.filterAsSelected);\n          this._store.dispatch(new LoadAsTableFilter(this.filterAsSelected));\n          break; \n        // default: \n        //   console.log('passed warn');\n        //   console.warn('no tab selected') ;\n        //   break; \n      }\n    } \n  }\n  // onHeaderPanelClick() {\n  //   this.headerPanelIsVisible = this.headerPanelIsVisible ? false : true;\n  //   this.headerPanelIcon = this.headerPanelIsVisible ? 'keyboard_arrow_up' : 'keyboard_arrow_down';\n  //   this.fuseConfig.layout.toolbar.hidden=!this.headerPanelIsVisible;\n  //   this._fuseConfigService.setConfig(this.fuseConfig);\n\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AccountStatementMainComponent } from './account-statement-main/account-statement-main.component';\nimport { RouterModule } from '@angular/router';\nimport { AccountStatementFilterComponent } from './account-statement-filter/account-statement-filter.component';\nimport { AccountStatementListComponent } from './account-statement-list/account-statement-list.component';\nimport { AccountStatementDetailComponent } from './account-statement-detail/account-statement-detail.component';\nimport { GMapModule } from '../g-map/g-map.module';\nimport { AuthGuard } from 'app/_guards/auth.guard';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseWidgetModule } from '@fuse/components';\nimport { WidgetsModule } from '../widgets/widgets.module';\nimport { NgxsModule } from '@ngxs/store';\nimport { AsSoldeState } from 'app/main/_ngxs/account-statement/account-statement-solde/account-statement-solde.state';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { AsTableState } from 'app/main/_ngxs/account-statement/account-statement-list/account-statement-list.state';\nimport { AsService } from './account-statement.service';\nimport { AsDetailState } from 'app/main/_ngxs/account-statement/account-statement-detail/account-statement-detail.state';\nimport { AsChartState } from 'app/main/_ngxs/account-statement/account-statement-chart/account-statement-chart.state';\nimport { AsChartEvolutionComponent } from './account-statement-chart/as-chart-evolution/as-chart-evolution.component';\nimport { AsInternalTransferCoupleComponent } from './account-statement-internal-transfer/as-internal-transfer-couple/as-internal-transfer-couple.component';\nimport { AsInternalTransferMainComponent } from './account-statement-internal-transfer/as-internal-transfer-main/as-internal-transfer-main.component';\nimport { AsInternalTransferState } from 'app/main/_ngxs/account-statement/account-statement-internal-transfer/as-internal-transfer.state';\n// import { MiniFilterModule } from '../web-component/mini-filter/mini-filter.module';\nimport { AsChartCategorisationComponent } from './account-statement-chart/as-chart-categorisation/as-chart-categorisation.component';\nimport { MatTableFilterModule } from '../web-component/mat-table-filter/mat-table-filter.module';\nimport { AngularMaterialModule } from 'app/angular-material.module';\n// import { MatTableFilterComponent } from './account-statement-list/mat-table-filter/component/mat-table-filter.component';\n// import { ResizeObserverDirective } from './account-statement-list/mat-table-filter/directive/resize-observer.directive';\n// import { DateFormatPipe } from './account-statement-list/mat-table-filter/pipe/pipe-date';\n// import { MatTableFilterColResizeService } from './account-statement-list/mat-table-filter/service/mat-table-filter-col-resize.service';\n// import { MatTableFilterModule } from './account-statement-list/mat-table-filter/mat-table-filter.module';\n\nconst routes = [\n  // {\n  //     path     : '',\n  //     component: AccountStatementMainComponent,\n  //     // resolve  : { users: ImportStatementListResolver },\n  //     canActivate: [AuthGuard]\n  // },\n  {\n      path     : 'accounts/:idAccount',\n      component: AccountStatementMainComponent,\n      canActivate: [AuthGuard]\n  },\n  {\n    path     : 'accounts/:idAccount/tabs/:idTab',\n    component: AccountStatementMainComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n      path     : 'accounts/:idAccount/account-statements/:idAccountStatement/detail',\n      component: AccountStatementDetailComponent,\n      canActivate: [AuthGuard]\n  },\n\n  {\n      path      : '**',\n      redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [\n    FuseSharedModule,\n    AngularMaterialModule,\n    RouterModule.forChild(routes),\n    FuseWidgetModule,\n    WidgetsModule,\n    GMapModule,\n    MatTableFilterModule,\n    // MiniFilterModule,\n    NgxsModule.forFeature([\n      AsTableFilterState,\n      AsTableState,\n      AsDetailState,\n      AsSoldeState,\n      AsChartState,\n      AsInternalTransferState\n  ])\n    \n  ],\n  declarations: [\n    AccountStatementMainComponent,\n    AccountStatementFilterComponent,\n    AccountStatementListComponent,\n\n    AccountStatementDetailComponent,\n    AsChartEvolutionComponent,\n    AsChartCategorisationComponent,\n    AsInternalTransferMainComponent,\n    AsInternalTransferCoupleComponent,\n\n    // MatTableFilterComponent,\n\n    // ResizeObserverDirective,\n    // DateFormatPipe\n    \n  ],\n  providers : [\n    AsService,\n    // DateFormatPipe,\n    // MatTableFilterColResizeService\n\n  ]\n})\nexport class AccountStatementModule { }\n","\n<!--  -->\n<!-- class=\"mat-elevation-z8\" -->\n  <mat-table *ngIf=\"columns\"\n\n    [dataSource]=\"dataSource\" \n    cdkDropListGroup\n    matSort \n    [matSortActive]=\"columns[0].field\"\n    matSortDirection=\"asc\" \n    matSortDisableClear \n    (matSortChange)=\"onSortChangeEvent($event)\"\n    resizeObserver (resize)=\"onResize($event)\"\n    >\n\n    \n    <ng-container *ngFor=\"let column of columns; let i = index\" [matColumnDef]=\"column.field\">\n      <!-- (mousedown)=\"onResizeColumn($event, i)\" -->  \n      <mat-header-cell *matHeaderCellDef>\n          \n          <!-- SORTABLE / NOT SORTABLE-->\n          <ng-container *ngIf=\"column.isSortable ; else noSortable\">\n            <div mat-sort-header>{{ column.label }}</div>\n          </ng-container>\n\n          <ng-template #noSortable>\n              <div>{{ column.label }}</div>\n          </ng-template>\n\n          <span *ngIf=\"column.filter.type==enumFilterType.label \n            || column.filter.type==enumFilterType.dateRange \n            || column.filter.type==enumFilterType.numberRange \n            || column.filter.type==enumFilterType.comboMultiple\n            || column.filter.type==enumFilterType.comboMultipleGroup\">\n              <!-- [color]=\"column|hasFilter:newFilterEvent\" -->\n            <span (click)=\"templateFor='colLabel'; $event.stopPropagation()\" [matMenuTriggerFor]=\"menuLabel\" style=\"cursor: pointer;\" fxFlex fxLayoutAlign=\"end start\">\n              <mat-icon [ngStyle]=\"{'color':column.filter && column.filter.isEmpty ? '#E0E0E0' : 'red'}\">filter_list</mat-icon>\n            </span>\n              \n              <mat-menu \n                #menuLabel=\"matMenu\" \n                class=\"menu-filter\" \n                [overlapTrigger]=\"false\"\n                [ngSwitch]=\"column.filter.type\">\n                <!-- filter COMBO MULTIPLE -->\n                <filter-combo-multiple \n                  *ngSwitchCase=\"enumFilterType.comboMultiple\"\n                  [filterComboMultiple]=\"column.filter.datas\"\n                  (applyFilterComboMultiple)=\"applyFilter(column,$event)\">\n                </filter-combo-multiple>\n                <!-- <ng-template matMenuContent *ngIf=\"column.filter.type==enumFilterType.comboMultiple\">\n                    <filter-combo-multiple \n                        [filterComboMultiple]=\"column.filter.datas\"\n                        (applyFilterComboMultiple)=\"applyFilter(column,$event)\">\n                    </filter-combo-multiple>\n                </ng-template> -->\n\n                <!-- filter COMBO MULTIPLE GROUP-->\n                <filter-combo-multiple-group \n                  *ngSwitchCase=\"enumFilterType.comboMultipleGroup\"\n                  [filterComboMultipleGroup]=\"column.filter.datas\"\n                  (applyFilterComboMultipleGroup)=\"applyFilter(column,$event)\">\n                </filter-combo-multiple-group>\n\n                <!-- filter DATE RANGE-->\n                <filter-date-range \n                  *ngSwitchCase=\"enumFilterType.dateRange\"\n                  [filterDateRange]=\"column.filter.datas\"\n                  (applyFilterDateRange)=\"applyFilter(column,$event)\">\n                </filter-date-range>\n\n                <!-- filter NUMBER RANGE-->\n                <filter-number-range \n                  *ngSwitchCase=\"enumFilterType.numberRange\"\n                  [filterNumberRange]=\"column.filter.datas\"\n                  (applyFilter)=\"applyFilter(column,$event)\">\n                </filter-number-range>\n\n              </mat-menu>\n\n              <!-- filter COMBO MULTIPLE GROUPE -->\n              <!-- <mat-menu #menuLabel=\"matMenu\" class=\"menu-filter\" [overlapTrigger]=\"false\">\n                <ng-template matMenuContent *ngIf=\"column.filter.type==enumFilterType.comboMultipleGroup\">\n                    <filter-combo-multiple-group \n                        [filterComboMultipleGroup]=\"column.filter.datas\"\n                        (applyFilterComboMultiple)=\"applyFilter(column,$event)\">\n                    </filter-combo-multiple-group>\n                </ng-template>\n              </mat-menu> -->\n\n          </span>\n\n\n\n\n          \n        </mat-header-cell>\n\n        <mat-cell *matCellDef=\"let row\" > \n          <ng-container [ngSwitch]=\"column.style.type\">\n            <!-- STYLE: DOT-DATAS -->\n            <div *ngSwitchCase=\"enumStyleType.dotDatas\">\n              <mat-chip class=\"mini-select\"  *ngFor=\"let dot of row[column.field]\"\n                [matTooltip]=\"dot.id + ': ' + dot.label\"\n                [ngStyle]=\"{'background-color':dot.value }\"\n              >\n                <!-- {{dot.id}} -->\n              </mat-chip>\n            </div>\n            \n            <!-- STYLE: NUMBER-UP-DOWN -->\n            <div *ngSwitchCase=\"enumStyleType.numberUpDown\">\n                <div *ngIf=\"row[column.field]>column.style.datas.isoNumber\">\n                    <p  class=\"text-truncate green-fg\">\n                        <mat-icon class=\"green-fg mr-2\">trending_up</mat-icon>\n                        {{row[column.field]}}\n                    </p>\n                </div>\n                <div *ngIf=\"row[column.field]<column.style.datas.isoNumber\">\n                    <p  class=\"text-truncate red-fg\">\n                        <mat-icon class=\"red-fg mr-2\">trending_down</mat-icon>\n                        {{row[column.field]}}\n                    </p>\n                </div>\n            </div>\n\n            <!-- STYLE: LABEL -->\n            <div class=\"text-truncate\" *ngSwitchCase=\"enumStyleType.label\">\n                <!-- {{ row[column.field] }} -->\n              <div class=\"text-truncate\" *ngIf=\"column.pipe\">{{ row[column.field] | dateFormat:'mm/mm/mm' }}</div>\n              <div class=\"text-truncate\" *ngIf=\"!column.pipe\">{{ row[column.field]  }} </div> \n            </div>\n\n            <!-- STYLE: BUTTON-ICON -->\n            <div *ngSwitchCase=\"enumStyleType.buttonIcon\">\n                <button [matTooltip]=\"column.style.datas.tooltip\" mat-icon-button (click)=\"onClickButtonIcon(row)\">\n                    <mat-icon>{{column.style.datas.icon}}</mat-icon>\n                </button>\n            </div>\n          </ng-container>\n          \n        </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n    <mat-row \n      (cdkObserveContent)=\"onRowsChange(row)\"\n      (mousedown)=\"onMouseDown($event)\"\n      (click)=\"onClickLigne($event, index, row)\"\n      *matRowDef=\"let row; columns: displayedColumns; index as index\"\n      [ngClass]=\"index==activeClick?'active-click':'inactive-click'\"\n      >\n    </mat-row>\n  </mat-table>\n\n  <div *ngIf=\"onloading\"\n    class=\"w-100-p\"\n    fxLayout=\"column\"\n    fxLayoutAlign=\"center center\">\n    <mat-progress-bar\n      color=\"warn\"\n      mode=\"indeterminate\">\n    </mat-progress-bar>\n  </div>\n  \n  <!-- <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n  <div style=\"color:#4285F3\" fxLayout=\"row\">chargement...</div>-->\n\n\n  <p class=\"empty-result\" \n      *ngIf=\"!onloading && rows && rows.length==0\"\n  >\n      Aucun résultat\n  </p>\n\n  <mat-paginator *ngIf=\"filterSelected && columns && rows && rows.length>0\"\n      [style.visibility]=\"!onloading ? 'visible' : 'hidden'\"\n      (page)=\"onPageChangeEvent($event)\"\n      [length]=\"filterSelected['pagination'].totalItems\" \n      [pageSize]=\"filterSelected['pagination'].nbItemsPerPage\"\n      [pageSizeOptions]=\"[15, 100, 200]\">\n  </mat-paginator>","import { Component, OnInit, ViewChild, ElementRef, Renderer2, HostListener, AfterViewInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { TableField, Row, EnumFilterType, MatTableFilter, Column, FilterTable, EnumStyleType } from '../model/mat-table-filter.model';\nimport { MatTableDataSource, MatTable, MatSort, MatPaginator } from '@angular/material';\nimport { FilterDateRange } from 'app/main/_models/filters/mini-filter/date-range.filter';\nimport { Pagination } from 'app/main/_models/pagination.model';\nimport { FilterAmount } from 'app/main/_models/filters/mini-filter/amount.filter';\nimport { FilterComboMultipleGroup, FilterComboMultiple } from 'app/main/_models/filters/mini-filter/combo-multiple.filters';\nimport { DateFormatPipe } from '../pipe/pipe-date';\nimport { MatTableFilterColResizeService } from '../service/mat-table-filter-col-resize.service';\nimport { FilterNumberRange } from 'app/main/_models/filters/mini-filter/number-range.filter';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n// export class B<T> {\n//   Prop: T;\n//   constructor(TCreator: new() => T) {\n//       this.Prop = new TCreator();\n//   }\n// }\n\n\n\n\n@Component({\n  selector: 'mat-table-filter',\n  templateUrl: './mat-table-filter.component.html',\n  styleUrls: ['./mat-table-filter.component.scss']\n})\nexport class MatTableFilterComponent implements OnInit {\n  @Input()  onloading: boolean;\n  @Input()  columns: Column[];\n  @Input()  pagination: Pagination;\n  @Input()  observableFilter: Observable<FilterInfo<any>>;\n  @Input()  observableTable: Observable<Datas<any>>;\n  // @Input()  filter: any; // B<any>;\n  // @Input()  filterSelected: any;\n  @Output() changeFilter = new EventEmitter<any>();\n  @Output() changePagination = new EventEmitter<Pagination>();\n  @Output() clickButtonIcon = new EventEmitter<Row>();\n  @Output() onRowClick = new EventEmitter<Row>()\n\n  // @ViewChild(MatTable, { static: false }) matTableRef: MatTable<any>;\n  @ViewChild(MatTable,{read: ElementRef, static: false} ) private matTableRef: ElementRef;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  \n\n  rows: Row[];\n  // columns: Column[];\n  filterSelected: any;\n  // matTableFilter: MatTableFilter = new MatTableFilter();\n\n  templateFor:string;\n\n  enumFilterType= EnumFilterType;\n  enumStyleType = EnumStyleType;\n\n  displayedColumns: string[] = [];\n  dataSource = new MatTableDataSource<Row>();\n  // matTableWidth:number;\n\n  // isLoaded:boolean;\n  // rowsLoading:boolean=true;\n  // rowsLoaded: boolean=false;\n  idCurrentRow: number;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private _dateFormatPipe: DateFormatPipe,\n    private _matTableFilterColResizeService: MatTableFilterColResizeService\n  ) {\n    \n   }\n\n   //detecter changement des rows pour appliquer resize\n   onRowsChange($event) {\n     if($event.id==this.idCurrentRow){\n      this.setTableResize();\n      console.log($event)\n     }\n   }\n   \n  // identity<T>(arg: T): T {\n  //   return arg;\n  // }\n\n  ngOnInit() {\n    \n    console.log('init mat table filter');\n    this.observableTable.subscribe(table=>{\n      this.loading(true);\n      // console.log('-->obs table in');\n      if(table.loader['datas'] && table.loader['datas'].loaded){\n        \n\n        this.rows = this.getMatTableFilterRows(table);\n        // console.log('datas.datas',table);\n        this.idCurrentRow = this.rows.length>0 ? this.rows[0].id : null;\n        // this.matTableFilter.rows=this.rows;\n        this.dataSource.data = this.rows; // this.matTableFilter.rows;\n        \n        // console.log('filter',this.filterSelected);\n        this.loading(false);\n        // console.log('this.rows', this.rows);\n      }\n      // console.log('--->table in mat-table', table);\n     });\n\n    this.observableFilter.subscribe(filter=>{\n      console.log('-->obs table in');\n      this.loading(true);\n      // console.log('--->filter in mat-table', filter);\n      if(filter.loader['filters'] && filter.loader['filters'].loaded) {\n        // this.matTableWidth = this.matTableRef.nativeElement.clientWidth;\n        \n        this.columns=this.getMatTableFilterColumns(filter.filters);\n        // this.matTableFilter.columns=this.columns;\n        \n        this.filterSelected=filter.filters.selected;\n\n        // this.loading(false);\n        // console.log('this.filterSelected',this.filterSelected);\n      }\n     });\n  }\n\n  getMatTableFilterRows(datas: Datas<any> ) {\n    let tableRows: Row[] = [];\n      for (let data of datas.datas) {\n        let tableRow = new Row();\n        for (let column of this.columns) {\n          // console.log('column.field',column.field);\n          // console.log('column.field',column.field);\n          // console.log('tableRow[column.field]',tableRow[`${column.field}`]);\n          // console.log('data[column.field]',data[column.field]);\n          let fields = column.field.split('-')\n          let value= null;\n          // for(let field of fields) {\n            if(fields.length>1){\n              // console.log('fields',fields);\n              value = data[fields[0]][fields[1]];\n              // console.log('value',value);\n            }\n             \n              else\n              value = data[fields[0]]\n          // }\n          \n          tableRow[`${column.field}`] = value; //data[column.field];\n          // console.log('tableRow[column.field]',tableRow[`${column.field}`]);\n          \n        }\n        //creation de la ligne\n        \n        // tableRow['id']= data.id;\n        // tableRow['plan']= data.plans;\n        // tableRow['operationMethod']=data.operationMethod.label;\n        // tableRow['operationTypeFamily']=data.operationTypeFamily.label;\n        // tableRow['operationType']=data.operationType.label;\n        // tableRow['operation']=data.operation.label;\n        // tableRow['dateIntegration']=data.dateIntegration;\n        // tableRow['amountOperation']=data.amountOperation;\n        // tableRow['button']=null;\n\n        tableRows.push(tableRow);\n      }\n\n     console.log('tableRows',tableRows);\n\n      return tableRows;\n  }\n\n  getMatTableFilterColumns(filterDatas) {\n    // let operationComboMultiple: FilterComboMultiple = null;\n    // let operationMethodComboMultiple: FilterComboMultiple = null;\n    // let operationTypeFamilyComboMultipleGroup: FilterComboMultipleGroup = null;\n    // let operationTypeComboMultipleGroup: FilterComboMultipleGroup = null;\n    // let filterDateIntegration: FilterDateRange = { placeholder:'Intégration',dateMin:null,dateMax:null }; \n    // let filterNumberRange: FilterNumberRange ={ placeholder:'Montant',suffixIcon:'euro_symbol',numberMin:null,numberMax:null };\n\n    // if(filterDatas!=null) {\n\n    //   operationComboMultiple = <FilterComboMultiple> { placeholder:'opération',combos:{list : filterDatas.operations, listSelected: filterDatas.selected.operations} };\n    //   operationMethodComboMultiple= <FilterComboMultiple> { placeholder:'Méthode d opération',combos:{list : filterDatas.operationMethods, listSelected: filterDatas.selected.operationMethods} };\n    //   operationTypeFamilyComboMultipleGroup = <FilterComboMultipleGroup> { placeholder:'Catégorie opération',combos:{list : filterDatas.operationTypeFamilies, listSelected: filterDatas.selected.operationTypeFamilies} };\n    //   operationTypeComboMultipleGroup = <FilterComboMultipleGroup> { placeholder:'Type opération',combos:{list : filterDatas.operationTypes, listSelected: filterDatas.selected.operationTypes} };\n    //   // filterDateIntegration = <FilterDateRange> { placeholder:'Intégration',dateMin:null,dateMax:null };\n    \n    // }\n    \n    // let columns : Column[]= [];\n    // columns = [ \n    //     {index:0, field: 'id',label:'id',isSortable:true,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type:EnumStyleType.label,datas:null }},\n    //     {index:1, field: 'plans',label:'budget',isSortable:false,width:{isFixed:true,value:70},filter: {type:EnumFilterType.none, datas: null}, pipe: false,style:{type: EnumStyleType.dotDatas,datas:null}},\n    //     {index:2, field: 'operationMethod-label',label:'Méthode opérations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationMethodComboMultiple}, pipe: false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:3, field: 'operationTypeFamily-label',label:'Catégorie operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeFamilyComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:4, field: 'operationType-label',label:'Type operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultipleGroup, datas: operationTypeComboMultipleGroup},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:5, field: 'operation-label',label:'Operations',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.comboMultiple, datas: operationComboMultiple},pipe:false,style:{type:EnumStyleType.label,datas:null}},\n    //     {index:6, field: 'dateIntegration',label:'Date int.',isSortable:true,width:{isFixed:false,value:-1}, filter: {type:EnumFilterType.dateRange, datas: filterDateIntegration},pipe:true,style:{type:EnumStyleType.label,datas:null} },\n    //     {index:7, field: 'amountOperation',label:'montant',isSortable:true,width:{isFixed:false,value:-1},filter: {type:EnumFilterType.numberRange, datas: filterNumberRange},pipe:false,style: {type:EnumStyleType.numberUpDown,datas:{isoNumber:0}} },\n    //     {index:8, field: 'button',label:'',isSortable:false,width:{isFixed:true,value:50},filter: {type:EnumFilterType.none, datas: null},pipe:false,style: {type:EnumStyleType.buttonIcon,datas:{icon:'more_horiz',tooltip:'détail'}} }\n    //     ];\n    this.setDisplayedColumns();\n    for (let column of this.columns) {\n      let fields = column.field.split('-');\n      switch(column.filter.type) {\n        case EnumFilterType.comboMultiple:\n          column.filter.datas = <FilterComboMultiple> { placeholder:fields[0],combos:{list : filterDatas[`${fields[0]}`], listSelected: filterDatas.selected[`${fields[0]}`]} };\n          break;\n        case EnumFilterType.comboMultipleGroup:\n            column.filter.datas = <FilterComboMultipleGroup> { placeholder:fields[0],combos:{list : filterDatas[`${fields[0]}`], listSelected: filterDatas.selected[`${fields[0]}`]} };\n          break;\n        case EnumFilterType.dateRange:\n            column.filter.datas = <FilterDateRange> { placeholder:fields[0],dateMin:null,dateMax:null }; \n          break;\n        case EnumFilterType.numberRange:\n            column.filter.datas = <FilterNumberRange> { placeholder:fields[0],suffixIcon:'euro_symbol',numberMin:null,numberMax:null };\n          break;\n      }\n    }\n    console.log('this.columns',this.columns);\n    return this.columns;\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   this.isLoaded=false;\n        \n  //   if(changes.rows) {\n  //     // this.matTableFilter.rows=changes.rows.currentValue;\n  //     // this.dataSource.data = this.matTableFilter.rows;\n      \n  //     // this.setTableResize();\n  //   }\n\n  //   if(changes.columns) {\n  //     // console.log('mat-table-filter-changes.columns-TRIG',changes.columns.currentValue);\n  //     if(changes.columns.currentValue!=null) {\n\n  //       // this.matTableFilter.columns=changes.columns.currentValue;\n  //       // setTimeout(x=>{\n  //       //   let elements = this.el.nativeElement.getElementsByClassName('mat-column-id'); //querySelectorAll('.option_input');\n  //       //   // console.log('elements',elements[0]);\n  //       //   elements[0].style.width = '200px';\n  //       // },1000);\n\n  //     }\n\n  //     // console.log('VI',changes);\n  //   }\n\n  //   if(changes.pagination) {\n  //     // this.matTableFilter.pagination=changes.pagination.currentValue;\n  //     // console.log('III',changes);\n  //   }\n\n  //   // if(this.matTableFilter.columns!=null && this.matTableFilter.pagination!=null ) {\n  //   //   this.isLoaded = true;\n  //   //   // console.log('IV',changes);\n  //   //   // console.log('passed loaded');\n  //   // }\n\n  //   if(changes.onloading) {\n  //     // console.log('mat-table-filter-changes.onloading-TRIG',changes);\n  //     // this.loading(changes.onloading.currentValue);\n  //     // if(!this.onloading){\n  //     //   // this.matTableWidth = this.matTableRef.nativeElement.clientWidth;\n  //     //   // console.log('--->this.matTableRef', this.matTableRef);\n  //     // }\n  //     // console.log('VII',changes);\n  //     //this.onLoading=changes.onloading.currentValue;\n  //   }\n  //   // console.log('this.matTableFilter',this.matTableFilter);\n    \n\n  // }\n\n  setDisplayedColumns() {\n    this.columns.forEach(( column, index) => {\n      column.index = index;\n      this.displayedColumns[index] = column.field;\n    });\n    // this.matTableFilter.columns.forEach(( column, index) => {\n    //   column.index = index;\n    //   this.displayedColumns[index] = column.field;\n    // });\n\n  }\n\n  //========================================================================\n  //===================  RESIZE COLUMN =====================================\n  //========================================================================\n  // onResizeColumn(event: any, index: number) {\n  //   this._matTableFilterColResizeService.onResizeColumn(event,index,this.renderer,this.matTableFilter,this.matTableRef);\n  // }\n\n  setTableResize() {\n    let maxWidth= this.matTableRef.nativeElement.clientWidth; //this.matTableWidth;\n    let percentCols = this.columns.filter(x=>!x.width.isFixed).length;\n    let sumWidthFixedCols = this.columns.filter(x=>x.width.isFixed).map(x=>x.width.value).reduce((a, b) => a + b, 0);\n\n    let leaveWidth=maxWidth-sumWidthFixedCols;\n    let unitWidth=leaveWidth/percentCols;\n    // console.group('resize');\n    // console.log('maxWidth',maxWidth);\n    // console.log('percentCols',percentCols);\n    // console.log('sumWidthFixedCols',sumWidthFixedCols);\n    // console.log('leaveWidth',leaveWidth);\n    // console.log('unitWidth',unitWidth);\n    // console.groupEnd;\n\n    this.columns.forEach(( column, index) => {\n      column.width.value = column.width.isFixed ? column.width.value : unitWidth;\n      // console.log('column.width.value',column.width.value);\n\n      // setTimeout(x=>{\n        let elements = this.el.nativeElement.getElementsByClassName(`mat-column-${column.field}`); //querySelectorAll('.option_input');\n        // console.log('elements',elements);\n        if(elements.length>0) {\n          for(let i=0; i<elements.length;i++) {\n            elements[i].style.width = column.width.value + 'px';\n            // console.log('el.style.width',elements[i].style.width);\n          }\n        }\n      // },0);\n\n      // this._matTableFilterColResizeService.setColumnWidth(column);\n    });\n\n  }\n\n  onResize($event) {\n    console.log('$event.contentRect.width',$event.contentRect.width);\n    // this.matTableWidth=$event.contentRect.width;\n    this.setTableResize();\n  }\n\n\n  //========================================================================\n  //=============================  SORTING =================================\n  //========================================================================\n  onSortChangeEvent(event): void {\n    // if(this.pagination) {\n    this.loading(true);\n    //   if(this.pagination.sortColumn!=this.sort.active || this.pagination.sortDirection!=this.sort.direction) {\n    //     this.rowsLoading = true;\n    //     this.rowsLoaded=false;\n    //     this.rows=[];\n    this.filterSelected[`pagination`].currentPage=0;\n    this.filterSelected[`pagination`].sortColumn = this.sort.active;\n    this.filterSelected[`pagination`].sortDirection = this.sort.direction;\n\n    this.changeFilter.emit(this.filterSelected);\n    // this.pagination.currentPage=0;\n    //     this.pagination.sortColumn = this.sort.active;\n    //     this.pagination.sortDirection = this.sort.direction;\n\n    //     this.changePagination.emit(this.pagination);\n    //   }\n      \n    // }\n  }\n\n\n  //========================================================================\n  //=============================  FILTERING ===============================\n  //========================================================================\n  // hasFilterData(column:Column) {\n  //   if(column.filter && column.filter.datas) {\n  //     switch(column.filter.type) {\n  //       case (this.enumFilterType.comboMultiple): {\n  //         let datas = <FilterComboMultiple>column.filter.datas;\n  //         return datas.combos.listSelected!=null && datas.combos.listSelected.length>0;\n  //       }\n  //       case (this.enumFilterType.comboMultipleGroup): {\n  //         let datas = <FilterComboMultipleGroup>column.filter.datas;\n  //         return datas.combos.listSelected!=null && datas.combos.listSelected.length>0;\n  //       }\n  //       case (this.enumFilterType.dateRange): {\n  //         let datas = <FilterDateRange>column.filter.datas;\n  //         return datas.dateMax!=null || datas.dateMin!=null;\n  //       }\n  //       case (this.enumFilterType.numberRange): {\n  //         let datas = <FilterNumberRange>column.filter.datas;\n  //         // console.log(datas)\n  //         return datas.numberMax!=null || datas.numberMin!=null;\n  //       }\n  //       default: {\n  //         return false;\n  //       }\n  //     }\n  //   }\n\n  //   return false;\n\n  // }\n\n \n  applyFilter(column:Column, $event) {\n    // console.log('-------->column',column);\n    // console.log('$event',$event);\n    let fields=column.field.split('-');\n    // let filter = this.filterSelected[`${fields[0]}`];\n    // console.log('filter-selected',this.filterSelected);\n    // console.log('fields[0]',fields[0]);\n\n    switch(column.filter.type) {\n      case EnumFilterType.comboMultiple:\n        this.filterSelected[`${fields[0]}`] = $event;\n        break;\n      case EnumFilterType.comboMultipleGroup:\n        this.filterSelected[`${fields[0]}`] = $event;\n        break;\n      case EnumFilterType.dateRange:\n        let filter = <FilterDateRange>$event;\n        $event = (filter.dateMax==null && filter.dateMin==null) ? null : $event;\n        this.filterSelected[`${fields[0]}`]=$event;\n        console.log('-->filter date',$event);\n        break;\n      case EnumFilterType.numberRange:\n        let filterNumber = <FilterNumberRange>$event;\n        $event = (filterNumber.numberMax==null && filterNumber.numberMin==null) ? null : $event;\n        this.filterSelected[`${fields[0]}`]=$event;\n        console.log('-->FIELD0',fields[0]);\n        break;\n\n    }\n    // console.log('$event',$event);\n    column.filter.isEmpty = $event==null || $event.length==0;\n\n    console.log('-------->emit ',this.filterSelected);\n    this.changeFilter.emit(this.filterSelected);\n    // this.filterAs.selected.pagination.currentPage=0;\n    // this._store.dispatch(new LoadAsTableFilter(this.filterAs.selected));\n\n    // this.filterAs.selected.operationMethods = data;\n\n    // // this.loading(true);\n    // this.changeFilter.emit(<FilterTable> { columnName:columnName, value:$event });\n  }\n\n  //========================================================================\n  //============================  PAGINATION ===============================\n  //========================================================================\n  onPageChangeEvent(event) {\n    // if(this.pagination) {\n      this.loading(true);\n      \n      // this.pagination.currentPage = this.paginator.pageIndex;\n      // this.pagination.nbItemsPerPage = this.paginator.pageSize;\n\n      this.filterSelected[`pagination`].currentPage = this.paginator.pageIndex;\n      this.filterSelected[`pagination`].nbItemsPerPage = this.paginator.pageSize;\n      this.changeFilter.emit(this.filterSelected);\n      // this.changePagination.emit(this.pagination);\n    // }\n  }\n\n  // length:number;  //totalItems\n  // pageSize:number; //nbItemsPerPage\n  // pageSizeOptions:number[]; //nbItem [15, 100, 200]\n\n  onClickButtonIcon($event:Row) {\n    // console.log('columnField',columnField);\n    // console.log('$event',$event);\n    this.clickButtonIcon.emit($event);\n  }\n\n  loading(onloading:boolean){\n    // console.log('onloading', onloading);\n    this.onloading=onloading;\n\n    if(onloading) {\n      console.log('ON LOADING');\n      this.dataSource.data=[];\n    }\n      \n\n    if(!onloading) {\n      if(this.matTableRef && this.matTableRef.nativeElement) {\n\n\n        // this.matTableWidth = this.matTableRef.nativeElement.clientWidth;\n        // this.setDisplayedColumns();\n\n      }\n\n    }\n  }\n\n\n  // pour la sélection d'un texte dans le tableau\n  public mouseEvent: MouseEvent\n  public txtmouseEvent: boolean = false\n  public activeClick: number = -1\n\n  public onClickLigne(event: MouseEvent, index: number, row: any) {\n\n      if (this.txtmouseEvent == false) {\n          if (Math.abs(this.mouseEvent.clientX - event.clientX) < 10 && Math.abs(this.mouseEvent.clientY - event.clientY) < 10) {\n              this.activeClick = index;\n              console.log('this.activeClick',this.activeClick);\n              this.onRowClick.emit(row);\n          }\n          else {\n              this.txtmouseEvent = true\n          }\n      }\n      else {\n          this.txtmouseEvent = false\n      }\n  }\n  onMouseDown(event: MouseEvent) {\n    this.mouseEvent = event\n  }\n  \n}\n","import { Directive, ElementRef, EventEmitter, Output, Input, OnDestroy } from '@angular/core';\r\nimport ResizeObserver from 'resize-observer-polyfill'; //not needed really since > Chrome 64\r\n\r\nconst entriesMap = new WeakMap();\r\n\r\nconst ro = new ResizeObserver(entries => {\r\n  for (const entry of entries) {\r\n    if (entriesMap.has(entry.target)) {\r\n      const comp = entriesMap.get(entry.target);\r\n      comp._resizeCallback(entry);\r\n    }\r\n  }\r\n});\r\n\r\n@Directive({ selector: '[resizeObserver]' })\r\nexport class ResizeObserverDirective implements OnDestroy {\r\n  @Output()\r\n  resize = new EventEmitter();\r\n  \r\n  constructor(private el: ElementRef) {\r\n    const target = this.el.nativeElement;\r\n    entriesMap.set(target, this);\r\n    ro.observe(target);\r\n  }\r\n  \r\n  _resizeCallback(entry) {\r\n    console.log(entry.contentRect);\r\n    this.resize.emit(entry);\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    const target = this.el.nativeElement;\r\n    ro.unobserve(target);\r\n    entriesMap.delete(target);\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { MatTableFilterComponent } from \"./component/mat-table-filter.component\";\r\nimport { ResizeObserverDirective } from \"./directive/resize-observer.directive\";\r\nimport { DateFormatPipe } from \"./pipe/pipe-date\";\r\nimport { MatTableFilterColResizeService } from \"./service/mat-table-filter-col-resize.service\";\r\nimport { MiniFilterModule } from \"app/main/apps/web-component/mini-filter/mini-filter.module\";\r\n// import { MaterialModule } from \"@fuse/material.module\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { FuseThemeOptionsModule } from \"@fuse/components\";\r\nimport { AngularMaterialModule } from \"app/angular-material.module\";\r\nimport { ObserversModule } from \"@angular/cdk/observers\";\r\n\r\n@NgModule({\r\n    imports: [\r\n\r\n    //   FuseSharedModule,\r\n    //   RouterModule.forChild(routes),\r\n    //   FuseWidgetModule,\r\n    //   WidgetsModule,\r\n    //   GMapModule,\r\n        // FuseSharedModule,\r\n        MiniFilterModule,\r\n        FuseThemeOptionsModule,\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        AngularMaterialModule,\r\n        ObserversModule\r\n    //   NgxsModule.forFeature([\r\n    //     AsTableFilterState,\r\n    //     AsTableState,\r\n    //     AsDetailState,\r\n    //     AsSoldeState,\r\n    //     AsChartState,\r\n    //     AsInternalTransferState\r\n    // ])\r\n      \r\n    ],\r\n    declarations: [\r\n        MatTableFilterComponent,\r\n        ResizeObserverDirective,\r\n        DateFormatPipe\r\n    ],\r\n    exports:      [\r\n        MatTableFilterComponent,\r\n        FlexLayoutModule\r\n\r\n     ],\r\n    providers : [\r\n        DateFormatPipe,\r\n        MatTableFilterColResizeService\r\n  \r\n    ]\r\n  })\r\n  export class MatTableFilterModule { }","import { ChangePlanAmountTableFilter } from \"app/main/_ngxs/plan/plan-amount-list/plan-amount-list.action\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\nimport { FilterComboMultiple, FilterComboMultipleGroup } from \"app/main/_models/filters/mini-filter/combo-multiple.filters\";\r\nimport { FilterDateRange } from \"app/main/_models/filters/mini-filter/date-range.filter\";\r\nimport { AsChartEvolutionCustomOtfFilter } from \"app/main/_models/account-statement/as-chart/as-chart-evolution.model\";\r\nimport { FilterNumberRange } from \"app/main/_models/filters/mini-filter/number-range.filter\";\r\n\r\nexport class TableField<T> {\r\n    // name:string;\r\n    value:T;\r\n\r\n    // private _typeof:string;\r\n    // get typeof():string {\r\n    //     console.log('---typeof(this.value)',typeof(this.value));\r\n    //     this._typeof = typeof(this.value);\r\n    //     return this._typeof;\r\n    // }\r\n}\r\n\r\nexport enum EnumFilterType {\r\n    none=-1,\r\n    numberRange=0,\r\n    comboMultiple=1,\r\n    comboMultipleGroup=2,\r\n    dateRange=3,\r\n    label=4\r\n}\r\n\r\nexport enum EnumStyleType {\r\n    label=-1,\r\n    dotDatas=0,\r\n    numberUpDown=1,\r\n    buttonIcon=2\r\n}\r\n\r\nexport class MatTableFilter {\r\n    columns: Column[];\r\n    rows: Row[];\r\n    pagination: Pagination;\r\n}\r\n\r\nexport class Column {\r\n    index: number;\r\n    field: string;\r\n    label: string;\r\n    isSortable: boolean;\r\n    width:ColumnWidth;\r\n    pipe: boolean=false;\r\n    filter: ColumnFilter= new ColumnFilter();\r\n    style: ColumnStyle=new ColumnStyle();\r\n}\r\n\r\nexport class ColumnFilter {\r\n    type: EnumFilterType;\r\n    datas: FilterComboMultiple | FilterComboMultipleGroup | FilterDateRange | FilterNumberRange;\r\n    isEmpty: boolean = true;\r\n}\r\n\r\nexport class ColumnStyle {\r\n    type: EnumStyleType;\r\n    datas: any; //TypeNumberUpDown | TypeButtonIcon;\r\n}\r\n\r\nexport class TypeNumberUpDown {\r\n    isoNumber: number;\r\n}\r\n\r\nexport class TypeButtonIcon {\r\n    icon: string;\r\n    tooltip: string;\r\n}\r\n\r\nexport class ColumnWidth {\r\n    isFixed:boolean;\r\n    value:number;\r\n}\r\n\r\nexport class Row {\r\n    [key: string]: any; // Cell<any>;\r\n}\r\n\r\nexport class Cell<T> {\r\n    // field:string;\r\n    value:T;\r\n\r\n    // private _typeof:string;\r\n    // get typeof():string {\r\n    //     console.log('---typeof(this.value)',typeof(this.value));\r\n    //     this._typeof = typeof(this.value);\r\n    //     return this._typeof;\r\n    // }\r\n}\r\n\r\nexport class FilterTable {\r\n    columnName: string;\r\n    value: any;\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n    \r\n    // return value.split(' ').map(word => {\r\n    //   return word.length > 2 ? word[0].toUpperCase() + word.substr(1) : word;\r\n    // }).join(' ');\r\n@Pipe({\r\n  name: 'dateFormat'\r\n})\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date, args?: string): any {\r\n    return moment(value).format('DD/MM/YYYY');\r\n\r\n  }\r\n}","import { Injectable, ViewChild, ElementRef, Renderer2 } from \"@angular/core\";\r\nimport { MatTable } from \"@angular/material\";\r\nimport { MatTableFilter } from \"../model/mat-table-filter.model\";\r\n\r\n@Injectable()\r\nexport class MatTableFilterColResizeService {\r\npressed = false;\r\ncurrentResizeIndex: number;\r\nstartX: number;\r\nstartWidth: number;\r\nisResizingRight: boolean;\r\nresizableMousemove: () => void;\r\nresizableMouseup: () => void;\r\n// @ViewChild(MatTable, {read: ElementRef} ) private matTableRef: ElementRef;\r\n\r\n    constructor(\r\n        \r\n    ) { }\r\n    \r\n    onResizeColumn(event: any, index: number,renderer:Renderer2, matTableFilter:MatTableFilter, matTableRef:ElementRef) {\r\n        this.checkResizing(event, index, matTableFilter,matTableRef);\r\n        this.currentResizeIndex = index;\r\n        this.pressed = true;\r\n        this.startX = event.pageX;\r\n        this.startWidth = event.target.clientWidth;\r\n        event.preventDefault();\r\n        this.mouseMove(index,renderer,matTableFilter);\r\n    }\r\n\r\n    private checkResizing(event, index, matTableFilter:MatTableFilter,matTableRef:ElementRef) {\r\n        const cellData = this.getCellData(index,matTableRef);\r\n        if ( ( index === 0 ) || ( Math.abs(event.pageX - cellData.right) < cellData.width / 2 &&  index !== matTableFilter.columns.length - 1 ) ) {\r\n          this.isResizingRight = true;\r\n        } else {\r\n          this.isResizingRight = false;\r\n        }\r\n    }\r\n\r\n    private getCellData(index: number,matTableRef:ElementRef) {\r\n        const headerRow = matTableRef.nativeElement.children[0];\r\n        const cell = headerRow.children[index];\r\n        return cell.getBoundingClientRect();\r\n    }\r\n\r\n    mouseMove(index: number,renderer: Renderer2,matTableFilter:MatTableFilter) {\r\n    \r\n        this.resizableMousemove = renderer.listen('document', 'mousemove', (event) => {\r\n          if (this.pressed && event.buttons ) {\r\n            const dx = (this.isResizingRight) ? (event.pageX - this.startX) : (-event.pageX + this.startX);\r\n            const width = this.startWidth + dx;\r\n            if ( this.currentResizeIndex === index && width > 50 ) {\r\n              this.setColumnWidthChanges(index, width,matTableFilter);\r\n            }\r\n          }\r\n        });\r\n        this.resizableMouseup = renderer.listen('document', 'mouseup', (event) => {\r\n          if (this.pressed) {\r\n            this.pressed = false;\r\n            this.currentResizeIndex = -1;\r\n            this.resizableMousemove();\r\n            this.resizableMouseup();\r\n          }\r\n        });\r\n    }\r\n\r\n    setColumnWidthChanges(index: number, width: number, matTableFilter:MatTableFilter) {\r\n        const orgWidth = matTableFilter.columns[index].width.value;\r\n        const dx = width - orgWidth;\r\n        if ( dx !== 0 ) {\r\n          const j = ( this.isResizingRight ) ? index + 1 : index - 1;\r\n          const newWidth = matTableFilter.columns[j].width.value - dx;\r\n          if ( newWidth > 50 ) {\r\n            matTableFilter.columns[index].width.value = width;\r\n            this.setColumnWidth(matTableFilter.columns[index]);\r\n            matTableFilter.columns[j].width.value = newWidth;\r\n            this.setColumnWidth(matTableFilter.columns[j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnWidth(column: any) {\r\n    console.log('column.field',column.field);\r\n    // console.log('matTableFilter',matTableFilter);\r\n    const columnEls = Array.from( document.getElementsByClassName('mat-column-' + column.field) );\r\n    console.log('columnEls',columnEls[0]);\r\n    columnEls.forEach(( el: HTMLDivElement ) => {\r\n        el.style.width = column.width.value + 'px';\r\n        // console.log('el.style.width',el.style.width);\r\n    });\r\n    }\r\n}","<!-- <div class=\"content-filter\"\n  (click)=\"$event.stopPropagation()\" \n  (keyup)=\"$event.stopPropagation()\" \n  (keydown)=\"$event.stopPropagation()\">\n    <form name=\"dateRangeForm\" [formGroup]=\"dateRangeForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n      <mat-form-field class=\"w-100-p\">\n        <input class=\"mini-input\" matInput [matDatepicker]=\"dateRangeMin\" formControlName=\"dateRangeMin\" placeholder=\"Date {{filterDateRange.placeholder}} min\"> \n        <mat-datepicker-toggle matSuffix [for]=\"dateRangeMin\"></mat-datepicker-toggle>\n        <mat-datepicker #dateRangeMin></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"w-100-p\">\n        <input class=\"mini-input\" matInput [matDatepicker]=\"dateRangeMax\" formControlName=\"dateRangeMax\" placeholder=\"Date {{filterDateRange.placeholder}} max\"> \n        <mat-datepicker-toggle matSuffix [for]=\"dateRangeMax\"></mat-datepicker-toggle>\n        <mat-datepicker #dateRangeMax></mat-datepicker>\n      </mat-form-field>\n\n      \n      <button mat-raised-button \n        class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n        [disabled]= \"dateRangeForm.invalid || dateRangeForm.pristine\"\n        (click)=\"applyFilter()\">\n          <span>APPLIQUER</span>\n      </button>\n    </form>\n</div> -->\n<!-- <div class=\"content-filter\"> -->\n<form name=\"dateRangeForm\" \n  [formGroup]=\"dateRangeForm\" \n  class=\"content-mini-filter\" \n  fxLayout=\"column\" fxFlex>\n    <mat-form-field (click)=\"$event.stopPropagation()\">\n      <!-- [matDatepickerFilter]=\"datepickerFilterMin\" -->\n      <input matInput \n        placeholder=\"date min\" \n        formControlName=\"dateRangeMin\"\n        [matDatepicker]=\"matDatepickerMin\" readonly>\n      <mat-datepicker-toggle matSuffix [for]=\"matDatepickerMin\"></mat-datepicker-toggle>\n      <mat-datepicker #matDatepickerMin disabled=\"false\"></mat-datepicker>\n      <button mat-icon-button matSuffix (click)=\"clearMin()\"><mat-icon>clear</mat-icon></button>\n    </mat-form-field>\n\n    <mat-form-field (click)=\"$event.stopPropagation()\">\n      <!-- [matDatepickerFilter]=\"datepickerFilterMax\"  -->\n      <input matInput \n        placeholder=\"date max\"  \n        formControlName=\"dateRangeMax\"\n        [matDatepicker]=\"matDatepickerMax\" readonly>\n      <mat-datepicker-toggle matSuffix [for]=\"matDatepickerMax\"></mat-datepicker-toggle>\n      <mat-datepicker #matDatepickerMax disabled=\"false\"></mat-datepicker>\n      <button mat-icon-button matSuffix (click)=\"clearMax()\"><mat-icon>clear</mat-icon></button>\n    </mat-form-field>\n</form>\n<!-- </div> -->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS, MatDatepickerInputEvent } from '@angular/material';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport { Moment } from 'moment';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { FilterAsTable } from 'app/main/_models/filters/account-statement.filter';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { Select, Store } from '@ngxs/store';\nimport { LoadAsTableFilter } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.action';\nimport { FilterDateRange } from 'app/main/_models/filters/mini-filter/date-range.filter';\n\n@Component({\n  selector: 'filter-date-range',\n  templateUrl: './filter-date-range.component.html',\n  styleUrls: ['./filter-date-range.component.scss'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'fr'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ]\n})\nexport class FilterDateRangeComponent implements OnInit {\n  @Input() filterDateRange: FilterDateRange;\n  @Output() applyFilterDateRange=new EventEmitter<FilterDateRange>();\n  \n  dateRangeForm: FormGroup;\n  // events: [string, MatDatepickerInputEvent<Date>][] = []\n  \n  constructor(\n    private _formBuilder: FormBuilder\n\n  ) { \n\n  }\n\n  ngOnInit() {\n\n    this.dateRangeForm = this._formBuilder.group({\n        dateRangeMin: [this.filterDateRange.dateMin],\n        dateRangeMax: [this.filterDateRange.dateMax]\n      });\n\n    this.dateRangeForm.valueChanges.subscribe(val=>{\n      this.filterDateRange.dateMin= val.dateRangeMin!=null ? this.getDate(val.dateRangeMin) : null;\n      this.filterDateRange.dateMax= val.dateRangeMax!=null ? this.getDate(val.dateRangeMax) : null;\n      this.applyFilterDateRange.emit(this.filterDateRange);\n    });\n\n  }\n  \n  // datepickerFilterMin = (d: Date): boolean => {\n  //   let dateMax = this.events['changeMax']\n  //   return dateMax ? d <= dateMax : true\n  // }\n\n  // applyFilter(){\n\n  //   this.applyFilterDateRange.emit(this.filterDateRange);\n\n  //   //suppression du menu\n  //   var element=document.getElementsByClassName(\"content-filter\").item(0);\n  //   element.parentElement.remove();\n\n  // }\n\n  clearMin() {\n    this.dateRangeForm.controls['dateRangeMin'].reset()\n\n    this.filterDateRange.dateMin = null\n    this.applyFilterDateRange.emit(this.filterDateRange)\n  }\n\n  clearMax() {\n      this.dateRangeForm.controls['dateRangeMax'].reset()\n\n      this.filterDateRange.dateMax = null\n      this.applyFilterDateRange.emit(this.filterDateRange)\n  }\n\n  getDate(myDate){\n    var mt:Moment = <Moment>myDate;\n    var dt = mt.toDate();\n    dt.setMinutes(dt.getMinutes() - dt.getTimezoneOffset());\n    return dt;\n  }\n\n}\n","<!-- <div class=\"content-filter\"\n  (click)=\"$event.stopPropagation()\"\n  (keyup)=\"$event.stopPropagation()\" \n  (keydown)=\"$event.stopPropagation()\">\n\n  <form name=\"numberRangeForm\" [formGroup]=\"numberRangeForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n    <mat-form-field class=\"w-100-p\">\n      <input type=\"number\" formControlName=\"numberMin\" matInput placeholder=\"{{filterNumberRange.placeholder}} min\">\n      <mat-icon *ngIf=\"filterNumberRange.suffixIcon\" style=\"font-size:12px;\" matSuffix>{{filterNumberRange.suffixIcon}}</mat-icon>\n    </mat-form-field>\n\n    <mat-form-field class=\"w-100-p\">\n      <input type=\"number\" formControlName=\"numberMax\" matInput placeholder=\"{{filterNumberRange.placeholder}} max\">\n      <mat-icon *ngIf=\"filterNumberRange.suffixIcon\" style=\"font-size:12px;\" matSuffix>{{filterNumberRange.suffixIcon}}</mat-icon>\n    </mat-form-field>\n    \n    <button mat-raised-button \n      class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n      [disabled]= \"numberRangeForm.invalid || numberRangeForm.pristine\"\n      (click)=\"applyFilter()\">\n        <span>APPLIQUER</span>\n    </button>\n  </form>\n  \n</div> -->\n\n<form name=\"numberRangeForm\" \n  [formGroup]=\"numberRangeForm\" \n  class=\"content-mini-filter\" \n  fxLayout=\"column\" fxFlex>\n    <mat-form-field (click)=\"$event.stopPropagation()\">\n      <input type=\"number\" \n        placeholder=\"valeur min\"\n        formControlName=\"numberMin\" \n        matInput\n        (focusout)=\"onFocusOut()\" >\n      <button mat-icon-button matSuffix (click)=\"clearMin()\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-form-field>\n\n    <mat-form-field (click)=\"$event.stopPropagation()\">\n      <input type=\"number\" \n        placeholder=\"valeur max\"\n        formControlName=\"numberMax\" \n        (focusout)=\"onFocusOut()\"\n        matInput>\n      <button mat-icon-button matSuffix (click)=\"clearMax()\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-form-field>\n</form>\n","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { FilterNumberRange } from 'app/main/_models/filters/mini-filter/number-range.filter';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'filter-number-range',\n  templateUrl: './filter-number-range.component.html',\n  styleUrls: ['./filter-number-range.component.scss']\n})\nexport class FilterNumberRangeComponent implements OnInit {\n\n  @Input() filterNumberRange: FilterNumberRange;\n  @Output() applyFilter=new EventEmitter<FilterNumberRange>();\n\n  numberRangeForm: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder\n\n  ) {\n\n  }\n\n  ngOnInit() {\n    // this.stopPropagation=true;\n    this.numberRangeForm = this._formBuilder.group({\n      numberMin: [this.filterNumberRange.numberMin],\n      numberMax: [this.filterNumberRange.numberMax]\n      });\n\n    // this.numberRangeForm.valueChanges.subscribe(val=>{\n    //   this.filterNumberRange.numberMin = val.numberMin;\n    //   this.filterNumberRange.numberMax = val.numberMax;\n    //   console.log('this.filterNumberRange',this.filterNumberRange);\n    //   setTimeout(x=> {\n    //     this.applyFilter.emit(this.filterNumberRange);\n    //   },500);\n      \n    // });\n\n  }\n  \n  onFocusOut() {\n    this.filterNumberRange.numberMin = this.numberRangeForm.controls['numberMin'].value;\n    this.filterNumberRange.numberMax = this.numberRangeForm.controls['numberMax'].value;\n\n    this.applyFilter.emit(this.filterNumberRange);\n  }\n  //  applyFilter(){\n  //   this.applyFilter.emit(this.filterNumberRange);\n\n  //   //suppression du menu\n  //   var element=document.getElementsByClassName(\"content-filter\").item(0);\n  //   element.parentElement.remove();\n\n\n  //  }\n\n  clearMin() {\n    this.numberRangeForm.controls['numberRangeMin'].reset()\n\n    this.filterNumberRange.numberMin = null\n    this.applyFilter.emit(this.filterNumberRange)\n  }\n\n  clearMax() {\n      this.numberRangeForm.controls['numberRangeMax'].reset()\n\n      this.filterNumberRange.numberMax = null\n      this.applyFilter.emit(this.filterNumberRange)\n  }\n\n}\n","export class WidgetCardChartBarSkeleton {\r\n    \r\n    public static get getEmptyGraph() : any {\r\n        return {\r\n            title: {},\r\n            chartType : 'bar',\r\n            datasets  : [],\r\n            labels    : [],\r\n            colors    : [ {\r\n                backgroundColor: ['#FF7360','#6FC8CE','#6FC8CE','#FFFCC4','#B9E8E0','#FFFCC4','#B9E8E0','#6FC8CE','#FFFCC4','#FFFCC4','#B9E8E0','#FAFFF2','#B9E8E0'],\r\n                borderColor    : ['#FF7360','#6FC8CE','#6FC8CE','#FFFCC4','#B9E8E0','#FFFCC4','#B9E8E0','#6FC8CE','#FFFCC4','#FFFCC4','#B9E8E0','#FAFFF2','#B9E8E0']\r\n            }],\r\n            // backgroundColor:[\"#FF7360\", \"#6FC8CE\", \"#FAFFF2\", \"#FFFCC4\", \"#B9E8E0\"] \r\n            \r\n            // [\r\n            //     {\r\n            //         borderColor    : '#42a5f5',\r\n            //         backgroundColor: '#42a5f5'\r\n            //     },\r\n            //     {\r\n            //         borderColor    : '#42a5f5',\r\n            //         backgroundColor: '#FF7360'\r\n            //     },\r\n            // ],\r\n            options   : {\r\n                spanGaps           : false,\r\n                legend             : {\r\n                    display: false\r\n                },\r\n                maintainAspectRatio: false,\r\n                layout             : {\r\n                    padding: {\r\n                        top   : 24,\r\n                        left  : 16,\r\n                        right : 16,\r\n                        bottom: 16\r\n                    }\r\n                },\r\n                scales             : {\r\n                    xAxes: [\r\n                        {\r\n                            display: false,\r\n                            ticks: {\r\n                                display: false,\r\n                                step: 1000\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            display: false,\r\n                            ticks  : {\r\n                                min: -5000,\r\n                                max: 0\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","\n\n<div class=\"p-8\" >\n    \n    <div class=\"fuse-card\">\n        \n        <div *ngIf=\"!isLoaded\" \n            class=\"h-96 w-100-p\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\">\n            <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n            <div fxLayout=\"row\">chargement...</div>\n        </div>\n        \n        <div *ngIf=\"isLoaded\" class=\"p-12 pb-0\" fxLayout=\"row\" fxLayoutAlign=\"space-between end\" fxLayoutWrap>\n            <div >\n                <div class=\"h3 secondary-text\">{{widget.title.label}}</div>\n                <div class=\"font-size-24 font-weight-300 line-height-1 mt-8\">\n                    {{widget.title.averageAmount}} €\n                </div>\n            </div>\n\n            <div class=\"py-6 font-size-12\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <div fxFlex=\"row\" fxLayoutAlign=\"end center\" class=\"green-fg\"\n                     *ngIf=\"widget.title.ratioAmount > 0\">\n                    <mat-icon class=\"green-fg mr-4\">trending_up</mat-icon>\n                    <span>{{widget.title.ratioAmount}}%</span>\n                </div>\n                <div fxFlex=\"row\" fxLayoutAlign=\"end center\" class=\"red-fg\"\n                     *ngIf=\"widget.title.ratioAmount < 0\">\n                    <mat-icon class=\"red-fg mr-4\">trending_down</mat-icon>\n                    <span>{{widget.title.ratioAmount}}%</span>\n                </div>\n                <div fxFlex=\"row\" fxLayoutAlign=\"end center\" class=\"grey-fg\"\n                     *ngIf=\"widget.title.ratioAmount == 0\">\n                    <mat-icon class=\"grey-fg mr-4\">trending_flat</mat-icon>\n                    <span>{{widget.title.ratioAmount}}%</span>\n                </div>\n                <div class=\"ml-4 text-nowrap\">{{widget.title.ratioLabel}}</div>\n            </div>\n\n        </div>\n\n        <div *ngIf=\"isLoaded\" class=\"h-96 w-100-p\">\n            <canvas baseChart\n                    [datasets]=\"widget.datasets\"\n                    [labels]=\"widget.labels\"\n                    [colors]=\"widget.colors\"\n                    [options]=\"widget.options\"\n                    [chartType]=\"widget.chartType\"\n                    (chartClick)=\"chartClicked($event)\">\n            </canvas>\n        </div>\n\n        \n\n    </div>\n\n</div>\n\n<!-- <div>\n        <ngx-charts-pie-chart class=\"h-20 w-20-p\"\n            *fuseIfOnDom\n            [scheme]=\"widget8.scheme\"\n            [results]=\"widget8.mainChart\"\n            [legend]=\"widget8.legend\"\n            [explodeSlices]=\"widget8.explodeSlices\"\n            [labels]=\"widget8.labels\"\n            [doughnut]=\"widget8.doughnut\"\n            [gradient]=\"widget8.gradient\"\n            (select)=\"widget8.onSelect($event)\">\n        </ngx-charts-pie-chart>\n    </div> -->\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, ViewChild } from '@angular/core';\nimport { WidgetCardChartBarSkeleton } from './widget-card-chart-bar-skeleton.model';\nimport { WidgetCardChartBar } from 'app/main/_models/chart/widget-card-chart-bar.model';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n  selector: 'widget-card-chart-bar',\n  templateUrl: './widget-card-chart-bar.component.html',\n  styleUrls: ['./widget-card-chart-bar.component.scss']\n})\nexport class WidgetCardChartBarComponent implements OnInit, OnChanges {\nwidget: any;\nisLoaded: boolean;\n@Input() widgetCardChartBar: WidgetCardChartBar;\n@ViewChild(BaseChartDirective, { static: false }) private _chart;\n\n\n  // widget8: any = {};\n\n\n  constructor() {\n  //   this.widget8 = {\n  //     title    : 'Budget Distribution',\n  //     mainChart: [\n  //       {\n  //           name : 'Wireframing',\n  //           value: 12\n  //       },\n  //       {\n  //           name : 'Design',\n  //           value: 17\n  //       },\n  //       {\n  //           name : 'Coding',\n  //           value: 28\n  //       },\n  //       {\n  //           name : 'Marketing',\n  //           value: 25\n  //       },\n  //       {\n  //           name : 'Extra',\n  //           value: 13\n  //       },\n  //       {\n  //         name : 'Extra',\n  //         value: 2\n  //     }\n  //   ],\n\n  //     legend       : false,\n  //     explodeSlices: true,\n  //     labels       : true,\n  //     doughnut     : false,\n  //     gradient     : true,\n  //     scheme       : {\n  //         domain: ['#f44336', '#9c27b0', '#03a9f4', '#e91e63', '#ffc107','#f44336','#f44336']\n  //     },\n  //     onSelect     : (ev) => {\n  //         console.log(ev);\n  //     }\n  // };\n\n  // console.log('widget8', this.widget8);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.widgetCardChartBar = changes.widgetCardChartBar.currentValue;\n    this.isLoaded = false;\n\n    if(this.widgetCardChartBar!=null) {\n      if(this.widgetCardChartBar.isLoaded) {\n\n        this.widget = null;\n        this.widget= WidgetCardChartBarSkeleton.getEmptyGraph;\n        this.widget.datasets = this.widgetCardChartBar.chart.dataSets;\n        this.widget.labels = this.widgetCardChartBar.chart.labels.map(x=>x.label);\n        this.widget.colors = this.widgetCardChartBar.chart.colors;\n        this.widget.title = this.widgetCardChartBar.title;\n        this.widget.options.scales.yAxes = this.widgetCardChartBar.chart.options.scales.yAxes;\n\n        //force refresh graph\n        setTimeout(() => {\n          this._chart.refresh();\n        }, 10);\n     \n        this.isLoaded=true;\n\n      }\n    }\n\n\n\n\n    \n \n  }\n  \n  ngOnInit() {\n  }\n\n  chartClicked($event) {\n    console.log('chart-event',$event);\n    console.log(\"Index\", $event.active[0]._index);\n    console.log(\"Data\" , $event.active[0]._chart.config.data.datasets[0].data[$event.active[0]._index]);\n    console.log(\"Label\" , $event.active[0]._chart.config.data.labels[$event.active[0]._index]);\n  }\n\n\n}\n","<!-- WIDGET 6 -->\n\n<div class=\"p-8\" >\n<!-- <fuse-widget  class=\"widget\" fxLayout=\"column\"\nfxFlex=\"100\" fxFlex.gt-sm=\"50\"> -->\n<div class=\"fuse-card\">\n<!-- Front -->\n<div *ngIf=\"isLoaded && widget.data!=null\" class=\"fuse-widget-front\">\n\n<div  \n    class=\"mh-16 py-8 border-bottom\" \n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\">\n\n    <div class=\"py-8 border-right\" fxLayout=\"row\" fxLayoutAlign=\"center center\"\n    fxFlex=\"100\" fxFlex.gt-sm=\"50\">\n    <span class=\"mat-small mb-0\">\n        {{ widget.data.title }} opération\n    </span>\n    </div>\n\n    <div class=\"py-8\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex=\"100\"\n        fxFlex.gt-sm=\"50\">\n    <span class=\"mat-caption mb-0\">\n        affiché/total: <b>{{test | number: '1.0-2'}}</b> %\n    </span>\n    </div>\n</div>\n\n<div class=\"h-200\">\n    <!-- [legend]=\"widget6.showLegend\" -->\n    <!-- [results]=\"widget.data.mainChart\" -->\n    <!-- [results]=\"widgetData.mainChart['TW']\" -->\n    <ngx-charts-pie-chart\n        *fuseIfOnDom\n        [scheme]=\"widget.pieChart.scheme\"\n        \n        [results]=\"widget.data.mainChart\"\n        [explodeSlices]=\"widget.pieChart.explodeSlices\"\n        [labels]=\"widget.pieChart.labels\"\n        [doughnut]=\"widget.pieChart.doughnut\"\n        [gradient]=\"widget.pieChart.gradient\"\n        (select)=\"onSelect($event)\">\n    </ngx-charts-pie-chart>\n</div>\n\n<div \n    class=\"py-8 px-16 border-top\" \n    fxLayout=\"row\" \n    fxLayoutAlign=\"start center\">\n    \n    <form name=\"selectMultipleForm\" \n        [formGroup]=\"selectMultipleForm\" \n        class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n        \n        <mat-form-field class=\"w-100-p\">\n            <mat-select class=\"mini-select\" formControlName=\"comboMultiple\" [compareWith]=\"compareObjects\" \n                placeholder={{widget.data.title}} multiple>\n                \n                <mat-optgroup *ngFor=\"let group of widget.data.ranges.list\" [label]=\"group.name\">\n                <mat-option *ngFor=\"let item of group.selects\" [value]=\"item\">\n                    {{ item.name }}\n                </mat-option>\n                </mat-optgroup>\n            </mat-select>  \n        </mat-form-field>\n    </form>\n    \n    \n    \n    \n    \n    \n\n</div> \n\n</div>\n<!-- / Front -->\n\n<!-- </fuse-widget> -->\n</div>\n</div>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { PieChart } from 'app/main/_models/chart/pie-chart.model';\nimport { WidgetCardChartPieSelect } from 'app/main/_models/chart/widget-card-chart-pie-select.model';\n\nimport { ISelect, SelectNameValue } from 'app/main/_models/generics/select.model';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatColors } from '@fuse/mat-colors';\n\n@Component({\n  selector: 'app-widget-card-chart-pie-select',\n  templateUrl: './widget-card-chart-pie-select.component.html',\n  styleUrls: ['./widget-card-chart-pie-select.component.scss']\n})\nexport class WidgetCardChartPieSelectComponent implements OnInit, OnChanges {\n  selectMultipleForm: FormGroup;\n  isLoaded: boolean = false;\n  colorRef : any;\n  test: number;\n\n  @Input() widget: WidgetCardChartPieSelect;\n\n  constructor(\n    private _formBuilder: FormBuilder\n  ) {\n    this.colorRef = MatColors.getMatColorByIndex('red');\n    // console.log('widget',this.widget);\n    // this.widget.chart.scheme.domain = colorRef;\n    // this.calculateMainChart(this.widget.data.ranges.listSelected);\n    \n    // let ranges = new ComboMultipleValue<number>();\n    // ranges.list=[{id:0,name:'categorie 1',value:20},{id:1,name:'categorie 2',value:20},{id:1,name:'categorie 3',value:10},{id:1,name:'categorie 4',value:50}];\n    // ranges.listSelected = [{id:0,name:'categorie 1',value:20},{id:1,name:'categorie 2',value:20}];\n    \n    // let mainchart = [{ name: 'categorie 1', value: 20 },{name:'categorie 2',value:30},{name:'categorie 3',value:10}];\n\n    // let data = <Data><unknown>{ title: 'test', ranges: ranges, mainChart: mainchart }\n    \n    // this.widget= new WidgetCardChartPieSelected(data,colors);\n    \n    // this.widget.data = data;\n\n    // this.widget.isLoaded=true;\n\n   }\n\n  ngOnInit() {\n   \n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // console.log('changes.widget.currentValue',changes.widget.currentValue);\n    this.widget = changes.widget.currentValue;\n    this.isLoaded = false;\n    \n    if(this.widget.data!=null) {\n      // console.log('this.widget.chart',this.widget.pieChart);  \n      this.widget.pieChart.scheme.domain = this.colorRef;\n        this.calculateMainChart(this.widget.data.ranges.listSelected);\n\n        this.selectMultipleForm = this._formBuilder.group({\n            comboMultiple: [this.widget.data.ranges.listSelected]\n          });\n      \n        this.selectMultipleForm.valueChanges.subscribe(val=>{\n            this.calculateMainChart(val.comboMultiple);\n          });\n\n\n        this.isLoaded = true;\n    }\n    \n    \n\n    // if(this.widget!=null) {\n    //   if(this.widget.isLoaded) {\n\n    //     this.widget = null;\n    //     this.widget= WidgetCardChartBarSkeleton.getEmptyGraph;\n    //     this.widget.datasets = this.widgetCardChartBar.chart.dataSets;\n    //     this.widget.labels = this.widgetCardChartBar.chart.labels.map(x=>x.label);\n    //     this.widget.colors = this.widgetCardChartBar.chart.colors;\n    //     this.widget.title = this.widgetCardChartBar.title;\n    //     this.widget.options.scales.yAxes = this.widgetCardChartBar.chart.options.scales.yAxes;\n\n    //     //force refresh graph\n    //     setTimeout(() => {\n    //       this._chart.refresh();\n    //     }, 10);\n     \n    //     this.isLoaded=true;\n\n    //   }\n    // }\n  }\n\n  calculateMainChart(listSelected) {\n    this.widget.data.ranges.listSelected = listSelected;\n        //Calcul du restant (autres) selon la selection\n        var sumSelected = this.widget.data.ranges.listSelected\n            .map(x=>x.value)\n            .reduce((sum,current) => sum + current);\n        var sumTotal = this.widget.data.ranges.list\n            .map(x=>x.selects.map(x=>x.value).reduce((sum,current) => sum + current))\n            .reduce(function(acc, val) { return acc + val; }, 0);\n\n        // console.log('sumSelected',sumSelected);\n        this.test = sumSelected;\n        // if(sumTotal-sumSelected<100) {\n        //     let otherAmount = <SelectNameValue<number>> {\n        //         id : -1,\n        //         name: 'autres',\n        //         value: sumTotal-sumSelected\n        //     }\n        //     this.widget.data.ranges.listSelected.push(otherAmount);\n        // }\n\n        this.widget.data.mainChart =  this.widget.data.ranges.listSelected;\n  }\n\n  onSelect($event) {\n    console.log($event);\n  }\n\n  compareObjects(o1: ISelect, o2: ISelect) {\n    return o1 && o2 ? o1.id === o2.id : o1 === o2;\n\n }\n\n\n}\n"],"sourceRoot":"webpack:///"}