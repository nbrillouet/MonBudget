{"version":3,"sources":["./src/app/main/_models/filters/operation-type-family.filter.ts","./src/app/main/_models/filters/operation-type.filter.ts","./src/app/main/_models/filters/operation.filter.ts","./src/app/main/_models/generics/select.model.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.action.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.action.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action.ts","./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.action.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.action.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action.ts","./src/app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state.ts","./src/app/main/_ngxs/referential/operation/operation-detail/operation-detail.action.ts","./src/app/main/_ngxs/referential/operation/operation-detail/operation-detail.state.ts","./src/app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.action.ts","./src/app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state.ts","./src/app/main/_ngxs/referential/operation/operation-list/operation-list.action.ts","./src/app/main/_ngxs/referential/operation/operation-list/operation-list.state.ts","./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-detail/operation-type-family-detail.component.html","./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-detail/operation-type-family-detail.component.ts","./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-list/operation-type-family-list.component.html","./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-list/operation-type-family-list.component.ts","./src/app/main/apps/referential/operations/operation-type-family/operation-type-family.service.ts","./src/app/main/apps/referential/operations/operation-type/operation-type-detail/operation-type-detail.component.html","./src/app/main/apps/referential/operations/operation-type/operation-type-detail/operation-type-detail.component.ts","./src/app/main/apps/referential/operations/operation-type/operation-type-list/operation-type-list.component.html","./src/app/main/apps/referential/operations/operation-type/operation-type-list/operation-type-list.component.ts","./src/app/main/apps/referential/operations/operation-type/operation-type.service.ts","./src/app/main/apps/referential/operations/operation/operation-detail/operation-detail.component.html","./src/app/main/apps/referential/operations/operation/operation-detail/operation-detail.component.ts","./src/app/main/apps/referential/operations/operation/operation-list/operation-list.component.html","./src/app/main/apps/referential/operations/operation/operation-list/operation-list.component.ts","./src/app/main/apps/referential/operations/operations-main-tab/operations-main-tab.component.html","./src/app/main/apps/referential/operations/operations-main-tab/operations-main-tab.component.ts","./src/app/main/apps/referential/operations/operations-main/operations-main.component.html","./src/app/main/apps/referential/operations/operations-main/operations-main.component.ts","./src/app/main/apps/referential/operations/operations.module.ts","./src/app/main/apps/web-component/mini-filter/filter-label/filter-label.component.html","./src/app/main/apps/web-component/mini-filter/filter-label/filter-label.component.ts","./src/app/main/apps/web-component/mini-filter/filter-movement/filter-movement.component.html","./src/app/main/apps/web-component/mini-filter/filter-movement/filter-movement.component.ts"],"names":[],"mappings":"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","file":"referential-operations-operations-module-ngfactory.js","sourcesContent":["import { Pagination } from \"../pagination.model\";\r\nimport { ISelect } from \"../generics/select.model\";\r\nimport { IUserForGroup } from \"../user.model\";\r\n\r\nexport class FilterOtfTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    movement: ISelect = null;\r\n\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOtfTable {\r\n    movements: ISelect[];\r\n\r\n    selected : FilterOtfTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOtfTableSelected();\r\n    }\r\n}","import { IUserForGroup } from \"../user.model\";\r\nimport { Pagination } from \"../pagination.model\";\r\nimport { ISelect } from \"../generics/select.model\";\r\n\r\nexport class FilterOtTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    otf: ISelect = null;\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOtTable {\r\n    otfs: ISelect[];\r\n    selected : FilterOtTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOtTableSelected();\r\n    }\r\n}","import { ISelect, ISelectGroup } from \"../generics/select.model\";\r\nimport { IUserForGroup } from \"../user.model\";\r\nimport { Pagination } from \"../pagination.model\";\r\n\r\nexport class FilterOperation {\r\n    operationMethod: ISelect;\r\n    operationType: ISelect;\r\n}\r\n\r\nexport class FilterOperationTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    operationMethods: ISelect[] = null;\r\n    operationTypes: ISelect[] = null;\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOperationTable {\r\n    operationTypes: ISelectGroup[];\r\n    operationMethods: ISelect[];\r\n    selected : FilterOperationTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOperationTableSelected();\r\n    }\r\n}","export interface ISelect {\r\n    id: number;\r\n    label: string;\r\n}\r\n\r\nexport interface ISelectGroup {\r\n    id: number;\r\n    label: string;\r\n    selects: ISelect[];\r\n}\r\n\r\nexport class SelectYear {\r\n    id:number;\r\n    label:string;\r\n    year:number;\r\n}\r\n\r\nexport interface ISelectColor {\r\n    id: number;\r\n    label: string;\r\n    color: string;\r\n}\r\n\r\nexport enum EnumSelectType {\r\n    empty = 0,\r\n    inconnu = 1,\r\n    inconnue = 11,\r\n    tous =2,\r\n    toutes=22,\r\n    aucun=3,\r\n    aucune=33\r\n}\r\n\r\nexport class SelectNameValue<T> {\r\n    id: number;\r\n    name: string;\r\n    value: T;\r\n}\r\n\r\nexport class SelectNameValueGroup<T> {\r\n    id: number;\r\n    name: string;\r\n    selects: SelectNameValue<T>[];\r\n}\r\n\r\n","import { OtfDetail } from \"app/main/_models/referential/operation-type-family.model\";\r\n\r\n\r\nexport const OTF_DETAIL_LOAD = 'otf-detail-load';\r\n// export const OTF_DETAIL_LOAD_SUCCESS = 'otf-detail-load-success';\r\nexport const OTF_DETAIL_CLEAR = 'otf-detail-clear';\r\n\r\nexport class LoadOtfDetail {\r\n    static readonly type = OTF_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\n// export class LoadOtfDetailSuccess {\r\n//     static readonly type = OTF_DETAIL_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: OtfDetail) { }\r\n// }\r\n\r\nexport class ClearOtfDetail {\r\n    static readonly type = OTF_DETAIL_CLEAR;\r\n}\r\n\r\n","import { OtfDetail } from \"app/main/_models/referential/operation-type-family.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtfDetail, ClearOtfDetail } from \"./operation-type-family-detail.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\n\r\nexport class OtfDetailStateModel extends Datas<OtfDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet otfDetailStateModel = new OtfDetailStateModel();\r\n\r\n@State<OtfDetailStateModel>({\r\n    name: 'OtfDetail',\r\n    defaults : otfDetailStateModel\r\n})\r\n\r\nexport class OtfDetailState extends LoaderState {\r\n\r\n    constructor(\r\n        private _otfService: OtfService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtfDetailStateModel) {\r\n    \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtfDetail)\r\n    loadOtfDetail(context: StateContext<OtfDetailStateModel>, action: LoadOtfDetail) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._otfService.getOtfDetail(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadOtfDetailSuccess)\r\n    // loadSuccess(context: StateContext<OtfDetailStateModel>, action: LoadOtfDetailSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    @Action(ClearOtfDetail)\r\n    clear(context: StateContext<OtfDetailStateModel>) {\r\n        return context.setState(new OtfDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","import { FilterOtfTable, FilterOtfTableSelected } from \"app/main/_models/filters/operation-type-family.filter\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\n\r\nexport const OTF_TABLE_FILTER_LOAD = 'otf-table-filter-load';\r\n// export const OTF_TABLE_FILTER_LOAD_SUCCESS = 'otf-table-filter-load-success';\r\nexport const OTF_TABLE_FILTER_CHANGE = 'otf-table-filter-change';\r\nexport const OTF_TABLE_FILTER_UPDATE_PAGINATION = 'otf-table-filter-update-pagination';\r\n\r\nexport class LoadOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOtfTable) { }\r\n}\r\n\r\n// export class LoadOtfTableFilterSuccess {\r\n//     static readonly type = OTF_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: FilterOtfTable) { }\r\n// }\r\n\r\nexport class ChangeOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOtfTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterOtfTable, FilterOtfTableSelected } from \"app/main/_models/filters/operation-type-family.filter\";\r\nimport { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtfTableFilter, ChangeOtfTableFilter, UpdatePaginationOtfTableFilter } from \"./operation-type-family-list-filter.action\";\r\nimport { LoadOtfTableDatas } from \"../operation-type-family-list/operation-type-family-list.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\n\r\n\r\nexport class OtfTableFilterStateModel extends FilterInfo<FilterOtfTable> {\r\n    constructor () {\r\n        super(FilterOtfTable);\r\n    }\r\n}\r\n\r\nlet otfTableFilterStateModel = new OtfTableFilterStateModel();\r\n\r\n@State<OtfTableFilterStateModel>({\r\n    name: 'OtfTableFilter',\r\n    defaults : otfTableFilterStateModel\r\n})\r\n\r\nexport class OtfTableFilterState extends LoaderState {\r\n\r\n    constructor(\r\n        private _otfService: OtfService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    // async delay(ms: number) {\r\n    //     await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\r\n    //   }\r\n\r\n    @Selector()\r\n    static get(state: OtfTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    // @Selector()\r\n    // static getFilter(state: PlanTableComboFilterStateModel) {\r\n    //     return state.filter;\r\n    // }\r\n\r\n    @Action(LoadOtfTableFilter)\r\n    loadOtfTableFilter(context: StateContext<OtfTableFilterStateModel>, action: LoadOtfTableFilter) {\r\n        this.loading(context,'filters');\r\n        \r\n        const state = context.getState();\r\n        state.filters = null;\r\n        context.patchState(state);\r\n\r\n        this._otfService.getOtfTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n          \r\n                //conserver le payload\r\n                let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n                let state = context.getState();\r\n                state.filters = action.payload;\r\n                context.patchState(state);\r\n                \r\n                //TODO a controler\r\n                context.dispatch(new ChangeOtfTableFilter(payload));\r\n\r\n                this.loaded(context,'filters');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadOtfTableFilterSuccess)\r\n    // loadSuccess(context: StateContext<OtfTableFilterStateModel>, action: LoadOtfTableFilterSuccess) {\r\n        \r\n    //     //conserver le payload\r\n    //     let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n    //     let state = context.getState();\r\n    //     state.filters = action.payload;\r\n\r\n    //     context.patchState(state);\r\n        \r\n    //     context.dispatch(new ChangeOtfTableFilter(payload));\r\n        \r\n    // }\r\n        // this.delay(3000).then(any=>{\r\n    @Action(ChangeOtfTableFilter)\r\n    changeFilter(context: StateContext<OtfTableFilterStateModel>, action: ChangeOtfTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOtfTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOtfTableFilter)\r\n    UpdatePaginationOtfTableFilter(context: StateContext<OtfTableFilterStateModel>, action: UpdatePaginationOtfTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n        // this.delay(3000).then(any=>{\r\n            context.patchState(state);\r\n        // });\r\n    }\r\n\r\n    // HasChangedState( state: FilterOtfTableSelected, payload : FilterOtfTableSelected ) {\r\n\r\n    //     return false;\r\n    //     // if(payload.account == null || payload.otfState == null ) {\r\n    //     //     return false;\r\n    //     // }\r\n    //     if( state.movement==null && payload.movement!=null) {\r\n    //         return true;\r\n    //     };\r\n    //     if(state.label!=payload.label) {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     if(state.pagination != payload.pagination) {\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n        \r\n    // }\r\n\r\n    // ReloadFilters(state: FilterOtfTable, payload:FilterOtfTable ) {\r\n        \r\n    //     if(state.selected.idImport==null) {\r\n            \r\n    //         return true;\r\n    //     }\r\n        \r\n    //     if(state.selected.idImport != payload.selected.idImport) {\r\n            \r\n    //         return true;\r\n    //     }\r\n\r\n    //     if(state.selected.account && payload.selected.account && state.selected.account.id != payload.selected.account.id) {\r\n\r\n    //         return true;\r\n    //     }\r\n\r\n    //     return false;\r\n    // }\r\n}","export const OTF_TABLE_LOAD = 'otf-table-load';\r\n// export const OTF_TABLE_LOAD_SUCCESS = 'otf-table-load-success';\r\nexport const OTF_TABLE_FILTER_CHANGE = 'otf-table-filter-change';\r\nexport const OTF_TABLE_CLEAR = 'otf-table-clear';\r\n\r\nexport class LoadOtfTableDatas {\r\n    static readonly type = OTF_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\n// export class LoadOtfTableDatasSuccess {\r\n//     static readonly type = OTF_TABLE_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\n// export class ChangeAsifTableFilter {\r\n//     static readonly type = ASIF_TABLE_FILTER_CHANGE;\r\n \r\n//     constructor(public payload: FilterAsifTableSelected) { }\r\n// }\r\n\r\nexport class ClearOtfTableDatas {\r\n    static readonly type = OTF_TABLE_CLEAR;\r\n    // constructor(public payload: any) { }\r\n}","import { OtfTable } from \"app/main/_models/referential/operation-type-family.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtfTableDatas, ClearOtfTableDatas } from \"./operation-type-family-list.action\";\r\nimport { UpdatePaginationOtfTableFilter } from \"../operation-type-family-list-filter/operation-type-family-list-filter.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class OtfTableStateModel extends Datas<OtfTable> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OtfTableStateModel();\r\n@State<OtfTableStateModel>({\r\n    name: 'OtfTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OtfTableState extends LoaderState {\r\n    constructor(\r\n        private _otfService: OtfService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtfTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n\r\n    // async delay(ms: number) {\r\n    //     await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\r\n    //   }\r\n\r\n    @Action(LoadOtfTableDatas)\r\n    loadGrid(context: StateContext<OtfTableStateModel>, action: LoadOtfTableDatas) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        this._otfService.getOtfTable(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = action.payload.datas;\r\n                context.patchState(state);\r\n                //TODO: a controler\r\n                this._store.dispatch(new UpdatePaginationOtfTableFilter(action.payload.pagination));\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadOtfTableDatasSuccess)\r\n    // loadSuccess(context: StateContext<OtfTableStateModel>, action: LoadOtfTableDatasSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload.datas;\r\n    //     // state.pagination = action.payload.pagination;\r\n\r\n    //     context.patchState(state);\r\n\r\n\r\n    //     this._store.dispatch(new UpdatePaginationOtfTableFilter(action.payload.pagination));\r\n    // }\r\n\r\n    @Action(ClearOtfTableDatas)\r\n    clear(context: StateContext<OtfTableStateModel>) {\r\n        return context.setState(new OtfTableStateModel());\r\n    }\r\n\r\n\r\n\r\n}","import { OtDetail } from \"app/main/_models/referential/operation-type.model\";\r\n\r\nexport const OT_DETAIL_LOAD = 'ot-detail-load';\r\n// export const OT_DETAIL_LOAD_SUCCESS = 'ot-detail-load-success';\r\nexport const OT_DETAIL_CLEAR = 'ot-detail-clear';\r\n\r\nexport class LoadOtDetail {\r\n    static readonly type = OT_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\n// export class LoadOtDetailSuccess {\r\n//     static readonly type = OT_DETAIL_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: OtDetail) { }\r\n// }\r\n\r\nexport class ClearOtDetail {\r\n    static readonly type = OT_DETAIL_CLEAR;\r\n}","import { OtDetail } from \"app/main/_models/referential/operation-type.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtDetail, ClearOtDetail } from \"./operation-type-detail.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class OtDetailStateModel extends Datas<OtDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet otDetailStateModel = new OtDetailStateModel();\r\n\r\n@State<OtDetailStateModel>({\r\n    name: 'OtDetail',\r\n    defaults : otDetailStateModel\r\n})\r\n\r\nexport class OtDetailState extends LoaderState {\r\n\r\n    constructor(\r\n        private _otService: OtService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtDetailStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtDetail)\r\n    loadOtDetail(context: StateContext<OtDetailStateModel>, action: LoadOtDetail) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._otService.getOtDetail(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadOtDetailSuccess)\r\n    // loadSuccess(context: StateContext<OtDetailStateModel>, action: LoadOtDetailSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    @Action(ClearOtDetail)\r\n    clear(context: StateContext<OtDetailStateModel>) {\r\n        return context.setState(new OtDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","import { FilterOtTable, FilterOtTableSelected } from \"app/main/_models/filters/operation-type.filter\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\n\r\nexport const OT_TABLE_FILTER_LOAD = 'ot-table-filter-load';\r\n// export const OT_TABLE_FILTER_LOAD_SUCCESS = 'ot-table-filter-load-success';\r\nexport const OT_TABLE_FILTER_CHANGE = 'ot-table-filter-change';\r\nexport const OT_TABLE_FILTER_UPDATE_PAGINATION = 'ot-table-filter-update-pagination';\r\n\r\nexport class LoadOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOtTable) { }\r\n}\r\n\r\n// export class LoadOtTableFilterSuccess {\r\n//     static readonly type = OT_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: FilterOtTable) { }\r\n// }\r\n\r\nexport class ChangeOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOtTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterOtTable } from \"app/main/_models/filters/operation-type.filter\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtTableFilter, ChangeOtTableFilter, UpdatePaginationOtTableFilter } from \"./operation-type-list-filter.action\";\r\nimport { LoadOtTableDatas } from \"../operation-type-list/operation-type-list.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\n\r\nexport class OtTableFilterStateModel extends FilterInfo<FilterOtTable> {\r\n    constructor () {\r\n        super(FilterOtTable);\r\n    }\r\n}\r\n\r\nlet otTableFilterStateModel = new OtTableFilterStateModel();\r\n\r\n@State<OtTableFilterStateModel>({\r\n    name: 'OtTableFilter',\r\n    defaults : otTableFilterStateModel\r\n})\r\n\r\nexport class OtTableFilterState extends LoaderState {\r\n\r\n    constructor(\r\n        private _otService: OtService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtTableFilter)\r\n    loadOtfTableFilter(context: StateContext<OtTableFilterStateModel>, action: LoadOtTableFilter) {\r\n        this.loading(context,'filters');\r\n        \r\n        const state = context.getState();\r\n        state.filters = null;\r\n        context.patchState(state);\r\n\r\n        this._otService.getOtTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n                //conserver le payload\r\n                let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n                let state = context.getState();\r\n                state.filters = result;\r\n                context.patchState(state);\r\n                \r\n                //TODO: a controler\r\n                context.dispatch(new ChangeOtTableFilter(payload));\r\n\r\n                this.loaded(context,'filters');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadOtTableFilterSuccess)\r\n    // loadSuccess(context: StateContext<OtTableFilterStateModel>, action: LoadOtTableFilterSuccess) {\r\n        \r\n    //     //conserver le payload\r\n    //     let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n    //     let state = context.getState();\r\n    //     state.filters = action.payload;\r\n\r\n    //     context.patchState(state);\r\n        \r\n    //     context.dispatch(new ChangeOtTableFilter(payload));\r\n        \r\n    // }\r\n\r\n    @Action(ChangeOtTableFilter)\r\n    changeFilter(context: StateContext<OtTableFilterStateModel>, action: ChangeOtTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOtTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOtTableFilter)\r\n    UpdatePaginationOtTableFilter(context: StateContext<OtTableFilterStateModel>, action: UpdatePaginationOtTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n\r\n        context.patchState(state);\r\n\r\n    }\r\n\r\n}","export const OT_TABLE_LOAD = 'ot-table-load';\r\n// export const OT_TABLE_LOAD_SUCCESS = 'ot-table-load-success';\r\nexport const OT_TABLE_FILTER_CHANGE = 'ot-table-filter-change';\r\nexport const OT_TABLE_CLEAR = 'ot-table-clear';\r\n\r\nexport class LoadOtTableDatas {\r\n    static readonly type = OT_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\n// export class LoadOtTableDatasSuccess {\r\n//     static readonly type = OT_TABLE_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\nexport class ClearOtTableDatas {\r\n    static readonly type = OT_TABLE_CLEAR;\r\n}","import { OtTable } from \"app/main/_models/referential/operation-type.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtTableDatas, ClearOtTableDatas } from \"./operation-type-list.action\";\r\nimport { UpdatePaginationOtTableFilter } from \"../operation-type-list-filter/operation-type-list-filter.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class OtTableStateModel extends Datas<OtTable> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OtTableStateModel();\r\n@State<OtTableStateModel>({\r\n    name: 'OtTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OtTableState extends LoaderState {\r\n    constructor(\r\n        private _otService: OtService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtTableDatas)\r\n    loadGrid(context: StateContext<OtTableStateModel>, action: LoadOtTableDatas) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        this._otService.getOtTable(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n                //TODO: a controler\r\n                this._store.dispatch(new UpdatePaginationOtTableFilter(action.payload.pagination));\r\n            \r\n                this.loaded(context,'datas');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadOtTableDatasSuccess)\r\n    // loadSuccess(context: StateContext<OtTableStateModel>, action: LoadOtTableDatasSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload.datas;\r\n\r\n    //     context.patchState(state);\r\n\r\n\r\n    //     this._store.dispatch(new UpdatePaginationOtTableFilter(action.payload.pagination));\r\n    // }\r\n\r\n    @Action(ClearOtTableDatas)\r\n    clear(context: StateContext<OtTableStateModel>) {\r\n        return context.setState(new OtTableStateModel());\r\n    }\r\n\r\n\r\n\r\n}","import { OperationForDetail } from \"app/main/_models/referential/operation.model\";\r\n\r\nexport const OPERATION_FOR_DETAIL_LOAD = 'operation-for-detail-load';\r\n// export const OPERATION_FOR_DETAIL_LOAD_SUCCESS = 'operaion-for-detail-load-success';\r\nexport const OPERATION_FOR_DETAIL_CLEAR = 'operation-for-detail-clear';\r\n\r\nexport class LoadOperationForDetail {\r\n    static readonly type = OPERATION_FOR_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\n// export class LoadOperationForDetailSuccess {\r\n//     static readonly type = OPERATION_FOR_DETAIL_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: OperationForDetail) { }\r\n// }\r\n\r\nexport class ClearOperationForDetail {\r\n    static readonly type = OPERATION_FOR_DETAIL_CLEAR;\r\n}","import { OperationForDetail } from \"app/main/_models/referential/operation.model\";\r\nimport { State, Action, Selector, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { LoadOperationForDetail, ClearOperationForDetail } from \"./operation-detail.action\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class OperationForDetailStateModel extends Datas<OperationForDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet operationForDetailStateModel = new OperationForDetailStateModel();\r\n\r\n@State<OperationForDetailStateModel>({\r\n    name: 'OperationForDetail',\r\n    defaults : operationForDetailStateModel\r\n})\r\n\r\nexport class OperationForDetailState extends LoaderState {\r\n\r\n    constructor(\r\n        private _OperationService: OperationService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationForDetailStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationForDetail)\r\n    loadOperationForDetail(context: StateContext<OperationForDetailStateModel>, action: LoadOperationForDetail) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._OperationService.getDetail(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n\r\n    }\r\n\r\n    @Action(ClearOperationForDetail)\r\n    clear(context: StateContext<OperationForDetailStateModel>) {\r\n        return context.setState(new OperationForDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\nimport { FilterOperationTable, FilterOperationTableSelected } from \"app/main/_models/filters/operation.filter\";\r\n\r\nexport const OPERATION_TABLE_FILTER_LOAD = 'operation-table-filter-load';\r\n// export const OPERATION_TABLE_FILTER_LOAD_SUCCESS = 'operation-table-filter-load-success';\r\nexport const OPERATION_TABLE_FILTER_CHANGE = 'operation-table-filter-change';\r\nexport const OPERATION_TABLE_FILTER_UPDATE_PAGINATION = 'operation-table-filter-update-pagination';\r\n\r\nexport class LoadOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOperationTable) { }\r\n}\r\n\r\n// export class LoadOperationTableFilterSuccess {\r\n//     static readonly type = OPERATION_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: FilterOperationTable) { }\r\n// }\r\n\r\nexport class ChangeOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOperationTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterOperationTable } from \"app/main/_models/filters/operation.filter\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { LoadOperationTableFilter, ChangeOperationTableFilter, UpdatePaginationOperationTableFilter } from \"./operation-list-filter.action\";\r\nimport { LoadOperationTableDatas } from \"../operation-list/operation-list.action\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\n\r\nexport class OperationTableFilterStateModel extends FilterInfo<FilterOperationTable> {\r\n    constructor () {\r\n        super(FilterOperationTable);\r\n    }\r\n}\r\n\r\nlet operationTableFilterStateModel = new OperationTableFilterStateModel();\r\n\r\n@State<OperationTableFilterStateModel>({\r\n    name: 'OperationTableFilter',\r\n    defaults : operationTableFilterStateModel\r\n})\r\n\r\nexport class OperationTableFilterState extends LoaderState {\r\n\r\n    constructor(\r\n        private _operationService: OperationService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationTableFilter)\r\n    loadOperationfTableFilter(context: StateContext<OperationTableFilterStateModel>, action: LoadOperationTableFilter) {\r\n        this.loading(context,'filters');\r\n        \r\n        const state = context.getState();\r\n        state.filters = null;\r\n        context.patchState(state);\r\n\r\n        this._operationService.getTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n                //conserver le payload\r\n                let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n                let state = context.getState();\r\n                state.filters = result;\r\n                context.patchState(state);\r\n                //TODO: a controler\r\n                context.dispatch(new ChangeOperationTableFilter(payload));\r\n\r\n                this.loaded(context,'filters');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadOperationTableFilterSuccess)\r\n    // loadSuccess(context: StateContext<OperationTableFilterStateModel>, action: LoadOperationTableFilterSuccess) {\r\n        \r\n    //     //conserver le payload\r\n    //     let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n    //     let state = context.getState();\r\n    //     state.filters = action.payload;\r\n\r\n    //     context.patchState(state);\r\n        \r\n    //     context.dispatch(new ChangeOperationTableFilter(payload));\r\n        \r\n    // }\r\n\r\n    @Action(ChangeOperationTableFilter)\r\n    changeFilter(context: StateContext<OperationTableFilterStateModel>, action: ChangeOperationTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOperationTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOperationTableFilter)\r\n    UpdatePaginationOperationTableFilter(context: StateContext<OperationTableFilterStateModel>, action: UpdatePaginationOperationTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n\r\n        context.patchState(state);\r\n\r\n    }\r\n}","\r\nexport const OPERATION_TABLE_LOAD = 'operation-table-load';\r\n// export const OPERATION_TABLE_LOAD_SUCCESS = 'operation-table-load-success';\r\nexport const OPERATION_TABLE_FILTER_CHANGE = 'operation-table-filter-change';\r\nexport const OPERATION_TABLE_CLEAR = 'operation-table-clear';\r\n\r\nexport class LoadOperationTableDatas {\r\n    static readonly type = OPERATION_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\n// export class LoadOperationTableDatasSuccess {\r\n//     static readonly type = OPERATION_TABLE_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\nexport class ClearOperationTableDatas {\r\n    static readonly type = OPERATION_TABLE_CLEAR;\r\n}","import { OperationTable } from \"app/main/_models/referential/operation.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { LoadOperationTableDatas, ClearOperationTableDatas } from \"./operation-list.action\";\r\nimport { UpdatePaginationOperationTableFilter } from \"../operation-list-filter/operation-list-filter.action\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class OperationTableStateModel extends Datas<OperationTable[]> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OperationTableStateModel();\r\n@State<OperationTableStateModel>({\r\n    name: 'OperationTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OperationTableState extends LoaderState {\r\n    constructor(\r\n        private _operationService: OperationService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationTableDatas)\r\n    loadGrid(context: StateContext<OperationTableStateModel>, action: LoadOperationTableDatas) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        this._operationService.getTable(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n                //TODO: a controler\r\n                this._store.dispatch(new UpdatePaginationOperationTableFilter(action.payload.pagination));\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadOperationTableDatasSuccess)\r\n    // loadSuccess(context: StateContext<OperationTableStateModel>, action: LoadOperationTableDatasSuccess) {\r\n\r\n    // }\r\n\r\n    @Action(ClearOperationTableDatas)\r\n    clear(context: StateContext<OperationTableStateModel>) {\r\n        return context.setState(new OperationTableStateModel());\r\n    }\r\n}","<div id=\"product\" class=\"page-layout carded fullwidth\" fusePerfectScrollbar>\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <!-- (click)=\"movePrevious()\" -->\n                <button class=\"mr-0 mr-sm-16\" mat-icon-button \n                    [routerLink]=\"['/apps/referential/operations/operation-type-families']\">\n                    <mat-icon>arrow_back</mat-icon>\n                </button>\n\n                <div class=\"product-image mr-8 mr-sm-16\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                    <img *ngIf=\"formLoaded && otfDetail\" [src]=\"'assets/images/Otf/'+otfDetail.logoClassName.selected.label+'_128.png'\">\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                     *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    <div class=\"h2\" *ngIf=\"formLoaded && otfDetail && idOperationTypeFamily!=-1\" >\n                        {{otfDetail.label}}\n                    </div>\n                    <div class=\"h2\" *ngIf=\"formLoaded && otfDetail && idOperationTypeFamily==-1\" >\n                            Nouvelle catégorie d'opération\n                    </div>\n                    <div class=\"subtitle secondary-text\">\n                        <span>Détail de la catégorie d'opérations</span>\n                    </div>\n                </div>\n            </div>\n            <!-- / APP TITLE -->\n            <button mat-raised-button *ngIf=\"formLoaded && otfDetail\"\n                class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                [disabled]= \"otfDetailForm.invalid || otfDetailForm.pristine\"\n                (click)=\"saveOtf()\"\n            >\n                <span>ENREGISTRER</span>\n            </button>\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card white\">\n\n            <form *ngIf=\"formLoaded && otfDetail\" \n                name=\"otfDetailForm\" \n                [formGroup]=\"otfDetailForm\" \n                class=\"product w-100-p\" \n                fxLayout=\"column\" fxFlex\n            >\n                <div class=\"example-container tab-content p-24\" >\n\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                        <mat-label>Libellé catégorie opération</mat-label>\n                        <input matInput\n                            name=\"label\"\n                            formControlName=\"label\"\n                            placeholder=\"Libellé catégorie opération\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                        <mat-label>Mouvement</mat-label>\n                        <mat-select formControlName=\"movement\" placeholder=\"Mouvement\" [compareWith]=\"compareObjects\" >\n                            <mat-option *ngFor=\"let item of otfDetail.movement.list\" [value]=\"item\">\n                                {{ item.label }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                        <mat-label>Icône</mat-label>\n                        <mat-select formControlName=\"logoClassName\" placeholder=\"Icône\" [compareWith]=\"compareObjects\" >\n                            <mat-option *ngFor=\"let item of otfDetail.logoClassName.list\" [value]=\"item\">\n                                <img [src]=\"'assets/images/Otf/'+item.label+'_32.png'\">\n                                {{ item.label }}\n                            </mat-option>\n                        </mat-select>\n                        \n                        \n                        <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                            <input matInput>\n                            <img *ngFor=\"let item of otfDetail.logoClassName.list\" [src]=\"'assets/images/Otf/'+item.label+'_32.png'\">\n                            \n                        </div> -->\n                    </mat-form-field>\n                </div>\n\n                </form> \n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { fuseAnimations } from '@fuse/animations';\nimport { OtfDetailState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state';\nimport { Observable } from 'rxjs';\nimport { OtfDetail } from 'app/main/_models/referential/operation-type-family.model';\nimport { LoadOtfDetail, ClearOtfDetail } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.action';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OtfService } from '../operation-type-family.service';\nimport { LoadOtfTableDatas } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action';\nimport { FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { OtfTableFilterState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'operation-type-family-detail',\n  templateUrl: './operation-type-family-detail.component.html',\n  styleUrls: ['./operation-type-family-detail.component.scss'],\n  animations   : fuseAnimations\n})\nexport class OperationTypeFamilyDetailComponent implements OnInit, OnDestroy {\n@Select(OtfDetailState.get) otfDetail$: Observable<Datas<OtfDetail>>;\n@Select(OtfTableFilterState.get) otfTableFilter$: Observable<FilterInfo<FilterOtfTable>>;\n\nidOperationTypeFamily: number;\nfilterOtf: FilterOtfTable;\notfDetail: OtfDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\notfDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _otfService: OtfService\n  ) { \n\n    this.otfTableFilter$.subscribe(otfTableFilter=>{\n      this.filterOtf = JSON.parse(JSON.stringify(otfTableFilter.filters));\n    });\n\n\n    this.otfDetail$.subscribe(otfDetail=>{\n   \n      if(otfDetail.loader['datas'].loaded) {\n\n        this.otfDetail = JSON.parse(JSON.stringify(otfDetail.datas));\n \n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n\n      this.idOperationTypeFamily = routeParams['idOperationTypeFamily']=='new' ? -1 : routeParams['idOperationTypeFamily'];\n      this._store.dispatch(new LoadOtfDetail(this.idOperationTypeFamily));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOtfDetail());\n  }\n\n  createForms() {\n    \n    this.otfDetailForm = this._formBuilder.group({\n        label: [this.otfDetail.label, [Validators.required]],\n        logoClassName: [this.otfDetail.logoClassName.selected, [Validators.required]],\n        movement: [this.otfDetail.movement.selected, [Validators.required]],\n      });\n     \n    this.otfDetailForm.valueChanges.subscribe(val=>{\n        this.otfDetail.label = val.label;\n        this.otfDetail.logoClassName.selected = val.logoClassName;\n        this.otfDetail.movement.selected = val.movement;\n        //TODO synchronize\n        // this._store.dispatch(new LoadOtfDetailSuccess(this.otfDetail));\n      });\n \n  }  \n\n  \n  saveOtf() {\n    this._otfService.saveOtfDetail(this.otfDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `La catégorie d'opération est enregistrée`);\n          this._store.dispatch(new LoadOtfTableDatas(this.filterOtf.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","<div class=\"example-container\">\n    \n    <mat-table class=\"mat-table\"\n        #table [dataSource]=\"dataSource\"\n        [@animateStagger]=\"{value:'50'}\"\n        matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear \n        (matSortChange)=\"onSortChangeEvent($event)\"\n    >\n\n        <!-- id -->\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell style=\"flex:0 0 70px;\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n            <mat-cell style=\"flex:0 0 70px;\" *matCellDef=\"let data\">\n                <p class=\"text-truncate\">{{data.id}}</p>\n            </mat-cell>\n        </ng-container>\n\n        <!-- logoClassName -->\n        <ng-container cdkColumnDef=\"logoClassName\" >\n            <mat-header-cell *cdkHeaderCellDef mat-sort-header style=\"flex:0 0 70px;\">icône</mat-header-cell>\n            <mat-cell *cdkCellDef=\"let data\" style=\"flex:0 0 70px;\">\n                <img class=\"logo\" *ngIf=\"data.logoClassName\" [src]=\"'assets/images/Otf/'+data.logoClassName+'_32.png'\">\n                <!-- <img class=\"avatar\" *ngIf=\"!user.avatarUrl\" [src]=\"'assets/images/avatars/profile.jpg'\"> -->\n            </mat-cell>\n        </ng-container>\n\n        <!-- Label -->\n        <ng-container matColumnDef=\"label\" >\n            <mat-header-cell style=\"flex: 0 0 40%;\"  *matHeaderCellDef >\n                <div mat-sort-header >Libellé</div>\n                \n                <div (click)=\"templateFor='col2'\" [matMenuTriggerFor]=\"menuLabel\" \n                    style=\"cursor: pointer;\" fxFlex fxLayoutAlign=\"end start\"   >\n                    <mat-icon color=\"warn\" *ngIf=\"hasFilterData('label')\">filter_list</mat-icon>\n                    <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('label')\">filter_list</mat-icon>\n                </div>\n                <mat-menu #menuLabel=\"matMenu\" [overlapTrigger]=\"false\">\n                    <filter-label *ngIf=\"templateFor==='col2' && (otfTableFilter$ | async).loader['filters'].loaded\"\n                        [label]=\"(otfTableFilter$ | async).filters.selected.label\"\n                        (applyLabelFilter)=\"applyFilterLabel($event)\"\n                    ></filter-label>\n                </mat-menu>\n            </mat-header-cell >\n            <mat-cell style=\"flex: 0 0 40%;\" *matCellDef=\"let data\">\n                <p class=\"text-truncate\">{{data.label}}</p>\n            </mat-cell>\n        </ng-container>\n\n        <!-- Movement -->\n        <ng-container matColumnDef=\"movement\" >\n            <mat-header-cell style=\"flex: 0 0 15%;\" *matHeaderCellDef >\n                <div mat-sort-header >Sens</div>\n        \n                <div (click)=\"templateFor='col3'\" [matMenuTriggerFor]=\"menuMovement\"\n                    fxFlex fxLayoutAlign=\"end start\" style=\"cursor: pointer;\">\n                    <mat-icon color=\"warn\" *ngIf=\"hasFilterData('movement')\">filter_list</mat-icon>\n                    <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('movement')\">filter_list</mat-icon>\n                </div>\n        \n                <mat-menu #menuMovement=\"matMenu\" [overlapTrigger]=\"false\">\n                <filter-movement *ngIf=\"templateFor==='col3' && filterMovement\"\n                    [movement]=\"filterMovement\"\n                    (applyFilterMovement)=\"applyFilterMovement($event)\"\n                >\n                </filter-movement>\n                </mat-menu>\n            </mat-header-cell>\n            <mat-cell style=\"flex: 0 0 15%;\" *matCellDef=\"let data\">\n                <p class=\"text-truncate\">{{data.movement.label}}</p>\n            </mat-cell>\n        </ng-container>\n        \n        <!-- Delete -->\n        <!-- style=\"flex:0 0 25%;\" -->\n        <ng-container matColumnDef=\"buttonDelete\" >\n            <mat-header-cell style=\"flex:0 0 30%;\"  *matHeaderCellDef ></mat-header-cell>\n            <mat-cell style=\"flex:0 0 30%;justify-content: flex-end\"  *matCellDef=\"let data\">\n                <button *ngIf=\"!data.isMandatory\" matTooltip=\"Supprimer\" mat-icon-button (click)=\"delete(data)\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <button *ngIf=\"!data.isMandatory\" matTooltip=\"Détail\" mat-icon-button (click)=\"detail(data)\">\n                        <mat-icon>more_horiz</mat-icon>\n                    </button>\n            </mat-cell>\n        </ng-container> \n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n        \n        <mat-row \n            *cdkRowDef=\"let data; columns: displayedColumns;\"\n            matRipple\n            [@animate]=\"{value:'*',params:{y:'100%'}}\"\n            class=\"element-row\" \n        >\n\n        </mat-row>\n\n    </mat-table>\n\n    <div *ngIf=\"(otfTable$ | async).loader['datas'].loading\"\n        class=\"h-96 w-100-p\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"center center\">\n        <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n        <div style=\"color:#4285F3\" fxLayout=\"row\">chargement...</div>\n    </div> \n\n    \n    <p class=\"empty-result\" \n        *ngIf=\"(otfTable$ | async).loader['datas'].loaded \n            && (otfTable$ | async).datas.length==0\"\n    >\n        Aucun résultat\n    </p>\n</div>\n\n<mat-paginator *ngIf=\"(otfTableFilter$ | async).loader['filters'].loaded\"\n    (page)=\"onPageChangeEvent($event)\"\n    [length]=\"(otfTableFilter$ | async).filters.selected.pagination.totalItems\" \n    [pageSize]=\"(otfTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\"\n    [pageSizeOptions]=\"[15, 100, 200]\">\n</mat-paginator>\n","import { Component, OnInit, ViewChild, ViewEncapsulation, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { OtfTable } from 'app/main/_models/referential/operation-type-family.model';\nimport { FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { Router } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { OtfTableFilterState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state';\nimport { OtfTableState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state';\nimport { ChangeOtfTableFilter, LoadOtfTableFilter } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.action';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { OtfService } from '../operation-type-family.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { LoadOtfTableDatas } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action';\nimport { ComboSimple } from 'app/main/_models/generics/combo.model';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'operation-type-family-list',\n  templateUrl: './operation-type-family-list.component.html',\n  styleUrls: ['./operation-type-family-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationTypeFamilyComponent implements OnInit {\n  \n  @Select(OtfTableFilterState.get) otfTableFilter$: Observable<FilterInfo<FilterOtfTable>>;\n  @Select(OtfTableState.get) otfTable$: Observable<Datas<OtfTable[]>>;\n  \n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OtfTable>();\n  filterOtf: FilterOtfTable;\n  idAccountStatement: number;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','logoClassName','label','movement','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  filterMovement: ComboSimple<ISelect>;\n \n  constructor(\n    private _store: Store,\n    private _dialog: MatDialog,\n    private _router: Router,\n    private _otfService: OtfService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOtf = new FilterOtfTable();\n      this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n\n      this.otfTable$.subscribe(asifTable=>{\n        this.dataSource.data = asifTable.datas; \n      });\n\n      \n\n   }\n\n  ngOnInit() {\n    this.otfTableFilter$.subscribe(otfTableFilter=>{\n      if(otfTableFilter.loader['filters'].loaded) {\n        this.filterOtf = otfTableFilter.filters;\n        this.filterMovement= {list : otfTableFilter.filters.movements,selected: otfTableFilter.filters.selected.movement};\n      }\n    });\n  \n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOtf.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOtf.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOtf.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOtf.selected.pagination.sortColumn = this.sort.active;\n    this.filterOtf.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOtfTableFilter(this.filterOtf.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOtf)\n      return false;\n    if(filter=='label')\n      return this.filterOtf.selected!=null && this.filterOtf.selected.label!=null && this.filterOtf.selected.label!='';\n    if(filter=='movement')\n    {\n      return this.filterOtf.selected!=null && this.filterOtf.selected.movement!=null;\n    }\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this._dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer cette catégorie d\\'opération? Tous les types d\\'opérations associés et les opérations seront supprimés';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._otfService.deleteOtfDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOtfTableDatas(this.filterOtf.selected));\n              this._notificationService.success('Suppression réussi', 'La catégorie d\\'opération est supprimé');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operation-type-families/${data.id}`]);\n    // [routerLink]=\"['/apps/referential/operations/operation-type-families', data.id]\"\n  }\n\n  applyFilterLabel(data) {\n  \n    // this.filterOtf.selected.pagination.currentPage=0;\n    this.filterOtf.selected.label = data;\n    // this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n    this.applyFilter();\n  }\n\n  applyFilterMovement(data) {\n\n    \n    this.filterOtf.selected.movement = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOtf.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { OtfTable, OtfDetail } from 'app/main/_models/referential/operation-type-family.model';\nimport { environment } from 'environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { FilterOtfTableSelected, FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { IUserForGroup } from 'app/main/_models/user.model';\n\n@Injectable()\nexport class OtfService {\n\n  baseUrl = environment.apiUrl;\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  userForGroup = this.user!=null ? <IUserForGroup> {id:this.user.id,idUserGroup:this.user.idUserGroup} : null;\n\n      constructor(\n          private http: HttpClient\n      ) { }\n  \n      getOtfTable (filter: FilterOtfTableSelected) {\n        filter.user =  this.userForGroup;\n        console.log('filter.user',filter.user);\n        return this.http\n          .post(`${this.baseUrl}referential/operation-type-families/filter`,filter)\n          .map((response: OtfTable) => {\n              return response;\n          });\n      }\n  \n      getOtfTableFilter(filter: FilterOtfTableSelected) {\n        filter.user =  this.userForGroup;\n        \n        return this.http\n              .post(`${this.baseUrl}referential/operation-type-families/table-filter`,filter)\n              .map((response: FilterOtfTable) => {\n                  return response;\n              });\n      }\n\n      getOtfDetail(idOperationTypeFamily: number) {\n        // console.log('idOperationTypeFamily',idOperationTypeFamily);\n        return this.http\n            .get(`${this.baseUrl}referential/operation-type-families/${idOperationTypeFamily}/detail`)\n            .map(response => <OtfDetail>response)\n      }\n\n      saveOtfDetail(otfDetail: OtfDetail) {\n        otfDetail.user =  this.userForGroup;\n          \n        return this.http\n              .post(`${this.baseUrl}referential/operation-type-families/save`,otfDetail)\n              .map((response: OtfDetail) => {\n                  return response;\n              });\n      }\n\n      deleteOtfDetail(idOtf: number) {\n          \n        return this.http\n              .delete(`${this.baseUrl}referential/operation-type-families/${idOtf}/delete`)\n              .map((response: boolean) => {\n                  return response;\n              });\n      }\n\n}\n","<div id=\"product\" class=\"page-layout carded fullwidth\" fusePerfectScrollbar>\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <!-- (click)=\"movePrevious()\" -->\n                <button class=\"mr-0 mr-sm-16\" mat-icon-button \n                    [routerLink]=\"['/apps/referential/operations/operation-types']\">\n                    <mat-icon>arrow_back</mat-icon>\n                </button>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                     *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    <div class=\"h2\" *ngIf=\"formLoaded && otDetail && idOperationType!=-1\" >\n                        {{otDetail.label}}\n                    </div>\n                    <div class=\"h2\" *ngIf=\"formLoaded && otDetail && idOperationType==-1\" >\n                            Nouveau type d'opération\n                    </div>\n                    <div class=\"subtitle secondary-text\">\n                        <span>Détail du type d'opérations</span>\n                    </div>\n                </div>\n            </div>\n            <!-- / APP TITLE -->\n            <button mat-raised-button *ngIf=\"formLoaded && otDetail\"\n                class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                [disabled]= \"otDetailForm.invalid || otDetailForm.pristine\"\n                (click)=\"saveOt()\"\n            >\n                <span>ENREGISTRER</span>\n            </button>\n        </div>\n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card white\">\n\n            <form *ngIf=\"formLoaded && otDetail\" \n                name=\"otDetailForm\" \n                [formGroup]=\"otDetailForm\" \n                class=\"product w-100-p\" \n                fxLayout=\"column\" fxFlex\n            >\n                <div class=\"example-container tab-content p-24\" >\n\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                        <mat-label>Libellé type opération</mat-label>\n                        <input matInput\n                            name=\"label\"\n                            formControlName=\"label\"\n                            placeholder=\"Libellé type opération\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                        <mat-label>catégorie d'opérations</mat-label>\n                        <mat-select formControlName=\"operationTypeFamily\" placeholder=\"catégorie d'opérations\" [compareWith]=\"compareObjects\" >\n                            <mat-option *ngFor=\"let item of otDetail.operationTypeFamily.list\" [value]=\"item\">\n                                {{ item.label }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n\n                </form> \n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { Select, Store } from '@ngxs/store';\nimport { OtDetailState } from 'app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state';\nimport { Observable } from 'rxjs';\nimport { OtDetail } from 'app/main/_models/referential/operation-type.model';\nimport { OtTableFilterState } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OtService } from '../operation-type.service';\nimport { LoadOtDetail, ClearOtDetail } from 'app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.action';\nimport { LoadOtTableDatas } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'operation-type-detail',\n  templateUrl: './operation-type-detail.component.html',\n  styleUrls: ['./operation-type-detail.component.scss'],\n  animations   : fuseAnimations\n})\nexport class OperationTypeDetailComponent implements OnInit, OnDestroy {\n\n@Select(OtDetailState.get) otDetail$: Observable<Datas<OtDetail>>;\n@Select(OtTableFilterState.get) otTableFilter$: Observable<FilterInfo<FilterOtTable>>;\n\nidOperationType: number;\nfilterOt: FilterOtTable;\notDetail: OtDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\notDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _otService: OtService\n  ) { \n\n    this.otTableFilter$.subscribe(otTableFilter=>{\n      this.filterOt = JSON.parse(JSON.stringify(otTableFilter.filters));\n    });\n\n\n    this.otDetail$.subscribe(otDetail=>{\n\n      if(otDetail.loader['datas'].loaded) {\n\n        this.otDetail = JSON.parse(JSON.stringify(otDetail.datas));\n\n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n\n      this.idOperationType = routeParams['idOperationType']=='new' ? -1 : routeParams['idOperationType'];\n      this._store.dispatch(new LoadOtDetail(this.idOperationType));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOtDetail());\n  }\n\n  createForms() {\n    \n    this.otDetailForm = this._formBuilder.group({\n        label: [this.otDetail.label, [Validators.required]],\n        operationTypeFamily: [this.otDetail.operationTypeFamily.selected, [Validators.required]],\n      });\n     \n    this.otDetailForm.valueChanges.subscribe(val=>{\n        this.otDetail.label = val.label;\n        this.otDetail.operationTypeFamily.selected = val.operationTypeFamily;\n        //TODO synchronize\n        // this._store.dispatch(new LoadOtDetailSuccess(this.otDetail));\n      });\n \n  }  \n\n  \n  saveOt() {\n    this._otService.saveOtDetail(this.otDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `Le type d'opération est enregistré`);\n          this._store.dispatch(new LoadOtTableDatas(this.filterOt.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","<div class=\"example-container\">\n    \n    <mat-table class=\"mat-table\"\n        #table [dataSource]=\"dataSource\"\n        [@animateStagger]=\"{value:'50'}\"\n        matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear \n        (matSortChange)=\"onSortChangeEvent($event)\"\n    >\n\n        <!-- id -->\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell style=\"flex:0 0 70px;\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n            <mat-cell style=\"flex:0 0 70px;\" *matCellDef=\"let data\">\n                <p class=\"text-truncate\">{{data.id}}</p>\n            </mat-cell>\n        </ng-container>\n\n        <!-- OperationTypeFamily -->\n        <ng-container matColumnDef=\"operationTypeFamily\" >\n          <mat-header-cell style=\"flex: 0 0 30%;\" *matHeaderCellDef >\n              <div mat-sort-header >Catégorie opération</div>\n      \n              <div (click)=\"templateFor='col2'\" [matMenuTriggerFor]=\"menuOtf\"\n                  fxFlex fxLayoutAlign=\"end start\" style=\"cursor: pointer;\">\n                  <mat-icon color=\"warn\" *ngIf=\"hasFilterData('operationTypeFamily')\">filter_list</mat-icon>\n                  <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('operationTypeFamily')\">filter_list</mat-icon>\n              </div>\n      \n              <mat-menu #menuOtf=\"matMenu\" [overlapTrigger]=\"false\">\n                <filter-movement *ngIf=\"templateFor==='col2' && filterOtf\"\n                    [movement]=\"filterOtf\"\n                    (applyFilterMovement)=\"applyFilterOtf($event)\"\n                >\n                </filter-movement>\n              </mat-menu>\n          </mat-header-cell>\n          <mat-cell style=\"flex: 0 0 30%;\" *matCellDef=\"let data\">\n              <p class=\"text-truncate\">{{data.operationTypeFamily.label}}</p>\n          </mat-cell>\n      </ng-container>\n\n        <!-- Label -->\n        <ng-container matColumnDef=\"label\" >\n            <mat-header-cell style=\"flex: 0 0 30%;\"  *matHeaderCellDef >\n                <div mat-sort-header >Libellé</div>\n                \n                <div (click)=\"templateFor='col3'\" [matMenuTriggerFor]=\"menuLabel\" \n                    style=\"cursor: pointer;\" fxFlex fxLayoutAlign=\"end start\"   >\n                    <mat-icon color=\"warn\" *ngIf=\"hasFilterData('label')\">filter_list</mat-icon>\n                    <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('label')\">filter_list</mat-icon>\n                </div>\n                <mat-menu #menuLabel=\"matMenu\" [overlapTrigger]=\"false\">\n                  <filter-label *ngIf=\"templateFor==='col3' && filterOt\"\n                      [label]=\"filterOt.selected.label\" \n                      (applyLabelFilter)=\"applyFilterLabel($event)\"\n                    ></filter-label>\n                </mat-menu>\n            </mat-header-cell >\n            <mat-cell style=\"flex: 0 0 30%;\" *matCellDef=\"let data\">\n                <p class=\"text-truncate\">{{data.label}}</p>\n            </mat-cell>\n        </ng-container>\n\n        \n        \n        <!-- Delete--Detail -->\n        <!-- style=\"flex:0 0 25%;\" -->\n        <ng-container matColumnDef=\"buttonDelete\" >\n            <mat-header-cell style=\"flex:0 0 30%;\"  *matHeaderCellDef ></mat-header-cell>\n            <mat-cell style=\"flex:0 0 30%;justify-content: flex-end\"  *matCellDef=\"let data\">\n                <button *ngIf=\"!data.isMandatory\" matTooltip=\"Supprimer\" mat-icon-button (click)=\"delete(data)\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <button *ngIf=\"!data.isMandatory\" matTooltip=\"Détail\" mat-icon-button (click)=\"detail(data)\">\n                        <mat-icon>more_horiz</mat-icon>\n                    </button>\n            </mat-cell>\n        </ng-container> \n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n        \n        <mat-row \n            *cdkRowDef=\"let data; columns: displayedColumns;\"\n            matRipple\n            [@animate]=\"{value:'*',params:{y:'100%'}}\"\n            class=\"element-row\" \n        >\n        </mat-row>\n\n    </mat-table>\n\n    <div *ngIf=\"(otTable$ | async).loader['datas'].loading\"\n        class=\"h-96 w-100-p\"\n        fxLayout=\"column\"\n        fxLayoutAlign=\"center center\">\n        <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n        <div style=\"color:#4285F3\" fxLayout=\"row\">chargement...</div>\n    </div> \n\n    \n    <p class=\"empty-result\" \n        *ngIf=\"(otTable$ | async).loader['datas'].loaded \n            && (otTable$ | async).datas.length==0\"\n    >\n        Aucun résultat\n    </p>\n</div>\n\n<mat-paginator *ngIf=\"(otTableFilter$ | async).loader['filters'].loaded\"\n    (page)=\"onPageChangeEvent($event)\"\n    [length]=\"(otTableFilter$ | async).filters.selected.pagination.totalItems\" \n    [pageSize]=\"(otTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\"\n    [pageSizeOptions]=\"[15, 100, 200]\">\n</mat-paginator>\n","import { Component, OnInit, ViewEncapsulation, ViewChild, SimpleChanges, Input, OnChanges } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { Select, Store } from '@ngxs/store';\nimport { OtTableFilterState } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state';\nimport { OtTableState } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { OtTable } from 'app/main/_models/referential/operation-type.model';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { ComboSimple } from 'app/main/_models/generics/combo.model';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { Router } from '@angular/router';\nimport { OtService } from '../operation-type.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { LoadOtTableFilter, ChangeOtTableFilter } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.action';\nimport { LoadOtTableDatas } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'operation-type-list',\n  templateUrl: './operation-type-list.component.html',\n  styleUrls: ['./operation-type-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationTypeListComponent implements OnInit {\n  \n  @Select(OtTableFilterState.get) otTableFilter$: Observable<FilterInfo<FilterOtTable>>;\n  @Select(OtTableState.get) otTable$: Observable<Datas<OtTable[]>>;\n  \n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OtTable>();\n  filterOt: FilterOtTable;\n  idAccountStatement: number;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','operationTypeFamily','label','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  \n  filterOtf: ComboSimple<ISelect>=null;\n\n  constructor(\n    private _store: Store,\n    private _dialog: MatDialog,\n    private _router: Router,\n    private _otService: OtService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOt = new FilterOtTable();\n      this._store.dispatch(new LoadOtTableFilter(this.filterOt));\n\n      this.otTable$.subscribe(otTable=>{\n        this.dataSource.data = otTable.datas; \n\n      });\n\n   }\n\n  ngOnInit() {\n    this.otTableFilter$.subscribe(otTableFilter=>{\n      if(otTableFilter.loader['filters'].loaded) {\n        this.filterOt = otTableFilter.filters;\n        this.filterOtf= {list : otTableFilter.filters.otfs,selected: otTableFilter.filters.selected.otf};\n\n      }\n    });\n  \n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOt.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOt.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOt.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOt.selected.pagination.sortColumn = this.sort.active;\n    this.filterOt.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOtTableFilter(this.filterOt.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOt)\n      return false;\n    if(filter=='label')\n      return this.filterOt.selected!=null && this.filterOt.selected.label!=null && this.filterOt.selected.label!='';\n    if(filter=='operationTypeFamily')\n      return this.filterOt.selected!=null && this.filterOt.selected.otf!=null;\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this._dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer ce type d\\'opération? \\nToutes les opérations associées seront supprimées';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._otService.deleteOtDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOtTableDatas(this.filterOt.selected));\n              this._notificationService.success('Suppression réussi', 'Le type d\\'opération est supprimé');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operation-types/${data.id}`]);\n  }\n\n  applyFilterLabel(data) {\n    this.filterOt.selected.label = data;\n    this.applyFilter();\n  }\n\n  applyFilterOtf(data) {\n    this.filterOt.selected.otf = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOt.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOtTableFilter(this.filterOt));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { IUserForGroup } from 'app/main/_models/user.model';\nimport { HttpClient } from '@angular/common/http';\nimport { FilterOtTableSelected, FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { OtTable, OtDetail } from 'app/main/_models/referential/operation-type.model';\n\n@Injectable()\nexport class OtService {\n\n  baseUrl = environment.apiUrl;\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  userForGroup = this.user!=null ? <IUserForGroup> {id:this.user.id,idUserGroup:this.user.idUserGroup} : null;\n\n      constructor(\n          private _http: HttpClient\n      ) { }\n  \n      getOtTable (filter: FilterOtTableSelected) {\n        filter.user =  this.userForGroup;\n        \n        return this._http\n          .post(`${this.baseUrl}referential/operation-types/filter`,filter)\n          .map((response: OtTable) => {\n              return response;\n          });\n      }\n  \n      getOtTableFilter(filter: FilterOtTableSelected) {\n        filter.user =  this.userForGroup;\n          \n        return this._http\n              .post(`${this.baseUrl}referential/operation-types/table-filter`,filter)\n              .map((response: FilterOtTable) => {\n                  return response;\n              });\n      }\n\n      getOtDetail(idOperationType: number) {\n        return this._http\n            .get(`${this.baseUrl}referential/operation-types/${idOperationType}/user-groups/${this.userForGroup.idUserGroup}/detail`)\n            .map(response => <OtDetail>response)\n      }\n\n      saveOtDetail(otDetail: OtDetail) {\n        otDetail.user =  this.userForGroup;\n          \n        return this._http\n              .post(`${this.baseUrl}referential/operation-types/save`,otDetail)\n              .map((response: OtDetail) => {\n                  return response;\n              });\n      }\n\n      deleteOtDetail(idOt: number) {\n          \n        return this._http\n              .delete(`${this.baseUrl}referential/operation-types/${idOt}/delete`)\n              .map((response: boolean) => {\n                  return response;\n              });\n      }\n\n}","<div id=\"product\" class=\"page-layout carded fullwidth\" fusePerfectScrollbar>\n\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent\"></div>\n  <!-- / TOP BACKGROUND -->\n\n  <!-- CENTER -->\n  <div class=\"center\">\n\n      <!-- HEADER -->\n      <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n          <!-- APP TITLE -->\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <!-- (click)=\"movePrevious()\" -->\n              <button class=\"mr-0 mr-sm-16\" mat-icon-button \n                  [routerLink]=\"['/apps/referential/operations/operations']\">\n                  <mat-icon>arrow_back</mat-icon>\n              </button>\n\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                   *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                  <div class=\"h2\" *ngIf=\"formLoaded && operationDetail && idOperation!=-1\" >\n                      {{operationDetail.label}}\n                  </div>\n                  <div class=\"h2\" *ngIf=\"formLoaded && operationDetail && idOperation==-1\" >\n                          Nouvelle opération\n                  </div>\n                  <div class=\"subtitle secondary-text\">\n                      <span>Détail de l'opération</span>\n                  </div>\n              </div>\n          </div>\n          <!-- / APP TITLE -->\n          <button mat-raised-button *ngIf=\"formLoaded && operationDetail\"\n              class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n              [disabled]= \"operationDetailForm.invalid || operationDetailForm.pristine\"\n              (click)=\"saveOt()\"\n          >\n              <span>ENREGISTRER</span>\n          </button>\n      </div>\n      <!-- / HEADER -->\n\n      <!-- CONTENT CARD -->\n      <div class=\"content-card white\">\n\n          <form *ngIf=\"formLoaded && operationDetail\" \n              name=\"operationDetailForm\" \n              [formGroup]=\"operationDetailForm\" \n              class=\"product w-100-p\" \n              fxLayout=\"column\" fxFlex\n          >\n              <div class=\"example-container tab-content p-24\" >\n\n                  <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                      <mat-label>Libellé type opération</mat-label>\n                      <input matInput\n                          name=\"label\"\n                          formControlName=\"label\"\n                          placeholder=\"Libellé opération\">\n                  </mat-form-field>\n\n                  <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                      <mat-label>Méthode opérations</mat-label>\n                      <mat-select formControlName=\"operationMethod\" placeholder=\"Méthode opérations\" [compareWith]=\"compareObjects\" >\n                          <mat-option *ngFor=\"let item of operationDetail.operationMethod.list\" [value]=\"item\">\n                              {{ item.label }}\n                          </mat-option>\n                      </mat-select>\n                  </mat-form-field>\n\n                  <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                    <mat-label>Type opérations</mat-label>\n                    <mat-select class=\"mini-select\" \n                      formControlName=\"operationType\" \n                      [compareWith]=\"compareObjects\" \n                      placeholder=\"Type opérations\" >\n                    \n                    <mat-optgroup *ngFor=\"let group of operationDetail.operationType.list\" [label]=\"group.label\">\n                      <mat-option *ngFor=\"let item of group.selects\" [value]=\"item\">\n                        {{ item.label }}\n                      </mat-option>\n                    </mat-optgroup>\n                  </mat-select>\n\n                    <!-- <mat-select formControlName=\"operationType\" placeholder=\"Type opérations\" [compareWith]=\"compareObjects\" >\n                        <mat-option *ngFor=\"let item of operationDetail.operationType.list\" [value]=\"item\">\n                            {{ item.label }}\n                        </mat-option>\n                    </mat-select> -->\n                </mat-form-field>\n\n              </div>\n\n              </form> \n\n      </div>\n      <!-- / CONTENT CARD -->\n\n  </div>\n  <!-- / CENTER -->\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { OperationForDetail } from 'app/main/_models/referential/operation.model';\nimport { OperationForDetailState } from 'app/main/_ngxs/referential/operation/operation-detail/operation-detail.state';\nimport { Observable } from 'rxjs';\nimport { OperationTableFilterState } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOperationTable } from 'app/main/_models/filters/operation.filter';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OperationService } from 'app/main/_services/Referential/operation.service';\nimport { LoadOperationForDetail, ClearOperationForDetail } from 'app/main/_ngxs/referential/operation/operation-detail/operation-detail.action';\nimport { LoadOperationTableDatas } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.action';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'operation-detail',\n  templateUrl: './operation-detail.component.html',\n  styleUrls: ['./operation-detail.component.scss'],\n  animations   : fuseAnimations\n})\n\nexport class OperationDetailComponent implements OnInit, OnDestroy {\n\n@Select(OperationForDetailState.get) operationDetail$: Observable<Datas<OperationForDetail>>;\n@Select(OperationTableFilterState.get) operationTableFilter$: Observable<FilterInfo<FilterOperationTable>>;\n\nidOperation: number;\nfilterOperation: FilterOperationTable;\noperationDetail: OperationForDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\noperationDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _operationService: OperationService\n  ) { \n\n    this.operationTableFilter$.subscribe(operationTableFilter=>{\n      this.filterOperation = JSON.parse(JSON.stringify(operationTableFilter.filters));\n    });\n\n\n    this.operationDetail$.subscribe(operationDetail=>{\n  \n      if(operationDetail.loader['datas'].loaded) {\n\n        this.operationDetail = JSON.parse(JSON.stringify(operationDetail.datas));\n\n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n \n      this.idOperation = routeParams['idOperation']=='new' ? -1 : routeParams['idOperation'];\n      this._store.dispatch(new LoadOperationForDetail(this.idOperation));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOperationForDetail());\n  }\n\n  createForms() {\n    \n    this.operationDetailForm = this._formBuilder.group({\n        label: [this.operationDetail.label, [Validators.required]],\n        operationMethod: [this.operationDetail.operationMethod.selected, [Validators.required]],\n        operationType: [this.operationDetail.operationType.selected, [Validators.required]]\n      });\n     \n    this.operationDetailForm.valueChanges.subscribe(val=>{\n        this.operationDetail.label = val.label;\n        this.operationDetail.operationMethod.selected = val.operationMethod;\n        this.operationDetail.operationType.selected = val.operationType;\n\n        //TODO synchronize\n        // this._store.dispatch(new LoadOperationForDetailSuccess(this.operationDetail));\n      });\n \n  }  \n\n  \n  saveOt() {\n    this._operationService.saveDetail(this.operationDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `L'opération est enregistrée`);\n          this._store.dispatch(new LoadOperationTableDatas(this.filterOperation.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","<div class=\"example-container\">\n    \n  <mat-table class=\"mat-table\"\n      #table [dataSource]=\"dataSource\"\n      [@animateStagger]=\"{value:'50'}\"\n      matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear \n      (matSortChange)=\"onSortChangeEvent($event)\"\n  >\n\n      <!-- id -->\n      <ng-container matColumnDef=\"id\">\n          <mat-header-cell style=\"flex:0 0 70px;\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n          <mat-cell style=\"flex:0 0 70px;\" *matCellDef=\"let data\">\n              <p class=\"text-truncate\">{{data.id}}</p>\n          </mat-cell>\n      </ng-container>\n\n      <!-- OperationMethod -->\n      <ng-container matColumnDef=\"operationMethod\" >\n        <mat-header-cell style=\"flex: 0 0 20%;\" *matHeaderCellDef >\n            <div mat-sort-header >Méthode d'opération</div>\n    \n            <div (click)=\"templateFor='col2'\" [matMenuTriggerFor]=\"menuOperationMethod\"\n                fxFlex fxLayoutAlign=\"end start\" style=\"cursor: pointer;\">\n                <mat-icon color=\"warn\" *ngIf=\"hasFilterData('operationMethod')\">filter_list</mat-icon>\n                <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('operationMethod')\">filter_list</mat-icon>\n            </div>\n    \n            <mat-menu #menuOperationMethod=\"matMenu\" [overlapTrigger]=\"false\">\n              <filter-combo-multiple *ngIf=\"templateFor==='col2' && filterOperationMethod\"\n                  [filterComboMultiple]=\"filterOperationMethod\"\n                  (applyFilterComboMultiple)=\"applyFilterOperationMethod($event)\"\n              >\n              </filter-combo-multiple>\n            </mat-menu>\n        </mat-header-cell>\n        <mat-cell style=\"flex: 0 0 20%;\" *matCellDef=\"let data\">\n            <p class=\"text-truncate\">{{data.operationMethod.label}}</p>\n        </mat-cell>\n    </ng-container>\n\n    <!-- Operation Type -->\n    <ng-container matColumnDef=\"operationType\" >\n        <mat-header-cell style=\"flex: 0 0 20%;\" *matHeaderCellDef >\n            <div mat-sort-header >Type d'opération</div>\n    \n            <div (click)=\"templateFor='col2'\" [matMenuTriggerFor]=\"menuOperationType\"\n                fxFlex fxLayoutAlign=\"end start\" style=\"cursor: pointer;\">\n                <mat-icon color=\"warn\" *ngIf=\"hasFilterData('operationType')\">filter_list</mat-icon>\n                <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('operationType')\">filter_list</mat-icon>\n            </div>\n    \n            <mat-menu #menuOperationType=\"matMenu\" [overlapTrigger]=\"false\">\n              <filter-combo-multiple-group *ngIf=\"templateFor==='col2' && filterOperationMethod\"\n                  [filterComboMultipleGroup]=\"filterOperationType\"\n                  (applyFilterComboMultipleGroup)=\"applyFilterOperationType($event)\"\n              >\n              </filter-combo-multiple-group>\n            </mat-menu>\n        </mat-header-cell>\n        <mat-cell style=\"flex: 0 0 20%;\" *matCellDef=\"let data\">\n            <p class=\"text-truncate\">{{data.operationType.label}}</p>\n        </mat-cell>\n    </ng-container>\n\n\n    <!-- Label -->\n    <ng-container matColumnDef=\"label\" >\n        <mat-header-cell style=\"flex: 0 0 20%;\"  *matHeaderCellDef >\n            <div mat-sort-header >Libellé</div>\n            \n            <div (click)=\"templateFor='col3'\" [matMenuTriggerFor]=\"menuLabel\" \n                style=\"cursor: pointer;\" fxFlex fxLayoutAlign=\"end start\"   >\n                <mat-icon color=\"warn\" *ngIf=\"hasFilterData('label')\">filter_list</mat-icon>\n                <mat-icon color=\"primary\" *ngIf=\"!hasFilterData('label')\">filter_list</mat-icon>\n            </div>\n            <mat-menu #menuLabel=\"matMenu\" [overlapTrigger]=\"false\">\n              <filter-label *ngIf=\"templateFor==='col3' && filterOperation\"\n                  [label]=\"filterOperation.selected.label\" \n                  (applyLabelFilter)=\"applyFilterLabel($event)\"\n                ></filter-label>\n            </mat-menu>\n        </mat-header-cell >\n        <mat-cell style=\"flex: 0 0 20%;\" *matCellDef=\"let data\">\n            <p class=\"text-truncate\">{{data.label}}</p>\n        </mat-cell>\n    </ng-container>\n\n      \n      \n    <!-- Delete--Detail -->\n    <!-- style=\"flex:0 0 25%;\" -->\n    <ng-container matColumnDef=\"buttonDelete\" >\n        <mat-header-cell style=\"flex:0 0 25%;\"  *matHeaderCellDef ></mat-header-cell>\n        <mat-cell style=\"flex:0 0 30%;justify-content: flex-end\"  *matCellDef=\"let data\">\n            <button *ngIf=\"!data.isMandatory\" matTooltip=\"Supprimer\" mat-icon-button (click)=\"delete(data)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n            <button *ngIf=\"!data.isMandatory\" matTooltip=\"Détail\" mat-icon-button (click)=\"detail(data)\">\n                    <mat-icon>more_horiz</mat-icon>\n                </button>\n        </mat-cell>\n    </ng-container> \n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\n    \n    <mat-row \n        *cdkRowDef=\"let data; columns: displayedColumns;\"\n        matRipple\n        [@animate]=\"{value:'*',params:{y:'100%'}}\"\n        class=\"element-row\" \n    >\n    </mat-row>\n\n  </mat-table>\n\n  <div *ngIf=\"(operationTable$ | async).loader['datas'].loading\"\n      class=\"h-96 w-100-p\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\">\n      <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n      <div style=\"color:#4285F3\" fxLayout=\"row\">chargement...</div>\n  </div> \n\n  \n  <p class=\"empty-result\" \n      *ngIf=\"(operationTable$ | async).loader['datas'].loaded \n          && (operationTable$ | async).datas.length==0\"\n  >\n      Aucun résultat\n  </p>\n</div>\n\n<mat-paginator *ngIf=\"(operationTableFilter$ | async).loader['filters'].loaded\"\n  (page)=\"onPageChangeEvent($event)\"\n  [length]=\"(operationTableFilter$ | async).filters.selected.pagination.totalItems\" \n  [pageSize]=\"(operationTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\"\n  [pageSizeOptions]=\"[15, 100, 200]\">\n</mat-paginator>\n","import { Component, OnInit, ViewChild, ViewEncapsulation, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { LoadOperationTableDatas } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.action';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { ChangeOperationTableFilter, LoadOperationTableFilter } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.action';\nimport { Select, Store } from '@ngxs/store';\nimport { OperationTableFilterState } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state';\nimport { OperationTableState } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.state';\nimport { Observable } from 'rxjs';\nimport { OperationTable } from 'app/main/_models/referential/operation.model';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOperationTable } from 'app/main/_models/filters/operation.filter';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { OperationService } from 'app/main/_services/Referential/operation.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { FilterComboMultiple, FilterComboMultipleGroup } from 'app/main/_models/filters/mini-filter/combo-multiple.filters';\nimport { fuseAnimations } from '@fuse/animations';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n\n@Component({\n  selector: 'operation-list',\n  templateUrl: './operation-list.component.html',\n  styleUrls: ['./operation-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationListComponent implements OnInit {\n  \n  @Select(OperationTableFilterState.get) operationTableFilter$: Observable<FilterInfo<FilterOperationTable>>;\n  @Select(OperationTableState.get) operationTable$: Observable<Datas<OperationTable[]>>;\n  \n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OperationTable>();\n  filterOperation: FilterOperationTable;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','operationMethod','operationType','label','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n  filterOperationMethod: FilterComboMultiple ={ placeholder:'Méthode d\\'opérations',combos:null };\n  filterOperationType: FilterComboMultipleGroup ={ placeholder:'Type d\\'opérations',combos:null };\n\n\n\n  constructor(\n    private _store: Store,\n    private _dialog: MatDialog,\n    private _router: Router,\n    private _operationService: OperationService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOperation = new FilterOperationTable();\n      this._store.dispatch(new LoadOperationTableFilter(this.filterOperation));\n\n      this.operationTable$.subscribe(operationTable=>{\n        this.dataSource.data = operationTable.datas; \n\n      });\n\n   }\n\n  ngOnInit() {\n    this.operationTableFilter$.subscribe(operationTableFilter=>{\n      if(operationTableFilter.loader['filters'].loaded) {\n        this.filterOperation = operationTableFilter.filters;\n        \n        this.filterOperationType.combos = {list : operationTableFilter.filters.operationTypes, listSelected: operationTableFilter.filters.selected.operationTypes};\n        this.filterOperationMethod.combos = {list : operationTableFilter.filters.operationMethods,listSelected: operationTableFilter.filters.selected.operationMethods};\n\n      }\n    });\n  \n  }\n  \n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOperation.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOperation.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOperation.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOperation.selected.pagination.sortColumn = this.sort.active;\n    this.filterOperation.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOperationTableFilter(this.filterOperation.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOperation)\n      return false;\n    if(filter=='label')\n      return this.filterOperation.selected!=null && this.filterOperation.selected.label!=null && this.filterOperation.selected.label!='';\n    if(filter=='operationMethod')\n      return this.filterOperationMethod.combos!=null && this.filterOperationMethod.combos.listSelected && this.filterOperationMethod.combos.listSelected.length>0;\n    if(filter=='operationType')\n      return this.filterOperationType.combos!=null && this.filterOperationType.combos.listSelected && this.filterOperationType.combos.listSelected.length>0;\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this._dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer cette opération?';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._operationService.deleteDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOperationTableDatas(this.filterOperation.selected));\n              this._notificationService.success('Suppression réussi', 'L\\'opération est supprimée');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operations/${data.id}`]);\n  }\n\n  applyFilterLabel(data) {\n    this.filterOperation.selected.label = data;\n    this.applyFilter();\n  }\n\n  applyFilterOperationType(data) {\n    this.filterOperation.selected.operationTypes = data;\n    this.applyFilter();\n  }\n\n  applyFilterOperationMethod(data) {\n    this.filterOperation.selected.operationMethods = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOperation.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOperationTableFilter(this.filterOperation));\n  }\n\n}\n","<mat-tab-group \n    \n    [selectedIndex]=\"selectedIndex\"\n    (selectedTabChange)=\"onTabChanged($event)\"\n>\n    <mat-tab *ngFor=\"let operationField of operationFields;index as i\" [label]=\"operationField.label\">\n      <ng-template mat-tab-label>\n          {{operationField.label}}\n      </ng-template>\n\n      <operation-type-family-list *ngIf=\"selectedIndex == 0 && selectedIndex == i\"></operation-type-family-list>\n      <operation-type-list  *ngIf=\"selectedIndex == 1 && selectedIndex == i\"></operation-type-list>\n      <operation-list  *ngIf=\"selectedIndex == 2 && selectedIndex == i\"></operation-list>\n    </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'operations-main-tab',\n  templateUrl: './operations-main-tab.component.html',\n  styleUrls: ['./operations-main-tab.component.scss']\n})\nexport class OperationsMainTabComponent implements OnInit {\n  @Input() subject: string;\n  // @Input() headerPanelIsVisible: boolean;\n\n  operationFields: ISelect[];\n  selectedIndex:number;\n  \n  constructor(\n    private _router: Router\n  ) {\n    \n    this.operationFields = [ {id: 1, label:'Catégorie opération'},{id: 2, label:'Type opération'},{id: 3, label:'Opération'} ];\n    \n    \n    \n  }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes.subject) {\n\n      this.subject = changes.subject.currentValue;\n      switch(this.subject) {\n        case 'operation-type-families':\n          this.selectedIndex = 0;\n          break;\n        case 'operation-types':\n          this.selectedIndex = 1;\n          break;\n        case 'operations':\n          this.selectedIndex = 2;\n          break;\n      }\n    }\n\n    // if(changes.headerPanelIsVisible) {\n    //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;\n    // }\n\n   }\n\n   \n  onTabChanged($event) {\n\n    this.selectedIndex=$event.index;\n\n    switch(this.selectedIndex) {\n      case 0:\n      this.subject = 'operation-type-families';\n        break;\n      case 1:\n        this.subject = 'operation-types';\n        break;\n      case 2:\n        this.subject = 'operations';\n        break;\n    }\n\n    this._router.navigate(\n      [`apps/referential/operations/${this.subject}`]);\n  }\n\n}\n","<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\n\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent header-1-background\"></div>\n  <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n      <div class=\"center\">\n        <!-- <div style=\"height:15px;text-align:center;cursor:pointer;\" class=\"test accent\" (click)=\"onHeaderPanelClick()\">\n            <mat-icon style=\"font-size:20px;margin-top:-2px;\">{{headerPanelIcon}}</mat-icon>\n        </div> -->\n\n        <!-- HEADER -->\n        <div *ngIf=\"!fullscreen\" class=\"header-2-background accent p-12 pb-0 pt-6\"\n            fxLayout=\"column\" fxLayoutAlign=\"center center\"\n            fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n            \n            <div class=\"toolbar w-100-p\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n            \n              <div class=\"left-side\" fxLayout=\"row\">\n                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                      <mat-icon class=\"logo-icon mr-16\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">history</mat-icon>\n                      <span class=\"logo-text h1\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Référentiel opération: {{subjectTitle}}</span>\n                  </div>\n              </div>\n\n              <button mat-raised-button\n                  class=\"save-product-button white mt-16 mt-sm-0\"\n                  (click)=\"Add()\"\n              >\n                  <span>NOUVEAU</span>\n              </button>\n\n            </div>\n\n        </div>\n          \n          <!-- / HEADER -->\n          <div class=\"content-card\">\n            <operations-main-tab style=\"height:100%;\" [subject]=\"subject\" ></operations-main-tab>\n          </div>\n      </div>\n      <!-- / CENTER -->\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FuseConfigService } from '@fuse/services/config.service';\n\n@Component({\n  selector: 'operations-main',\n  templateUrl: './operations-main.component.html',\n  styleUrls: ['./operations-main.component.scss'],\n  animations : fuseAnimations\n})\nexport class OperationsMainComponent implements OnInit {\nsubject: string = 'operation-type-families';\nsubjectTitle: string = 'Catégorie d\\'opérations';\n\nheaderPanelIcon: string;\nheaderPanelIsVisible: boolean = false;\nfullscreen: boolean;\n\nconstructor(\n  private _activatedRoute: ActivatedRoute,\n  private _router: Router,\n  private _fuseConfigService: FuseConfigService\n  ) {\n\n  this._activatedRoute.url.subscribe(url=> {\n    this.subject = url[0].path;\n    switch(this.subject) {\n      case 'operation-type-families':\n        this.subjectTitle = 'Catégorie d\\'opérations';\n        break;\n      case 'operation-types':\n        this.subjectTitle = 'Type d\\'opérations';\n        break;\n      case 'operations':\n        this.subjectTitle = 'Opérations';\n        break;\n    }\n  });\n\n  // Subscribe to the config changes\n  this._fuseConfigService.config\n  // .pipe(takeUntil(this._unsubscribeAll))\n  .subscribe((settings) => {\n      this.fullscreen = settings.layout.toolbar.fullscreen;\n  });\n\n  // //prendre en compte le fuseConfig\n  // this._fuseConfigService.config\n  // .subscribe((config) => {\n  //     // Update the stored config\n  //     this.fuseConfig = config;\n  // });\n}\n\n  ngOnInit() {\n    // this.onHeaderPanelClick();\n  }\n\n  Add() {\n      this._router.navigate(\n        [`apps/referential/operations/${this.subject}/new`]);\n  }\n\n  // onHeaderPanelClick() {\n  //   this.headerPanelIsVisible = this.headerPanelIsVisible ? false : true;\n  //   this.headerPanelIcon = this.headerPanelIsVisible ? 'keyboard_arrow_up' : 'keyboard_arrow_down';\n  //   this.fuseConfig.layout.toolbar.hidden=!this.headerPanelIsVisible;\n  //   this._fuseConfigService.setConfig(this.fuseConfig);\n\n  // }\n\n  }\n  \n\n\n","import { AuthGuard } from \"app/_guards/auth.guard\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { OperationListComponent } from \"./operation/operation-list/operation-list.component\";\r\nimport { OtfService } from \"./operation-type-family/operation-type-family.service\";\r\nimport { NgxsModule } from \"@ngxs/store\";\r\nimport { OtfTableFilterState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state\";\r\nimport { OtfTableState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state\";\r\nimport { OperationTypeFamilyComponent } from \"./operation-type-family/operation-type-family-list/operation-type-family-list.component\";\r\nimport { OperationTypeListComponent } from \"./operation-type/operation-type-list/operation-type-list.component\";\r\nimport { OperationTypeFamilyDetailComponent } from \"./operation-type-family/operation-type-family-detail/operation-type-family-detail.component\";\r\nimport { OtfDetailState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state\";\r\nimport { FuseConfirmDialogModule } from \"@fuse/components\";\r\nimport { FilterLabelComponent } from \"../../web-component/mini-filter/filter-label/filter-label.component\";\r\nimport { FilterMovementComponent } from \"../../web-component/mini-filter/filter-movement/filter-movement.component\";\r\nimport { OtTableFilterState } from \"app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state\";\r\nimport { OtTableState } from \"app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state\";\r\nimport { OtService } from \"./operation-type/operation-type.service\";\r\nimport { OperationTypeDetailComponent } from \"./operation-type/operation-type-detail/operation-type-detail.component\";\r\nimport { OtDetailState } from \"app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state\";\r\nimport { OperationsMainComponent } from \"./operations-main/operations-main.component\";\r\nimport { OperationsMainTabComponent } from \"./operations-main-tab/operations-main-tab.component\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { FilterComboMultiple } from \"app/main/_models/filters/mini-filter/combo-multiple.filters\";\r\nimport { FilterComboMultipleComponent } from \"../../web-component/mini-filter/filter-combo-multiple/filter-combo-multiple.component\";\r\nimport { OperationTableFilterState } from \"app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state\";\r\nimport { OperationTableState } from \"app/main/_ngxs/referential/operation/operation-list/operation-list.state\";\r\nimport { OperationForDetailState } from \"app/main/_ngxs/referential/operation/operation-detail/operation-detail.state\";\r\nimport { FilterComboMultipleGroupComponent } from \"../../web-component/mini-filter/filter-combo-multiple-group/filter-combo-multiple-group.component\";\r\nimport { OperationDetailComponent } from \"./operation/operation-detail/operation-detail.component\";\r\nimport { MiniFilterModule } from \"../../web-component/mini-filter/mini-filter.module\";\r\nimport { AngularMaterialModule } from \"app/angular-material.module\";\r\n\r\nconst routes = [\r\n  // {\r\n  //   path     : '',\r\n  //   redirectTo: 'operation-type-families',\r\n  //   // component: OperationMainComponent,\r\n  //   canActivate: [AuthGuard]\r\n  // },\r\n  {\r\n    path     : 'operation-type-families',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-type-families/:idOperationTypeFamily',\r\n    component: OperationTypeFamilyDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-types',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-types/:idOperationType',\r\n    component: OperationTypeDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n  ,\r\n  {\r\n    path     : 'operations',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n  ,\r\n  {\r\n    path     : 'operations/:idOperation',\r\n    component: OperationDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n\r\n    \r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FuseSharedModule,\r\n      AngularMaterialModule,\r\n      FuseConfirmDialogModule,\r\n      MiniFilterModule,\r\n      RouterModule.forChild(routes),\r\n      NgxsModule.forFeature([\r\n        OtfTableFilterState,\r\n        OtfTableState,\r\n        OtfDetailState,\r\n        OtTableFilterState,\r\n        OtTableState,\r\n        OtDetailState,\r\n        OperationTableFilterState,\r\n        OperationTableState,\r\n        OperationForDetailState\r\n\r\n    ])\r\n    ],\r\n    declarations: [\r\n        OperationsMainComponent,\r\n        OperationsMainTabComponent,\r\n        OperationTypeFamilyComponent,\r\n        OperationTypeFamilyDetailComponent,\r\n        OperationTypeListComponent,\r\n        OperationTypeDetailComponent,\r\n        OperationListComponent,\r\n        OperationDetailComponent\r\n        // FilterLabelComponent,\r\n        // FilterMovementComponent,\r\n        // FilterComboMultipleComponent,\r\n        // FilterComboMultipleGroupComponent\r\n\r\n    ],\r\n    providers : [\r\n      OtfService,\r\n      OtService,\r\n      OperationService\r\n    ],\r\n    entryComponents: [\r\n      // FuseConfirmDialogModule\r\n  ]\r\n  })\r\n  export class OperationsModule { }","<!--  -->\n<div class=\"content-filter\"\n  (click)=\"$event.stopPropagation()\"\n  (keyup)=\"$event.stopPropagation()\" \n  (keydown)=\"$event.stopPropagation()\">\n  <form name=\"labelForm\" [formGroup]=\"labelForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n    <mat-form-field class=\"w-100-p\">\n      <input type=\"string\" formControlName=\"label\" matInput placeholder=\"contient\">\n    </mat-form-field>\n    \n    <button mat-raised-button \n      class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n      [disabled]= \"labelForm.invalid || labelForm.pristine\"\n      (click)=\"applyFilter()\">\n        <span>APPLIQUER</span>\n    </button>\n  </form>\n</div>\n","import { OnInit, Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'filter-label',\n  templateUrl: './filter-label.component.html',\n  styleUrls: ['./filter-label.component.scss']\n})\nexport class FilterLabelComponent implements OnInit {\n \n  @Input() label: string;\n  @Output() applyLabelFilter=new EventEmitter<string>();\n  \n  stopPropagation: boolean=true;\n  labelForm: FormGroup;\n\n\n  constructor(\n    private _formBuilder: FormBuilder\n\n  ) { }\n\n  ngOnInit() {\n\n    this.labelForm = this._formBuilder.group({\n      label: [this.label]\n      });\n\n    this.labelForm.valueChanges.subscribe(val=>{\n        this.label = val.label;\n      });\n\n  }\n\n   applyFilter() {\n    this.applyLabelFilter.emit(this.label);\n\n    //suppression du menu\n    var element=document.getElementsByClassName(\"content-filter\").item(0);\n    element.parentElement.remove();\n   }\n\n\n}\n","<div class=\"content-filter\"\n  (click)=\"$event.stopPropagation()\" \n  (keyup)=\"$event.stopPropagation()\" \n  (keydown)=\"$event.stopPropagation()\">\n    <form \n      name=\"movementForm\" \n      [formGroup]=\"movementForm\" \n      class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n        <mat-form-field class=\"w-100-p\">\n            <mat-select class=\"mini-select\" formControlName=\"movement\" [compareWith]=\"compareObjects\"\n              placeholder=\"mouvement\" >\n              <mat-option *ngFor=\"let item of movement.list\" [value]=\"item\">\n                {{ item.label }}\n              </mat-option>\n            </mat-select>\n        </mat-form-field>\n  \n        <button mat-raised-button \n          class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n          [disabled]= \"movementForm.invalid || movementForm.pristine\"\n          (click)=\"applyFilter()\"\n        >\n          <span>APPLIQUER</span>\n        </button>\n    </form>\n  </div>\n","import { Component, OnInit, EventEmitter, Input, Output} from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ISelect, EnumSelectType } from 'app/main/_models/generics/select.model';\nimport { Store, Select } from '@ngxs/store';\nimport { FilterAsTable } from 'app/main/_models/filters/account-statement.filter';\nimport { AsTableFilterState } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.state';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { LoadAsTableFilter } from 'app/main/_ngxs/account-statement/account-statement-list-filter/account-statement-filter.action';\nimport { ComboSimple } from 'app/main/_models/generics/combo.model';\n\n\n@Component({\n  selector: 'filter-movement',\n  templateUrl: './filter-movement.component.html',\n  styleUrls: ['./filter-movement.component.scss']\n})\nexport class FilterMovementComponent implements OnInit {\n  @Input() movement: ComboSimple<ISelect>;\n  @Output() applyFilterMovement=new EventEmitter<ISelect>();\n\n  movementForm: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder\n  ) { \n\n  }\n\n  ngOnInit() {\n\n    this.movementForm = this._formBuilder.group({\n      movement: [this.movement.selected]\n    });\n\n    this.movementForm.valueChanges.subscribe(val=>{\n      this.movement.selected = val.movement;\n    });\n\n  }\n  \n\n  applyFilter(){\n    this.applyFilterMovement.emit(this.movement.selected);\n\n    //suppression du menu\n    var element=document.getElementsByClassName(\"content-filter\").item(0);\n    element.parentElement.remove();\n  }\n\n   compareObjects(o1: ISelect, o2: ISelect) {\n     return o1 && o2 ? o1.id === o2.id : o1 === o2;\n\n  }\n\n  getFontSize() {\n    return Math.max(10, 10);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}