{"version":3,"sources":["./src/app/main/_models/filters/user.filter.ts","./src/app/main/_ngxs/user/user-list-filter/user-list-filter.action.ts","./src/app/main/_ngxs/user/user-list-filter/user-list-filter.state.ts","./src/app/main/_ngxs/user/user-list/user-list.action.ts","./src/app/main/_ngxs/user/user-list/user-list.state.ts","./src/app/main/apps/referential/user/avatar-editor/avatar-editor.component.html","./src/app/main/apps/referential/user/avatar-editor/avatar-editor.component.ts","./src/app/main/apps/referential/user/user-detail/user-detail.component.html","./src/app/main/apps/referential/user/user-detail/user-detail.component.ts","./src/app/main/apps/referential/user/user-list/user-list.component.html","./src/app/main/apps/referential/user/user-list/user-list.component.ts","./src/app/main/apps/referential/user/user-list/user-list.resolver.ts","./src/app/main/apps/referential/user/user.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAiD;AAEjD;IAQI;QACI,wBAAwB;QACxB,wBAAwB;QACxB,wBAAwB;QACxB,8BAA8B;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,4DAAU,EAAE,CAAC;IACvC,CAAC;IACL,8BAAC;AAAD,CAAC;;AAED;IAOI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,uBAAuB,EAAE,CAAC;IAClD,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,sBAAsB,GAAG,wBAAwB,CAAC;AAC/D,kFAAkF;AAC3E,IAAM,wBAAwB,GAAG,0BAA0B,CAAC;AAC5D,IAAM,mCAAmC,GAAG,qCAAqC,CAAC;AAEzF;IAGI,6BAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAFhC,wBAAI,GAAG,sBAAsB,CAAC;IAGlD,0BAAC;CAAA;AAJ+B;AAMhC,4CAA4C;AAC5C,6DAA6D;AAE7D,2CAA2C;AAC3C,IAAI;AAEJ;IAGI,+BAAmB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAFhC,0BAAI,GAAG,wBAAwB,CAAC;IAGpD,4BAAC;CAAA;AAJiC;AAMlC;IAGI,yCAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;IAAI,CAAC;IAF3B,oCAAI,GAAG,mCAAmC,CAAC;IAG/D,sCAAC;CAAA;AAJ2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1B6B;AACuB;AACtB;AAC8C;AACrD;AACQ;AACpB;AAGvD;IAA+C,6CAA2B;IACtE;eACI,kBAAM,mFAAe,CAAC;IAC1B,CAAC;IACL,gCAAC;AAAD,CAAC,CAJ8C,qFAAU,GAIxD;;AAED,IAAI,yBAAyB,GAAG,IAAI,yBAAyB,EAAE,CAAC;AAOhE;IAA0C,wCAAW;IAIjD,8BACY,YAAyB,EACzB,MAAa;QAFzB,YAIQ,iBAAO,SACd;QAJW,kBAAY,GAAZ,YAAY,CAAa;QACzB,YAAM,GAAN,MAAM,CAAO;QALzB,mBAAa,GAAY,IAAI,CAAC;QAC9B,qBAAe,GAAY,IAAI,CAAC;;IAOhC,CAAC;IAGM,wBAAG,GAAV,UAAW,KAAgC;QAEvC,OAAO,KAAK,CAAC;IACjB,CAAC;IAGD,kDAAmB,GAAnB,UAAoB,OAAgD,EAAE,MAA2B;QADjG,iBAkBC;QAhBG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAEhC,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACjC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;aACxD,SAAS,CAAC,gBAAM;YACb,IAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC/B,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,yBAAyB;YACjD,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC1B,mBAAmB;YACnB,OAAO,CAAC,QAAQ,CAAC,IAAI,8EAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAE5D,KAAI,CAAC,MAAM,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sCAAsC;IACtC,sGAAsG;IACtG,sCAAsC;IACtC,6CAA6C;IAC7C,6EAA6E;IAE7E,iCAAiC;IAEjC,mEAAmE;IAEnE,IAAI;IAGJ,2CAAY,GAAZ,UAAa,OAAgD,EAAE,MAA6B;QACxF,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAGjC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACjD,OAAO,CAAC,QAAQ,CAAC,IAAI,4EAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC7D;aACI;YACD,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACrE,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC/B,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAE1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,8EAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;aACxE;SACJ;IACJ,CAAC;IAGF,8DAA+B,GAA/B,UAAgC,OAAgD,EAAE,MAAuC;QACrH,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEjC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;QACnD,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,8CAAe,GAAf,UAAiB,KAA8B,EAAE,OAAiC;QAC9E,IAAI,IAAI,CAAC,eAAe,EACxB;YACI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;QACD,IAAG,OAAO,CAAC,OAAO,IAAI,IAAI,EAAG;YACzB,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,KAAK,CAAC,OAAO,IAAE,IAAI,IAAI,OAAO,CAAC,OAAO,IAAE,IAAI,EAAG;YAC/C,OAAO,IAAI,CAAC;SACf;QAAA,CAAC;QACF,IAAG,KAAK,CAAC,OAAO,IAAE,OAAO,CAAC,OAAO,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;IAEL,CAAC;IAED,4CAAa,GAAb,UAAc,KAAsB,EAAE,OAAuB;QACzD,IAAG,IAAI,CAAC,aAAa,EACrB;YACI,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;YACzB,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAnFD;QADC,0DAAM,CAAC,4EAAmB,CAAC;;iDACkD,4EAAmB;;mEAiBhG;IAeD;QADC,0DAAM,CAAC,8EAAqB,CAAC;;iDACyC,8EAAqB;;4DAe1F;IAGF;QADC,0DAAM,CAAC,wFAA+B,CAAC;;iDACkD,wFAA+B;;+EAKxH;IA7DD;QADC,4DAAQ,EAAE;;yCACO,yBAAyB;;yCAG1C;IAfQ,oBAAoB;QALhC,yDAAK,CAA4B;YAC9B,IAAI,EAAE,iBAAiB;YACvB,QAAQ,EAAG,yBAAyB;SACvC,CAAC;yCAO4B,uFAAW;YACjB,iDAAK;OANhB,oBAAoB,CAsGhC;IAAD,2BAAC;CAAA,CAtGyC,8DAAW,GAsGpD;AAtGgC;;;;;;;;;;;;;ACtBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,eAAe,GAAG,iBAAiB,CAAC;AACjD,oEAAoE;AAC7D,IAAM,wBAAwB,GAAG,0BAA0B,CAAC;AAC5D,IAAM,gBAAgB,GAAG,kBAAkB,CAAC;AAEnD;IAGI,4BAAmB,OAAY;QAAZ,YAAO,GAAP,OAAO,CAAK;IAAI,CAAC;IAFpB,uBAAI,GAAG,eAAe,CAAC;IAG3C,yBAAC;CAAA;AAJ8B;AAM/B,2CAA2C;AAC3C,sDAAsD;AAEtD,2CAA2C;AAC3C,IAAI;AAEJ;IAAA;IAEA,CAAC;IADmB,wBAAI,GAAG,gBAAgB,CAAC;IAC5C,0BAAC;CAAA;AAF+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB0C;AACG;AACiB;AACnB;AACpB;AACa;AAEpE;IAAyC,uCAAkB;IACvD;eACI,iBAAO;IACX,CAAC;IACL,0BAAC;AAAD,CAAC,CAJwC,gFAAK,GAI7C;;AAED,IAAI,SAAS,GAAG,IAAI,mBAAmB,EAAE,CAAC;AAM1C;IAAoC,kCAAW;IAC3C,wBACY,YAAyB,EACzB,MAAa;QAFzB,YAGQ,iBAAO,SACd;QAHW,kBAAY,GAAZ,YAAY,CAAa;QACzB,YAAM,GAAN,MAAM,CAAO;;IAEzB,CAAC;IAGM,kBAAG,GAAV,UAAW,KAA0B;QACjC,OAAO,KAAK,CAAC;IACjB,CAAC;IAGD,iCAAQ,GAAR,UAAS,OAA0C,EAAE,MAA0B;QAD/E,iBAkBC;QAhBG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;QAE9B,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACjC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC;aACzC,SAAS,CAAC,gBAAM;YACb,IAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC/B,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;YACnC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC1B,kBAAkB;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,yGAA+B,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAErF,KAAI,CAAC,MAAM,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,qCAAqC;IACrC,+FAA+F;IAC/F,sCAAsC;IACtC,0CAA0C;IAE1C,iCAAiC;IACjC,4FAA4F;IAC5F,IAAI;IAGJ,8BAAK,GAAL,UAAM,OAA0C;QAC5C,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;IACvD,CAAC;IA/BD;QADC,0DAAM,CAAC,oEAAkB,CAAC;;iDACkC,oEAAkB;;kDAiB9E;IAYD;QADC,0DAAM,CAAC,qEAAmB,CAAC;;;;+CAG3B;IApCD;QADC,4DAAQ,EAAE;;yCACO,mBAAmB;;mCAEpC;IAVQ,cAAc;QAL1B,yDAAK,CAAsB;YACxB,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAG,SAAS;SACvB,CAAC;yCAI4B,uFAAW;YACjB,iDAAK;OAHhB,cAAc,CA6C1B;IAAD,qBAAC;CAAA,CA7CmC,8DAAW,GA6C9C;AA7C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GC0Df,6TAK8E,EAF1E;;wBAA2B;MAH/B,smBAK8E,GAA7D,0JAA4D,MACzE,q4BAAgC,4EAAG,2BAAnC,YAAgC,2BADnB,+DAA4D,IAL7E,2NAK8E,EAA7D,SAA4D,EAL7E,oBAK8E,GAC1E,2XAAgC;2GAZxC,iJAA4D,KACxD;;;4QAGgB,IAEhB,kfAK8E,iDAR1E,mBAAqB,WAFzB,YAGgB,EADZ,SAAqB;2GAc7B,wHAAsC,KAClC;;;;;;;;wBAM+D;MAH3D;;wBAAiC;MAHrC,85BAM+D,GAJ3D,yEAAiD,KAFrD,giBAM+D,GAJ3D,yEAAiD,KAFrD,+mBAM+D,KAA3D,2JAA0D,MAC1D,+KAAqD,wGAAsB,mDAF3E,gCAAsB,EAHtB,iCAAiD,uBAFrD,YAM+D,EAD3D,SAAsB,EAHtB,6CAAiD,uBAGjD,gCAAsB,EAL1B,YAM+D,EAJ3D,SAAiD,EAGjD,SAAsB,GADtB,mBAAqB,WAJzB,YAM+D,EAF3D,SAAqB,2BAErB,+DAA0D,IAN9D,2NAM+D,EAA3D,SAA0D,EAN9D,oBAM+D;2GAS/D,sHAAwC,KACpC,qJAA+B,6FAAmC,MAClE,qKAAsC,wJAA0D,+BADjE,gKAAmC,GAC5B,8UAA0D;2GAI5F,uHAAiC,KAC7B,+jCAAiE,iDAA5B,mBAA2B,oBAA9C,6BAAkB,EAApC,YAAiE,EAA5B,SAA2B,EAA9C,SAAkB,2BAApC,4dAAiE;2GAErE,qJAA4D,KACxD,gRACwE,YAApE;;wBAA+B;MADnC,opBACwE,IACxE,2JAAwC,KAAO,6EAC/C,MACA,mRAC2F,YAAnF;;wBAA8B;MADtC,opBAC2F,IACvF,4JAAyC,KAAO,6EACpD,mDANoC,oBAAmC,wBAD7C,sBAAY,EAAtC,YACwE,EAApC,SAAmC,EAD7C,SAAY,GAKC,oBAAmD,wCADhE,yBAAe,EAAzC,YAC2F,EAApD,SAAmD,EADhE,SAAe,2BAJzC,iPACwE,GAGxE,iPAC2F;2GAjB3G,sJAAgE,KAC5D,yHAAO,KACP,wdAAwC,IAIxC,sHAAI,KACA,sIAAgB,KACZ,+YAAiC,IAGjC,+YAA4D,iDAThE,mBAAmC,iBAAvC,YAAwC,EAApC,SAAmC,GAM1B,0CAA2B,GAAhC,YAAiC,EAA5B,SAA2B,GAGD,2CAA4B,GAA3D,YAA4D,EAA7B,SAA4B;2RA5C/E,iJAA2B,KAEnB,+YAA4D,IAiB5D,+YAAsC,IActC,+YAAgE,iDA/BrC,+CAAgC,GAA3D,YAA4D,EAAjC,SAAgC,GAiBtD,+CAAgC,GAArC,YAAsC,EAAjC,SAAgC,GAc9B,8CAA+B,GAAtC,YAAgE,EAAzD,SAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGiC;AAChC;AACe;AAGP;AACO;AAClB;AACwC;AAClD;AACkD;AAEpF;IAiBE,+BACU,WAAwB,EACxB,mBAAyC,EACzC,MAAa;QAFb,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAsB;QACzC,WAAM,GAAN,MAAM,CAAO;QAVb,wBAAmB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAE3D,aAAQ,GAAiB,IAAI,4DAAY,CAAC,EAAE,CAAC,CAAC;QAC9C,wBAAmB,GAAY,KAAK,CAAC;QACrC,YAAO,GAAG,oEAAW,CAAC,MAAM,CAAC;IAOzB,CAAC;IAEL,wCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,IAAU;YAC9B,IAAG,IAAI,EAAE;gBACL,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,4CAAY,GAAnB,UAAoB,CAAM;QACxB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,kDAAkB,GAAlB;QAAA,iBAsCC;QApCC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAY,CAAC;YAC/B,GAAG,EAAK,IAAI,CAAC,OAAO,cAAS,IAAI,CAAC,IAAI,CAAC,EAAE,YAAS;YAClD,SAAS,EAAE,YAAU,WAAW,CAAC,KAAO;YACxC,OAAO,EAAE,IAAI;YACb,eAAe,EAAE,CAAC,OAAO,CAAC;YAC1B,iBAAiB,EAAE,IAAI;YACvB,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,EAAE,GAAC,IAAI,GAAC,IAAI;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,UAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO;YAC5D,IAAI,QAAQ,EAAE;gBACZ,IAAM,GAAG,GAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACxC,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;gBAGpC,gDAAgD;gBAEhD,uDAAuD;gBACvD,0DAA0D;gBAC1D,6EAA6E;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,gGAAc,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACnD,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,CAAC;aAEvF;QAEH,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,UAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO;YAE3D,0CAA0C;YAC1C,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IAGP,CAAC;IAnEgC;QAAhC,0DAAM,CAAC,gGAAe,CAAC,OAAO,CAAC;kCAAQ,+CAAU;wDAAQ;IAqF5D,4BAAC;CAAA;AAtFiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCGd,kIAAmD,wDAAvB,mBAAsB,iBAAlD,YAAmD,EAAvB,SAAsB;yGAClD,kIAAyE,gCAA5C,mDAA2C,EAAxE,YAAyE,EAA5C,SAA2C;yGAKxE,sIAA2C,qMAE3C;yGACA,sIAA0C,kGAE1C;yGAgBR,mTAGkE,YAA/B;;wBAA8B;MAHjE,+nBAGkE,IAC9D,qHAAM,iFAAI,mDAFN,4CAAkD,qBAF1D,YAGkE,EAD1D,SAAkD,2BAF1D,iPAGkE;yGAsGhD,gMAAyH,YAAlD;;wBAAiD;MAAxH,8rBAAyH,mDAApF,mBAAiC,iBAAtE,YAAyH,EAApF,SAAiC;yGA8ChE;;;;;;;;;umDAA0G,IACtG,04BAA+B,+EAAM,2GADjB,oEAAqD,EAA7E,YAA0G,EAAlF,SAAqD,GACzE,YAA+B,2BADnC,iPAA0G,GACtG,2XAA+B;yGA+BjC,iqCAA4E,IAIxE,qeAEuC,YADnC;;wBAA8C;MAC9C;;wBAAkC;MAFtC,mlCAEuC,MAEvC,6KAAyD,gFAAc,MACvE,+JAAyC,gFAAkB,MAC3D,gKAAyC,iFAAiB,2BAV7C,qBAAc,EAA/B,YAA4E,EAA3D,SAAc,GAA1B,oBAAW,EAAhB,YAA4E,EAAvE,SAAW,2BAIZ,qpBAEuC,GAElC,oBAAe,EAApB,YAAyD,EAApD,SAAe,GAAqC,kEAAc,GAC9B,sEAAkB,GAClB,sEAAiB;yGA7BtE,osBAAmF,IACnF,2oBAA+B,IAC/B,yhBAAiB,IAGf,gXAAiF,IAEjF,wTAAgB,gFAAwB,MACxC,mUAAmB,gFAAyB,MAG9C,iUAAkB,IACd,8pBAAkD,IAC9C,uuCAA8F,IAC1F,+IAAwB,KACxB,6JAAwC,KACxC,8JAAuC,kGAAgB,MACvD,8JAAuC,0FAAa,MAExD,udAA4E,yBAnB/E,oBAAW,EAAhB,YAAmF,EAA9E,SAAW,GAYP,wBAAiB,EAAtB,aAAkD,EAA7C,SAAiB,GAC6D,qBAAc,EAA7F,aAA8F,EAAf,SAAc,GAA1B,oBAAW,EAA9E,aAA8F,EAA3B,SAAW,GAM9C,kBAA2C,6BAA3E,aAA4E,EAA5C,SAA2C,2BAlBnF,wIAA+B,GAIR,8HAAkC,GAAvD,YAAiF,EAA5D,SAAkC,GAEvC,wEAAwB,GACrB,yEAAyB,GAO7B,oBAAe,EAApB,aAAwC,EAAnC,SAAe;yGApO9D,8lBAAkE,IAG9D,iJAA2B,KAI3B,4IAAoB,KAGhB,6qCAA+E,IAG3E,yoCAAiD,IAE7C;;;qhCAEI,IACA,i3BAAU,mFAAU,MAGxB,iLAAqG,IAA3D,4JAA0D,MAChG,8YAAmD,IACnD,8YAAyE,IAG7E,+pCACgE,GAA1D,wJAAyD,MAC3D,8YAA2C,IAG3C,8YAA0C,IAG1C,4JAAqC,KACjC,yHAAM,gGAAmB,MAcrC,8YAGkE,IAOtE,mJAA0B,KAGtB,8IAAqB,KACjB;;;;;;0zDAA8F,IAGxF,i+BAAe,MAEb,myBAA4B,MACxB;;;;;;6hBAAmD,IAEjD,+pCAA8D,IAC1D,g4BAA8B,uFAAc,MAC5C,2qFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;g0FAIiB,KAIzB,+pCAA8D,IAC1D,g4BAA8B,uFAAc,MAC5C,irFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;u0FAIiB,KAIzB,kqCAA8D,IAC1D,k4BAA8B,uFAAc,MAC5C,mrFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;u0FAIiB,KAIzB,kqCAA8D,IAC1D,k4BAA8B,6EAAI,MAClC,mrFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ihHAA+H,KAC/H;;;u3BAAqD,MACrD,klCAA6B,IAGjC,+IAAuB,KAEvB,k4BAA8B,6EAAI,MAClC,mrFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;01EAG0B,KAIlC,kqCAA8D,IAC1D,k4BAA8B,uFAAc,MAC5C,mrFAAgC,MAC5B;;;;;;;;;;;;;;;;;;;;;u0FAIiB,KAGrB,+IAAuB,KAEvB,k4BAA+B,uFAAc,MAC7C,mrFAAiC,MAC7B;;;;;;;;;;;;;;;;;;;;;u0FAIiB,KAIzB,iqCAA8D,IAOpE,oxBAAyB,MACvB;;;;;;8hBAAmD,IAC/C,+YAAyH,IAEzH,msFAA4C,MACxC;;;;;;;;;;;;;;;;;;;;;01EAKS,KAKnB,mxBAAwB,MAEtB,2oBAA+B,IACnB,6hBAAiB,IACb,kMAAgE,YAAjD;;wBAAgD;MAA/D,upBAAgE,MAIpE,kUAAkB,IACd,sKAAmE,KAkBrF,kyBAAkC,MAC9B,uLAA4D,KACxD,uuCAAsE,IAClE;;;;;;;;;2mDAAwD,IACpD,84BAA+B,4EAAG,MAEtC,+YAA0G,IAYpH,4pBAAkD,IAC9C,wdAAmF,iDArNjH,YAAkE,GAU/B,qBAAc,EAAzC,YAA+E,EAApD,SAAc,GAAC,sCAAoC,EAA9E,YAA+E,EAArC,SAAoC,GAGrE,qBAAc,EAAnB,YAAiD,EAA5C,SAAc,GAAC,8BAA4B,EAAhD,YAAiD,EAA7B,SAA4B,GAG1C,yCAAwC,EAD1C,aAEI,EADF,SAAwC,GAEtC,aAAU,GAIL,oBAAsB,iBAA3B,aAAmD,EAA9C,UAAsB,GACtB,qBAAuB,iBAA5B,aAAyE,EAApE,UAAuB,GAG3B,yBAAiB,EAAtB,aACgE,EAD3D,UAAiB,GAAC,8BAA2B,EAAlD,aACgE,EADzC,UAA2B,GAE9B,yCAA0B,GAA1C,aAA2C,EAA3B,UAA0B,GAG1B,wCAAyB,GAAzC,aAA0C,EAA1B,UAAyB,GAqBzC,yCAA0B,GAHlC,aAGkE,EAA1D,UAA0B,GAWR,oBAAsB,WAA5C,aAA8F,EAAxE,UAAsB,GAAyB,yBAAiB,EAAtF,aAA8F,EAAzB,UAAiB,GAAC,mBAAM,EAA7F,aAA8F,EAAP,UAAM,GAK5E,4CAAkB,EAA3B,aAA4B,EAAnB,UAAkB,GACO,mBAAoB,EAAlD,aAAmD,EAArB,UAAoB,GAE7B,sBAAc,EAAjC,aAA8D,EAA3C,UAAc,GAAC,8BAA2B,EAA7D,aAA8D,EAA5B,UAA2B,GACzD,aAA8B,GAMlB,mBAAQ,EAJhB,aAIiB,EAAT,UAAQ,GAFR,2BAA0B,EAFlC,aAIiB,EAFT,UAA0B,GAC1B,6BAAwB,EACxB,mBAAQ,EAJhB,aAIiB,EADT,UAAwB,EACxB,UAAQ,GAIL,sBAAc,EAAjC,aAA8D,EAA3C,UAAc,GAAC,8BAA2B,EAA7D,aAA8D,EAA5B,UAA2B,GACzD,aAA8B,GAMlB,oBAAQ,EAJhB,cAIiB,EAAT,WAAQ,GAFR,6BAA2B,EAFnC,cAIiB,EAFT,WAA2B,GAC3B,uBAAiB,EACjB,oBAAQ,EAJhB,cAIiB,EADT,WAAiB,EACjB,WAAQ,GAIL,uBAAc,EAAjC,cAA8D,EAA3C,WAAc,GAAC,+BAA2B,EAA7D,cAA8D,EAA5B,WAA2B,GACzD,cAA8B,GAMlB,oBAAQ,EAJhB,cAIiB,EAAT,WAAQ,GAFR,4BAA0B,EAFlC,cAIiB,EAFT,WAA0B,GAC1B,+BAAoB,EACpB,oBAAQ,EAJhB,cAIiB,EADT,WAAoB,EACpB,WAAQ,GAIL,uBAAc,EAAjC,cAA8D,EAA3C,WAAc,GAAC,+BAA2B,EAA7D,cAA8D,EAA5B,WAA2B,GACzD,cAA8B,GAES,4EAA6B,GAAhE,cAA+H,EAA5F,WAA6B,GAAC,+BAA6B,EAA9F,cAA+H,EAA9D,WAA6B,GAAC,qCAA+B,EAA9H,cAA+H,EAAhC,WAA+B,GAC7F,4EAAmB,GAApD,cAAqD,EAApB,WAAmB,GAMxD,cAA8B,GAIlB,uBAAqB,EAF7B,cAG0B,EADlB,WAAqB,GACrB,uBAAiB,EAHzB,cAG0B,EAAlB,WAAiB,GAId,uBAAc,EAAjC,cAA8D,EAA3C,WAAc,GAAC,+BAA2B,EAA7D,cAA8D,EAA5B,WAA2B,GACzD,cAA8B,GAMlB,oBAAQ,EAJhB,cAIiB,EAAT,WAAQ,GAFR,+BAA6B,EAFrC,cAIiB,EAFT,WAA6B,GAC7B,yCAA8B,EAC9B,oBAAQ,EAJhB,cAIiB,EADT,WAA8B,EAC9B,WAAQ,GAKpB,cAA+B,GAMnB,oBAAQ,EAJhB,cAIiB,EAAT,WAAQ,GAFR,kCAAgC,EAFxC,cAIiB,EAFT,WAAgC,GAChC,uDAAuC,EACvC,oBAAQ,EAJhB,cAIiB,EADT,WAAuC,EACvC,WAAQ,GAIL,uBAAc,EAAjC,cAA8D,EAA3C,WAAc,GAAC,+BAA2B,EAA7D,cAA8D,EAA5B,WAA2B,GAO1D,2BAAe,EAAxB,cAAyB,EAAhB,WAAe,GACQ,oBAAoB,EAAlD,cAAmD,EAArB,WAAoB,GAChC,qBAAsB,iBAApC,cAAyH,EAA3G,WAAsB,GAKxB,iCAA+B,EAFvC,cAKS,EAHD,WAA+B,GAC/B,iCAA2B,EAHnC,cAKS,EAFD,WAA2B,GAOpC,0BAAc,EAAvB,cAAwB,EAAf,WAAc,GAIL,cAAgE,GAuBzE,yCAAwB,EAAjC,cAAkC,EAAzB,WAAwB,GAEgB,gCAA4B,EAArE,cAAsE,EAA7B,WAA4B,GAAzC,uBAAY,EAAxC,cAAsE,EAA1C,WAAY,GACZ,qCAA8B,EAAtD,cAAwD,EAAhC,WAA8B,GAClD,cAA+B,GAE2C,qBAA2B,sBAAzG,cAA0G,EAA5B,WAA2B,GAY9G,0BAAiB,EAAtB,cAAkD,EAA7C,WAAiB,GACoB,qBAA4C,oBAAlF,cAAmF,EAA7C,WAA4C,mDAtMhG,oPAEI,GACA,gYAAU,GAG4B,gEAA0D,IAApG,aAAqG,EAA3D,SAA0D,GAM9F,oEAAyD,IAD/D,aACgE,EAA1D,UAAyD,GAoC/D,ouBAA8F,GAGxF,0OAAe,GAMH,oYAA8B,GAC9B,o6EAAgC,IAC5B,+zDAIiB,IAKrB,oYAA8B,GAC9B,86EAAgC,IAC5B,m3DAIiB,IAKrB,6YAA8B,GAC9B,u+EAAgC,IAC5B,o3DAIiB,IAKrB,6YAA8B,GAC9B,u+EAAgC,IAC5B,swFAA+H,IAC/H,8nBAAqD,GAMzD,6YAA8B,GAC9B,u+EAAgC,IAC5B,iwDAG0B,IAK9B,6YAA8B,GAC9B,u+EAAgC,IAC5B,o3DAIiB,IAKrB,6YAA+B,GAC/B,u+EAAiC,IAC7B,o3DAIiB,IAeK,sBAAa,EAA3C,2sEAA8B,WAAa,EAA3C,4RAA4C,IACxC,iwDAKS,IAOjB,gJAA+B,GAOK,qBAAsB,iBAAC,+GAAuB,GAAlE,cAAmE,EAA/C,WAAsB,EAAC,WAAuB,GAqBxE,+PAAwD,GACpD,6YAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtMrB;AAClD,sEAAsE;AACtE,6DAA6D;AACf;AAGgB;AACL;AACwB;AACjF,gEAAgE;AAChE,uEAAuE;AACvE,yEAAyE;AAC9B;AAEiD;AAK9B;AACzB;AAC+C;AAClD;SAUQ,wFAAuB;AARjE;IAwBE,6BACU,WAAwB,EACxB,mBAAyC,EACzC,WAAwB,EACxB,WAAwB,EACxB,QAAkB,EAClB,MAAc,EACd,cAA8B;QAN9B,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAsB;QACzC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAVxC,eAAU,GAAW,EAAE,CAAC;IAWpB,CAAC;IAEL,sCAAQ,GAAR;QAAA,iBAmCC;QAjCC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,IAAU;YAC9B,IAAG,IAAI,EAAE;gBACL,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEjB,KAAI,CAAC,cAAc,GAAqB;oBACpC,aAAa,EAAE,KAAI,CAAC,IAAI,CAAC,aAAa;oBACtC,uBAAuB,EAAC,EAAE;oBAC1B,oBAAoB,EAAE,EAAE;iBACvB,CAAC;gBAEN,KAAI,CAAC,QAAQ,GAAC,KAAI,CAAC,cAAc,EAAE,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;QACH,+CAA+C;QAC/C,8BAA8B;QAE9B,+CAA+C;QAC/C,8CAA8C;QAC9C,kCAAkC;QAClC,+BAA+B;QAC/B,QAAQ;QAER,yCAAyC;QAEzC,sCAAsC;QACtC,0DAA0D;QAC1D,KAAK;IAKP,CAAC;IAED,4CAAc,GAAd;QAEI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1B,EAAE,EAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAChC,QAAQ,EAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,QAAQ,EAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,SAAS,EAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7D,aAAa,EAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;YAC3C,WAAW,EAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACzC,GAAG,EAAe,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACvD,WAAW,EAAO,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,YAAY,CAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACrG,cAAc,EAAI,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAC,YAAY,CAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SAC3G,CAAC,CAAC;IACP,CAAC;IAGD,wCAAU,GAAV,UAAW,EAAkD;QAA7D,iBAoBC;YApBY,gBAAK,EAAE,gBAAK;QACvB,IAAI,CAAC,IAAI,CAAC,EAAE,GAAC,KAAK,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC,aAAa,CAAC;QAE5C,IAAI,EAAE,GAAkB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC;QAExD,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QACrB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aACzE,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,CAAC;QAClF,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC;IACN,CAAC;IAED,8CAAgB,GAAhB,UAAiB,SAAS;QAGxB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,SAAS,CAAC;IAChC,CAAC;IAED,iDAAmB,GAAnB,UAAoB,MAAM;QACxB,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,IAAE,MAAM,CAAC,EAAE,EACtC;YACE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC;SAErC;IAEH,CAAC;IAED,8CAAgB,GAAhB,UAAiB,MAAM,EAAC,SAAgB;QAEtC,IAAG,MAAM,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACjC;aAED;YACE,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAClC;SACF;QACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC;IAEtD,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IAEvC,CAAC;IAlIgC;QAAhC,0DAAM,CAAC,gGAAe,CAAC,OAAO,CAAC;kCAAQ,gDAAU;sDAAQ;IAoI5D,0BAAC;CAAA;AArI+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCnBhB,k5BAA0G,GAA3D,0JAA0D,MAAC,gFAAW,2BAArH,YAA0G,2BAA3D,8DAA0D,IAAzG,qWAA0G,EAA3D,SAA0D,EAAzG,oBAA0G;uGAC1G,kKAAkG,IAA1D,sJAAyD,MAAC,oFAAY,iCAAtE,iEAAyD,IAAjG,YAAkG,EAA1D,SAAyD;uGAwC7F;;;;;;;;;86BAA0E,2EAAE,2BAAzC,kBAAe,EAAlD,YAA0E,EAAvC,SAAe,2BAAlD,8NAA0E;uGAC1E,sdAAwD,IACpD,+IAAyB,iLAAW;uGAOxC;;;;;;;;;86BAA0E,+EAAM,2BAA7C,kBAAe,EAAlD,YAA0E,EAAvC,SAAe,2BAAlD,8NAA0E;uGAEtE,qJAAkE,gCAAvB,kBAAsB,qCAAjE,YAAkE,EAAvB,SAAsB;uGACjE,qJAAwF,gCAA5C,mDAA2C,EAAvF,YAAwF,EAA5C,SAA2C;uGAF3F,sdAAwD,IACpD,0YAAkE,IAClE,0YAAwF,yBADpE,kBAAsB,8BAA1C,YAAkE,EAA9C,SAAsB,GACtB,mBAAuB,8BAA3C,YAAwF,EAApE,SAAuB;uGAY/C;;;;;;;;;86BAAmD,oFAAM,2BAAtB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,ybAAiC,IAC7B,+IAAyB,uLAAiB;wGAM9C;;;;;;;;;86BAAmD,4EAAG,2BAAnB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,ybAAiC,IAC7B,+IAAyB,wLAAkB;wGAM/C;;;;;;;;;86BAAmD,mFAAU,2BAA1B,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,ybAAiC,IAC7B,+IAAyB,uLAAiB;wGAK9C,8eAA4D;wGAC5D,sdAAwD,IAChD;;;;;;;;;;;;mhEAIC,GADG,uDAAoD,IAEpD,02BAAU,mFAAU,2BAJpB,6BAAmB,EADvB,YAIC,EAHG,SAAmB,GAEnB,4DAAoD,wBAHxD,YAIC,EADG,SAAoD,GAEpD,YAAU,2BALd,iPAIC,GACG,2XAAU;wGAK1B,yvBAAoD;wGAEpD,quBAGC;wGAGL,uqCAGkC,IAC9B,upDAAyD,IACzD,0oBAA0C,yFAAa,2BAHvD,wBAAiB,EAFrB,YAGkC,EAD9B,SAAiB,GACjB,+BAA6B,EAHjC,YAGkC,EAA9B,SAA6B,GACa,qBAAc,EAAxD,YAAyD,EAAf,SAAc,GAA7B,wBAAc,EAA5B,oBAAa,EAA1B,YAAyD,EAA9B,SAAc,EAA5B,SAAa,GACC,qBAAc,EAAzC,YAA0C,EAAf,SAAc,2BADzC,gTAAyD;wGAI7D,8MAIuC,YAHnC;;wBAAkC;MADtC,upBAIuC,KAAnC,uDAAkC,yBAFlC,kBAAgC,+BAChC,kBAAsC,mCACtC,0CAAkC,GAJtC,YAIuC,EAFnC,SAAgC,EAChC,SAAsC,EACtC,SAAkC;0QAzIlD,+lBAAmE,IAGjE,iJAA2B,KAIzB,4IAAoB,KAGhB,i1CAEoE,IAGhE,0qCACgD,IAC5C,gfAA0G,IAC1G,gfAAkG,IAKtG;;;;;;+oEACgE,IAC5D,8JAAiC,KAC7B,83BAAiC,+EAAM,MAE3C,ksFAA0C,MACtC;;;;;;;;;;;;;;;;;;;;;k3EAEC,KAgBb,+JAAuC,KAEnC,uJAA+B,KAC/B;;;;;;8mEAIyB,KAFrB,iEAAgC,MAKhC,q6BAAiC,KAC7B,kiBAA0E,KAC1E,ghBAAwD,KAO5D,0sBAAqC,MACjC,uUAA0E,IAC1E,iUAAwD,IAa5D,q6BAAuC,KACnC,kiBAAmD,KACnD,ihBAAiC,KAMrC,q6BAAwC,KACpC,oiBAAmD,KACnD,khBAAiC,KAMrC,u6BAAuC,KACnC,oiBAAmD,KACnD,khBAAiC,KAKrC,u6BAAqC,KACjC,oiBAA4D,KAC5D,khBAAwD,KAW5D,wnBAAoD,KAEpD,yZAGC,IAGL,6YAGkC,GAH7B,sLAAoD,KAQzD,6YAIuC,GAJxB,gXAAoH,kDArI/I,YAAmE,GAWvD,wBAAiB,EACjB,qBAAoB,EAFxB,YAEoE,EADhE,SAAiB,EACjB,SAAoB,GADF,+BAA6B,EAC1B,sCAA0C,EAFnE,YAEoE,EAD9C,SAA6B,EAC1B,SAA0C,GAI3D,qBAAc,EADlB,aACgD,EAA5C,SAAc,GAAC,8BAA4B,EAD/C,aACgD,EAA7B,SAA4B,GAOA,oBAAwB,aAAvE,aACgE,EADjB,UAAwB,GACjD,sBAAc,EADpC,aACgE,EAA1C,UAAc,GAAC,6BAA0B,EAD/D,aACgE,EAA3B,UAA0B,GAA3D,2BAAiB,EADrB,aACgE,EAA5D,UAAiB,GAEb,aAAiC,GAI7B,0BAAyB,EAD7B,aAEC,EADG,UAAyB,GADtB,yBAAW,EAAU,4BAAuB,EAAnD,aAEC,EAFM,UAAW,EAAU,UAAuB,GAyBvD,mBAAoB,EAJxB,aAIyB,EAArB,UAAoB,GADZ,qBAAkB,EAAC,sBAAsB,EAAC,mBAAmB,EAHzE,aAIyB,EADb,UAAkB,EAAC,UAAsB,EAAC,UAAmB,GAF9D,oBAAyB,aADpC,aAIyB,EAHd,UAAyB,GAMlB,qBAAiB,EAA/B,aAAiC,EAAnB,UAAiB,GASjB,yBAAqB,EAAnC,aAAqC,EAAvB,UAAqB,GAerB,2BAAuB,EAArC,aAAuC,EAAzB,UAAuB,GAQvB,4BAAwB,EAAtC,aAAwC,EAA1B,UAAwB,GAQxB,2BAAuB,EAArC,cAAuC,EAAzB,UAAuB,GAOvB,yBAAqB,EAAnC,cAAqC,EAAvB,UAAqB,GAanB,oBAAmC,mBAAnD,cAAoD,EAApC,UAAmC,GAE1C,oBAAiD,mBAA1D,cAGC,EAHQ,UAAiD,GAMzD,qLAAoD,WAAzD,cAGkC,EAH7B,UAAoD,GAQ1C,iUAAoH,kDAAnI,cAIuC,EAJxB,UAAoH,2BA9GnI,4tBACgE,GAExD,oYAAiC,GAErC,o6EAA0C,IACtC,+sDAEC,IAqBL,oCAAgC,GAFpC,aAIyB,EAFrB,UAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpD4B;AAC5B;AACH;AAIsD;AACvD;AACmC;AAER;AAC8B;AAC7C;AACE;AAE1D,0EAA0E;AAE1E;IAoBE,+BAA+B;IAC/B,iFAAiF;IACjF,0BAA0B;IAE1B,gCAAgC;IAGhC,oDAAoD;IACpD,qCAAqC;IAErC;IACE,oCAAoC;IACpC,qDAAqD;IACrD,iCAAiC;IACzB,YAAyB,EACzB,MAAa;QALvB,iBAwBC;QApBS,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAO;QApBvB,qBAAgB,GAAG,CAAC,IAAI,EAAC,QAAQ,EAAC,UAAU,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAsB1E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,YAAY;aACxC,SAAS,CAAC,aAAG;YACZ,6BAA6B;YAC3B,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,GAAC,GAAG,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YACxC,IAAI;QACN,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,UAAU,GAAG,IAAI,mFAAe,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,6DAA6D;QAC7D,oEAAoE;IACxE,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAOC;QANC,sEAAsE;QACtE,+CAA+C;QAC/C,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,yBAAe;YAC7C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,6CAAiB,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;QAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,6CAAiB,GAAjB,UAAkB,MAAM;QAEtB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAC,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC7E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAExE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IA3EiC;QAAjC,0DAAM,CAAC,+GAAoB,CAAC,GAAG,CAAC;kCAAmB,0DAAU;+DAA8B;IAChE;QAA3B,0DAAM,CAAC,2FAAc,CAAC,GAAG,CAAC;kCAAa,0DAAU;yDAAqB;IA0FzE,wBAAC;CAAA;AA5F6B;AA8F9B;IAAoC,kCAA4B;IAG9D,wBACU,MAAa;QADvB,YAGE,iBAAO,SACR;QAHS,YAAM,GAAN,MAAM,CAAO;;IAGvB,CAAC;IAED,gCAAO,GAAP,UAAQ,gBAAkC;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,EAAP,CAAO,CAAC,CAAC;IACzC,CAAC;IAED,mCAAU,GAAV,UAAW,gBAAkC;IAC7C,CAAC;IAED,8BAAK,GAAL;IAEA,CAAC;IAED,6BAAI,GAAJ,UAAK,MAAuB;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,iHAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;IACxD,CAAC;IArByB;QAA3B,0DAAM,CAAC,2FAAc,CAAC,GAAG,CAAC;kCAAa,0DAAU;sDAAqB;IAsBvE,qBAAC;CAAA,CAvBiC,6DAAU,GAuB3C;AAvBwB;AA2B3B,0DAA0D;AAC1D,6DAA6D;AAC7D,uEAAuE;AACvE,kEAAkE;AAElE,0DAA0D;AAC1D,gEAAgE;AAEhE,kBAAkB;AAClB,wCAAwC;AACxC,oCAAoC;AACpC,QAAQ;AACR,eAAe;AACf,MAAM;AAEN,uEAAuE;AACvE,iDAAiD;AACjD,MAAM;AAEN,2DAA2D;AAC3D,sCAAsC;AACtC,wCAAwC;AACxC,2CAA2C;AAC3C,MAAM;AAEN,wCAAwC;AAExC,sCAAsC;AAEtC,4CAA4C;AAC5C,wDAAwD;AACxD,8CAA8C;AAC9C,uDAAuD;AACvD,2CAA2C;AAC3C,YAAY;AAEZ,QAAQ;AAIR,IAAI;;;;;;;;;;;;;ACrLJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAEZ;AAC9D,6DAA6D;AAC5B;AACD;AAEc;AAG9C;IAKI,0BACY,WAAwB,EACxB,MAAc,EACd,mBAAyC;QAFzC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAsB;QANzD,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,CAAC,CAAC;IAMR,CAAC;IAEJ,kCAAO,GAAP,UAAQ,KAA6B;QACjC,OAAO,IAAI,CAAC;QACZ,mEAAmE;QACnE,wBAAwB;QACxB,gFAAgF;QAChF,sCAAsC;QAEtC,sCAAsC;QACtC,KAAK;IACT,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACN;AAIpE,iEAAiE;AACO;AAOrB;AAQnD,IAAM,MAAM,GAAG;IACb;QACI,IAAI,EAAO,EAAE;QACb,SAAS,EAAE,gFAAiB;QAC5B,0CAA0C;QAC1C,WAAW,EAAE,CAAC,+DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAO,SAAS;QACpB,SAAS,EAAE,sFAAmB;QAC9B,OAAO,EAAI,EAAE,IAAI,EAAE,oFAAkB,EAAE;QACvC,WAAW,EAAE,CAAC,+DAAS,CAAC;QACxB,yCAAyC;KAC5C;IACD,IAAI;IACJ,IAAI;IACJ,wBAAwB;IACxB,qBAAqB;IACrB,IAAI;CACL,CAAC;AAEF;IAAA;IAwB0B,CAAC;IAAD,iBAAC;AAAD,CAAC","file":"referential-user-user-module-ngfactory.js","sourcesContent":["import { Pagination } from \"../pagination.model\";\r\n\r\nexport class FilterUserTableSelected {\r\n    // idImport: number;\r\n    // account: ISelect;\r\n    // asifState: ISelect;\r\n    // indexTabAsifState: number;\r\n    keyword: number;\r\n    pagination: Pagination;\r\n    \r\n    constructor () {\r\n        // this.idImport = null;\r\n        // this.account = null; \r\n        // this.asifState =null;\r\n        // this.indexTabAsifState = 0;\r\n        this.keyword = null;\r\n        this.pagination = new Pagination();\r\n    }\r\n}\r\n\r\nexport class FilterUserTable {\r\n    // asiBankLabel: string;\r\n    // asiDateImport: Date;\r\n    // accounts: ISelect[];\r\n    // asifStates: ISelect[];\r\n    selected : FilterUserTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterUserTableSelected();\r\n    }\r\n}","import { FilterUserTable } from \"app/main/_models/filters/user.filter\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\n\r\nexport const USER_TABLE_FILTER_LOAD = 'user-table-filter-load';\r\n// export const USER_TABLE_FILTER_LOAD_SUCCESS = 'user-table-filter-load-success';\r\nexport const USER_TABLE_FILTER_CHANGE = 'user-table-filter-change';\r\nexport const USER_TABLE_FILTER_UPDATE_PAGINATION = 'user-table-filter-update-pagination';\r\n\r\nexport class LoadUserTableFilter {\r\n    static readonly type = USER_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterUserTable) { }\r\n}\r\n\r\n// export class LoadUserTableFilterSuccess {\r\n//     static readonly type = USER_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\nexport class ChangeUserTableFilter {\r\n    static readonly type = USER_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterUserTable) { }\r\n}\r\n\r\nexport class UpdatePaginationUserTableFilter {\r\n    static readonly type = USER_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterUserTable, FilterUserTableSelected } from \"app/main/_models/filters/user.filter\";\r\nimport { UserService } from \"app/main/apps/referential/user/user.service\";\r\nimport { LoadUserTableFilter, ChangeUserTableFilter, UpdatePaginationUserTableFilter } from \"./user-list-filter.action\";\r\nimport { LoadUserTableDatas } from \"../user-list/user-list.action\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\n\r\n\r\nexport class UserTableFilterStateModel extends FilterInfo<FilterUserTable> {\r\n    constructor () {\r\n        super(FilterUserTable);\r\n    }\r\n}\r\n\r\nlet userTableFilterStateModel = new UserTableFilterStateModel();\r\n\r\n@State<UserTableFilterStateModel>({\r\n    name: 'UserTableFilter',\r\n    defaults : userTableFilterStateModel\r\n})\r\n\r\nexport class UserTableFilterState extends LoaderState {\r\n    reloadFilters: boolean = true;\r\n    hasChangedState: boolean = true;\r\n\r\n    constructor(\r\n        private _userService: UserService,\r\n        private _store: Store\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: UserTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadUserTableFilter)\r\n    loadUserTableFilter(context: StateContext<UserTableFilterStateModel>, action: LoadUserTableFilter) {\r\n        this.loading(context,'filters');\r\n        \r\n        const state = context.getState();\r\n        state.filters = null;\r\n        context.patchState(state);\r\n\r\n        this._userService.getUserTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.filters = result; // new FilterUserTable();\r\n                context.patchState(state);\r\n                //TODO: a controler\r\n                context.dispatch(new ChangeUserTableFilter(action.payload));\r\n\r\n                this.loaded(context,'filters');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadUserTableFilterSuccess)\r\n    // loadSuccess(context: StateContext<UserTableFilterStateModel>, action: LoadUserTableFilterSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.filters = new FilterUserTable();\r\n    //     // state.filters.selected.idImport = action.payload.selected.idImport;\r\n\r\n    //     context.patchState(state);\r\n\r\n    //     context.dispatch(new ChangeUserTableFilter(action.payload));\r\n        \r\n    // }\r\n\r\n    @Action(ChangeUserTableFilter)\r\n    changeFilter(context: StateContext<UserTableFilterStateModel>, action: ChangeUserTableFilter) {\r\n        const state = context.getState();\r\n\r\n        \r\n        if(this.ReloadFilters(state.filters,action.payload)) {\r\n            context.dispatch(new LoadUserTableFilter(action.payload));\r\n        }\r\n        else {\r\n            if(this.HasChangedState(state.filters.selected,action.payload.selected)) {\r\n                state.filters = action.payload;\r\n                context.patchState(state);\r\n\r\n                this._store.dispatch(new LoadUserTableDatas(state.filters.selected));\r\n            }\r\n        }\r\n     }\r\n\r\n    @Action(UpdatePaginationUserTableFilter)\r\n    UpdatePaginationUserTableFilter(context: StateContext<UserTableFilterStateModel>, action: UpdatePaginationUserTableFilter) {\r\n        const state = context.getState();\r\n\r\n        state.filters.selected.pagination = action.payload;\r\n        context.patchState(state);\r\n    }\r\n\r\n    HasChangedState( state: FilterUserTableSelected, payload : FilterUserTableSelected ) {\r\n        if (this.hasChangedState)\r\n        {\r\n            this.hasChangedState = false;\r\n            return true;\r\n        }\r\n        if(payload.keyword == null ) {\r\n            return false;\r\n        }\r\n        if( state.keyword==null && payload.keyword!=null ) {\r\n            return true;\r\n        };\r\n        if(state.keyword!=payload.keyword) {\r\n            return true;\r\n        }\r\n        \r\n    }\r\n\r\n    ReloadFilters(state: FilterUserTable, payload:FilterUserTable ) {\r\n        if(this.reloadFilters)\r\n        {\r\n            this.reloadFilters=false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","export const USER_TABLE_LOAD = 'user-table-load';\r\n// export const USER_TABLE_LOAD_SUCCESS = 'user-table-load-success';\r\nexport const USER_TABLE_FILTER_CHANGE = 'user-table-filter-change';\r\nexport const USER_TABLE_CLEAR = 'user-table-clear';\r\n\r\nexport class LoadUserTableDatas {\r\n    static readonly type = USER_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\n// export class LoadUserTableDatasSuccess {\r\n//     static readonly type = USER_TABLE_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: any) { }\r\n// }\r\n\r\nexport class ClearUserTableDatas {\r\n    static readonly type = USER_TABLE_CLEAR;\r\n}","import { UserTable } from \"app/main/_models/user.model\";\r\nimport { UserService } from \"app/main/apps/referential/user/user.service\";\r\nimport { LoadUserTableDatas, ClearUserTableDatas } from \"./user-list.action\";\r\nimport { UpdatePaginationUserTableFilter } from \"../user-list-filter/user-list-filter.action\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoaderState } from \"../../_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class UserTableStateModel extends Datas<UserTable[]> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new UserTableStateModel();\r\n@State<UserTableStateModel>({\r\n    name: 'UserTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class UserTableState extends LoaderState {\r\n    constructor(\r\n        private _userService: UserService,\r\n        private _store: Store) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: UserTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadUserTableDatas)\r\n    loadGrid(context: StateContext<UserTableStateModel>, action: LoadUserTableDatas) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._userService.getUserTable(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = action.payload.datas;\r\n                context.patchState(state);\r\n                //TODO a controler\r\n                this._store.dispatch(new UpdatePaginationUserTableFilter(action.payload.pagination));\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n    }\r\n\r\n    // @Action(LoadUserTableDatasSuccess)\r\n    // loadSuccess(context: StateContext<UserTableStateModel>, action: LoadUserTableDatasSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload.datas;\r\n\r\n    //     context.patchState(state);\r\n    //     this._store.dispatch(new UpdatePaginationUserTableFilter(action.payload.pagination));\r\n    // }\r\n\r\n    @Action(ClearUserTableDatas)\r\n    clear(context: StateContext<UserTableStateModel>) {\r\n        return context.setState(new UserTableStateModel());\r\n    }\r\n}","<!-- <div class=\"row\">\n    <div class=\"file-uploader\" *ngIf=\"uploader.queue.length==0\">\n        <input hidden type=\"file\"\n            ng2FileSelect\n            [uploader]=\"uploader\"\n            #fileInput/> \n    \n        <button \n            mat-fab\n            class=\"add-file-button mat-warn\"\n            (click)=\"fileInput.click()\"\n            aria-label=\"Add file\"\n            *fuseIfOnDom [@animate]=\"{value:'*', params:{delay:'300ms',scale:'0.2'}}\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </div>\n\n    <div class=\"col-md-3\">\n        <h3>Modifier votre avatar:</h3>\n        <button \n            ng2FileDrop \n            [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n            (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\"\n            class=\"well drop-zone\">\n            Drop Zone\n        </button>\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\">\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n                <th>Progress</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                <td >\n                    <mat-progress-bar mode=\"determinate\" [value]=\"item.progress\"></mat-progress-bar>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <div>\n            <div>\n                Queue progress:\n                <mat-progress-bar mode=\"determinate\" [value]=\"uploader.progress\"></mat-progress-bar>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"glyphicon glyphicon-upload\"></span> Upload\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"glyphicon glyphicon-ban-circle\"></span> Cancel\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"glyphicon glyphicon-trash\"></span> Remove\n            </button>\n        </div>\n    </div>\n</div> -->\n\n<div class=\"header-upload\">\n        <!-- ADD FILE BUTTON -->\n        <div class=\"file-uploader\" *ngIf=\"uploader.queue.length==0\">\n            <input hidden type=\"file\"\n                ng2FileSelect\n                [uploader]=\"uploader\"\n                #fileInput/> \n     \n            <button \n                mat-fab\n                class=\"add-file-button mat-warn\"\n                (click)=\"fileInput.click()\"\n                aria-label=\"Add file\"\n                *fuseIfOnDom [@animate]=\"{value:'*', params:{delay:'300ms',scale:'0.2'}}\">\n                <mat-icon  style=\"color:white;\">add</mat-icon>\n            </button>\n        </div>\n        \n        <!-- ADD DROP ZONE -->\n        <div *ngIf=\"uploader.queue.length==0\">\n            <button mat-button \n                ng2FileDrop\n                [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n                (fileOver)=\"fileOverBase($event)\"\n                [uploader]=\"uploader\"\n                class=\"well drop-zone\"\n                [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                <div class=\"parachute_32\" style=\"padding-left:35px;\">Déposer le fichier ici</div>\n              \n            </button>\n        </div>\n        \n        <!-- ADD FILE UPLOAD INFO -->\n        <table *ngIf=\"uploader.queue.length>0\" class=\"file-upload-info\">\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td style=\"text-align: right;\">Nom fichier: {{ item?.file?.name }}</td>\n                <td style=\"text-align: right;\" nowrap> Taille: {{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            <tr>\n                <td colspan=\"2\">\n                    <div *ngIf=\"uploader.progress>0\">\n                        <mat-progress-bar mode=\"determinate\" [value]=\"uploader.progress\"></mat-progress-bar>\n                    </div>\n                    <div style=\"text-align: right\" *ngIf=\"uploader.progress==0\">\n                        <button mat-raised-button color=\"warn\"\n                            (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                        <span class=\"glyphicon glyphicon-trash\"></span> Remove\n                        </button>\n                        <button mat-raised-button color=\"primary\"\n                                (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                            <span class=\"glyphicon glyphicon-upload\"></span> Upload\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { NotificationsService } from 'angular2-notifications';\nimport { fuseAnimations } from '@fuse/animations';\nimport { IUser } from 'app/main/_models/user.model';\nimport { environment } from 'environments/environment';\nimport { AuthService } from 'app/main/_services/auth.service';\nimport { Select, Store } from '@ngxs/store';\nimport { UserDetailState } from 'app/main/_ngxs/user/user-detail/user-detail.state';\nimport { Observable } from 'rxjs';\nimport { LoadUserDetail } from 'app/main/_ngxs/user/user-detail/user-detail.action';\n\n@Component({\n  selector: 'avatar-editor',\n  templateUrl: './avatar-editor.component.html',\n  styleUrls: ['./avatar-editor.component.scss'],\n  animations   : fuseAnimations\n})\n\nexport class AvatarEditorComponent implements OnInit {\n  @Select(UserDetailState.getUser) user$: Observable<IUser>;\n  \n  @Output() getUserAvatarChange = new EventEmitter<string>();\n  \n  uploader: FileUploader = new FileUploader({});\n  hasBaseDropZoneOver: boolean = false;\n  baseUrl = environment.apiUrl;\n  user: IUser;\n\n  constructor(\n    private authService: AuthService,\n    private notificationService: NotificationsService,\n    private _store: Store\n  ) { }\n\n  ngOnInit() {\n    this.user$.subscribe((user:IUser) => {\n      if(user) {\n          this.user = user;\n      }\n    });\n\n    this.initializeUploader();\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.uploader = new FileUploader({\n      url: `${this.baseUrl}users/${this.user.id}/avatar`,\n      authToken: `Bearer ${currentUser.token}`,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10*1024*1024\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: IUser = JSON.parse(response);\n        this.user.avatarUrl = res.avatarUrl;\n\n\n        // this.authService.changeAvatar(res.avatarUrl);\n\n        //pour fonctionnement meme quand refresh du navigateur:\n        // this.authService.currentUser.avatarUrl = res.avatarUrl;\n        // localStorage.setItem('user',JSON.stringify(this.authService.currentUser));\n        this._store.dispatch(new LoadUserDetail(this.user))\n        this.notificationService.success('Enregistrement réussi', 'Votre avatar est modifié');\n\n      }\n      \n    }\n\n    this.uploader.onErrorItem = ((item, response, status, headers):any => {\n\n      // var error = this.handleError(response);\n      this.notificationService.error('Erreur', 'Erreur');\n      });\n\n\n  }\n\n  // private handleError(error: any)\n  // {\n  //     const serverError = JSON.parse(error);\n  //     let modelStateErrors = '';\n  //     if(serverError) {\n  //         for(const key in serverError)\n  //         {\n  //             if(serverError[key]){\n  //                 modelStateErrors += serverError[key] + '\\n';\n  //             }\n  //         }\n  //     }\n\n  //     return modelStateErrors;\n\n  // }\n}\n","<div id=\"user\" class=\"page-layout carded fullwidth inner-scroll\" >\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n  \n    <!-- CENTER -->\n    <div class=\"center\">\n        <!-- <div *ngIf='userForm'> -->\n          <!-- HEADER -->\n        <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  \n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  \n                <button class=\"mr-0 mr-sm-16\" mat-icon-button\n                  [routerLink]=\"'/apps/referential/users'\"\n                   >\n                    <mat-icon>arrow_back</mat-icon>\n                </button>\n  \n                <div class=\"product-image mr-8 mr-sm-16\"  [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                    <img *ngIf=\"user.avatarUrl\" [src]=\"user.avatarUrl\">\n                    <img *ngIf=\"!user.avatarUrl\" [src]=\"'assets/images/avatars/profile.jpg'\">\n                </div>\n  \n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                      [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    <div class=\"h2\" *ngIf=\"pageType ==='edit'\">\n                        {{user.userName}}\n                    </div>\n                    <div class=\"h2\" *ngIf=\"pageType ==='new'\">\n                        Nouveau Utilisateur\n                    </div>\n                    <div class=\"subtitle secondary-text\">\n                        <span>Details Utilisateur</span>\n                    </div>\n                </div>\n            </div>\n            <!-- / APP TITLE -->\n  \n            <!-- <button mat-raised-button\n                    class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                    [disabled]=\"productForm.invalid\"\n                    *ngIf=\"pageType ==='new'\" (click)=\"addProduct()\">\n                <span>ADD</span>\n            </button> -->\n  \n            <!-- (click)=\"updateUser()\" -->\n            <button mat-raised-button\n                    class=\"save-product-button white mt-16 mt-sm-0\"\n                    [disabled]=\"userForm.invalid || userForm.pristine\"\n                    *ngIf=\"pageType ==='edit'\" (click)=\"updateUser(userForm)\">\n                <span>SAVE</span>\n            </button>\n        </div>\n        <!-- / HEADER -->\n  \n        <!-- CONTENT CARD -->\n        <div class=\"content-card\">\n  \n            <!-- CONTENT -->\n            <div class=\"content\">\n                <form name=\"userForm\" [formGroup]=\"userForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\n                  \n                  \n                      <mat-tab-group>\n  \n                        <mat-tab label=\"Généralité\">\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                                      \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <mat-icon class=\"mr-12 mt-12\">account_circle</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input matInput\n                                              name=\"userName\"\n                                              formControlName=\"userName\"\n                                              placeholder=\"Pseudonyme\"\n                                              required>\n                                  </mat-form-field>\n                              </div>\n                              \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <mat-icon class=\"mr-12 mt-12\">account_circle</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input matInput\n                                              name=\"firstName\"\n                                              formControlName=\"firstName\"\n                                              placeholder=\"Nom\"\n                                              required>\n                                  </mat-form-field>\n                              </div>\n                              \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <mat-icon class=\"mr-12 mt-12\">account_circle</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input matInput\n                                              name=\"lastName\"\n                                              formControlName=\"lastName\"\n                                              placeholder=\"Prénom\"\n                                              required>\n                                  </mat-form-field>\n                              </div>\n  \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <mat-icon class=\"mr-12 mt-12\">cake</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input class=\"mini-input\" matInput [matDatepicker]=\"dateOfBirth\" formControlName=\"dateOfBirth\" placeholder=\"Date de naissance\"> \n                                      <mat-datepicker-toggle matSuffix [for]=\"dateOfBirth\"></mat-datepicker-toggle>\n                                      <mat-datepicker #dateOfBirth></mat-datepicker>\n                                  </mat-form-field>\n                                  \n                                  <div style=\"width:10%\"></div>\n  \n                                  <mat-icon class=\"mr-12 mt-12\">cake</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input matInput\n                                              name=\"age\"\n                                              formControlName=\"age\"\n                                              placeholder=\"Age\">\n                                  </mat-form-field>\n                              </div>\n  \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <mat-icon class=\"mr-12 mt-12\">calendar_today</mat-icon>\n                                  <mat-form-field class=\"w-100-p\">\n                                      <input matInput\n                                              name=\"dateCreated\"\n                                              formControlName=\"dateCreated\"\n                                              placeholder=\"Date de création\"\n                                              required>\n                                  </mat-form-field>\n  \n                                  <div style=\"width:10%\"></div>\n  \n                                  <mat-icon class=\"mr-12 mt-12\" >calendar_today</mat-icon>\n                                  <mat-form-field class=\"w-100-p\" >\n                                      <input matInput\n                                              name=\"dateLastActive\"\n                                              formControlName=\"dateLastActive\"\n                                              placeholder=\"Date de dernière activité\"\n                                              required>\n                                  </mat-form-field>\n                              </div>\n  \n                              <div class=\"mb-24\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                                  <!-- <mat-icon class=\"mr-12 mt-12\">cake</mat-icon> -->\n                                  \n                              </div>\n                            </div>\n                        </mat-tab>\n  \n                        <mat-tab label=\"Adresse\">\n                          <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                              <g-map-search *ngIf=\"gMapSearchInfo\" [gMapSearchInfo]=\"gMapSearchInfo\" (changeGMapAddress)=\"onChangeGMapAddress($event)\"></g-map-search>\n                          \n                              <mat-form-field class=\"w-0-p\" [hidden]=true>\n                                  <input matInput\n                                          name=\"idGMapAddress\"\n                                          formControlName=\"idGMapAddress\"\n                                          placeholder=\"idGMapAddress\"\n                                          \n                                          >\n                              </mat-form-field>\n                          </div>\n                      </mat-tab>\n  \n                        <mat-tab label=\"Avatar\">\n                              <!-- <div fxLayout='row' fxLayoutAlign=\"center center\" fxLayoutWrap >     -->\n                          <mat-card class=\"example-card\">\n                                      <mat-card-header>\n                                          <avatar-editor (getUserAvatarChange)=\"updateUserAvatar($event)\"></avatar-editor>\n           \n                                      </mat-card-header>\n                                      \n                                      <mat-card-content>\n                                          <img class=\"avatar\" [src]=\"user.avatarUrl\" alt=\"{{user.userName}}\">\n                                      </mat-card-content>\n                              </mat-card>\n                         <!-- </div> -->\n                              <!-- <div class=\"avatar-card\">\n                                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\n                                      <div fxFlex=\"50\">\n                                          <avatar-editor [user]=\"user\" (getUserAvatarChange)=\"updateUserAvatar($event)\"></avatar-editor>\n                                      </div>\n                                      <div class=\"avatar-image\" fxFlex=\"50\">\n                                          <img mat-card-image *ngIf=\"avatarUrl\" src=\"{{avatarUrl}}\" alt=\"{{user.userName}}\">\n                                      </div>\n                                      \n                                  </div> \n                              </div> -->\n                     \n                        </mat-tab>\n  \n                        <mat-tab label=\"Comptes associés\">\n                            <div class=\"px-24 py-8\"  style=\"background-color:#039BE5; \">\n                                <div class=\"mail-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                                    <button mat-icon-button matTooltip=\"Ajouter un compte\" >\n                                        <mat-icon style=\"color:white;\">add</mat-icon>\n                                    </button>\n                                    <button mat-icon-button matTooltip=\"Supprimer le(s) compte(s) sélectionné(s)\" *ngIf=\"hasSelectedAccounts\">\n                                        <mat-icon style=\"color:white;\">delete</mat-icon>\n                                    </button>\n                                </div>\n                            </div> \n                          \n                          \n                          \n                          \n                          \n                          \n                          \n                          <div fxLayout='column' fxLayoutWrap class=\"cards\">\n                              <div fxFlex=\"20\" class=\"example-card\" *ngFor=\"let bankAgency of user.bankAgencies\">\n                              <mat-card class=\"example-card\">\n                              <mat-card-header>\n                                      \n                                      <!-- mat-card-avatar -->\n                                <img mat-card-avatar src=\"{{bankAgency.logoClassName}}\"   alt=\"bank agency logo\">\n                                <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n                                <mat-card-title>{{bankAgency.labelLong}}</mat-card-title>\n                                <mat-card-subtitle>{{bankAgency.labelShort}}</mat-card-subtitle>\n                              </mat-card-header>\n                              \n                              <mat-card-content>\n                                  <div fxLayout='column' fxLayoutWrap class=\"cards\">\n                                      <div style=\"background-color: #EDEEEF;color: #1F1F1F;height:30px;\" fxFlex=\"20\" fxLayout='row'> \n                                          <div style=\"width:10%;\"></div>\n                                          <div [hidden]=\"true\" style=\"width:10%;\"></div>\n                                          <div style=\"width:20%;margin-top:7px;\">Numéro de compte</div>\n                                          <div style=\"width:20%;margin-top:7px;\">Nom du compte</div>\n                                      </div>\n                                      <div fxFlex=\"20\" fxLayout='row' *ngFor=\"let account of bankAgency.accounts\">\n                                          <!-- <mat-divider></mat-divider> -->\n                                          <!-- [(ngModel)]=\"checkboxes[account.id]\"  -->\n                                          <!-- (ngModelChange)=\"onSelectedChange(account.id)\" -->\n                                          <mat-checkbox style=\"width:10%;margin-top: 10px;\"\n                                              (change)=\"onSelectedChange($event,account.id)\"\n                                              (click)=\"$event.stopPropagation()\">\n                                          </mat-checkbox>\n                                          <div [hidden]=\"true\" style=\"width:10%;margin-top: 10px;\">{{account.id}}</div>\n                                          <div style=\"width:20%;margin-top: 12px;\">{{account.number}}</div>\n                                          <div style=\"width:20%;margin-top: 12px;\">{{account.label}}</div>\n                                      </div>\n                                  </div>\n                              </mat-card-content>\n                              <!-- </mat-card-content>\n                                <p>\n                                  The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n                                  A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n                                  bred for hunting.\n                                </p>\n                              </mat-card-content> -->\n                              <!-- </div> -->\n                              <!-- <mat-card-actions>\n                                <button mat-button>LIKE</button>\n                                <button mat-button>SHARE</button>\n                              </mat-card-actions> -->\n                            </mat-card>\n                            </div>\n                          </div>\n                        </mat-tab>\n  \n  \n                    </mat-tab-group>\n                </form>\n  \n            </div>\n            <!-- / CONTENT -->\n  \n        </div>\n        <!-- / CONTENT CARD -->\n        </div>\n      \n    </div>\n  \n    <!-- / CENTER -->\n  <!-- </div> -->","import { Component, OnInit } from '@angular/core';\n// import { fuseAnimations } from '../../../../../../core/animations';\n// import { IUser } from '../../../../../_models/user.model';\nimport { UserService } from '../user.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { NotificationsService } from 'angular2-notifications';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n// import { FuseUtils } from '../../../../../../core/fuseUtils';\n// import { AuthService } from '../../../../../_services/auth.service';\n// import { IGMapSearchInfo } from '../../../../../_models/g-map.model.';\nimport { DatePipe } from '@angular/common';\nimport { Moment } from 'moment';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\nimport { fuseAnimations } from '@fuse/animations';\nimport { IUser } from 'app/main/_models/user.model';\nimport { IGMapSearchInfo } from 'app/main/_models/g-map.model.';\nimport { AuthService } from 'app/main/_services/auth.service';\nimport { Select } from '@ngxs/store';\nimport { UserDetailState } from 'app/main/_ngxs/user/user-detail/user-detail.state';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss'],\n  animations   : fuseAnimations,\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'fr'},\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ]\n})\n\nexport class UserDetailComponent implements OnInit {\n  @Select(UserDetailState.getUser) user$: Observable<IUser>;\n\n  user : IUser;\n  onUserChanged: Subscription;\n  pageType: string;\n  userForm: FormGroup;\n  avatarUrl: string;\n  gMapSearchInfo: IGMapSearchInfo;\n  checkboxes: number[]=[];\n  hasSelectedAccounts: boolean;\n\n  constructor(\n    private userService: UserService,\n    private notificationService: NotificationsService,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private datePipe: DatePipe,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    \n    this.pageType = 'edit';\n    \n    this.user$.subscribe((user:IUser) => {\n      if(user) {\n          this.user = user;\n\n          this.gMapSearchInfo = <IGMapSearchInfo> { \n              idGMapAddress: this.user.idGMapAddress,\n              operationPositionSearch:\"\",\n              operationPlaceSearch: \"\"\n              };\n\n          this.userForm=this.createUserForm();\n      }\n    });\n    // this.activatedRoute.data.subscribe(data => {\n    //   this.user = data['user'];\n   \n    //   this.gMapSearchInfo = <IGMapSearchInfo> { \n    //     idGMapAddress: this.user.idGMapAddress,\n    //     operationPositionSearch:\"\",\n    //     operationPlaceSearch: \"\"\n    //     }\n\n    //   this.userForm=this.createUserForm();\n      \n    //   this.authService.currentAvatarUrl\n    //     .subscribe(avatarUrl=> this.avatarUrl = avatarUrl);\n    // })\n\n    \n\n\n  }\n\n  createUserForm()\n  {\n      return this.formBuilder.group({\n          id              : [this.user.id],\n          userName        : [this.user.userName,[Validators.required]],\n          lastName        : [this.user.lastName,[Validators.required]],\n          firstName       : [this.user.firstName,[Validators.required]],\n          idGMapAddress   : [this.user.idGMapAddress],\n          dateOfBirth     : [this.user.dateOfBirth],\n          age             : [{value:this.user.age,disabled:true}],\n          dateCreated     : [{value:this.datePipe.transform(this.user.dateCreated,\"dd/MM/yyyy\"),disabled:true}],\n          dateLastActive  : [{value:this.datePipe.transform(this.user.dateLastActive,\"dd/MM/yyyy\"),disabled:true}]\n      });\n  }\n\n  \n  updateUser({ value, valid }: { value: IUser, valid: boolean }) {\n    this.user.id=value.id;\n    this.user.userName=value.userName;\n    this.user.lastName=value.lastName;\n    this.user.firstName=value.firstName;\n    this.user.idGMapAddress=value.idGMapAddress;\n    \n    var mt:Moment = <Moment>this.userForm.value.dateOfBirth;\n\n    var dt = mt.toDate();\n    dt.setMinutes(dt.getMinutes() - dt.getTimezoneOffset());\n    this.user.dateOfBirth = dt;\n\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(next => {\n        this.userForm.reset(this.user);\n        this.notificationService.success('Sauvegarde réussi', 'Utilisateur enregistré');\n      }, error => {\n        this.notificationService.error('Echec sauvegarde', error);\n      })\n  }\n \n  updateUserAvatar(avatarUrl)\n  {\n\n    this.user.avatarUrl=avatarUrl;\n  }\n\n  onChangeGMapAddress($event) {\n    if (this.user.idGMapAddress!=$event.id)\n    {\n      this.user.idGMapAddress = $event.id;\n\n    }\n    \n  }\n\n  onSelectedChange($event,idAccount:number)\n  {\n    if($event.checked) {\n      this.checkboxes.push(idAccount);\n    }\n    else\n    {\n      let index = this.checkboxes.indexOf(idAccount);\n      if (index > -1) {\n        this.checkboxes.splice(index, 1);\n      }\n    }\n    this.hasSelectedAccounts = this.checkboxes.length>0;\n\n  }\n\n  navigate() {\n    this.router.navigate([`apps/users`]);\n\n  }\n  \n}","<div id=\"users\" class=\"page-layout carded fullwidth inner-scroll\" >\n\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent\"></div>\n  <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header accent\"\n            fxLayout=\"column\" fxLayoutAlign=\"center center\"\n            fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n\n            <!-- APP TITLE -->\n            <div class=\"logo my-12 m-sm-0\"\n                fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon mr-16\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box</mat-icon>\n                <span class=\"logo-text h1\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Utilisateurs</span>\n            </div>\n            <!-- / APP TITLE -->\n\n            <!-- SEARCH -->\n            <div class=\"search-input-wrapper mx-12 m-md-0\" [formGroup]=\"formSearch\"\n                fxFlex=\"0 0 80px\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <label for=\"search\" class=\"mr-8\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                </label>\n                <mat-form-field floatPlaceholder=\"never\" >\n                    <input id=\"search\" matInput placeholder=\"Recherche\"\n                        formControlName=\"keyword\"\n                    >\n                </mat-form-field>\n            </div>\n            <!-- / SEARCH -->\n\n            <!-- <button mat-raised-button\n                    [routerLink]=\"'/apps/e-commerce/products/new'\"\n                    class=\"add-product-button mat-white-bg my-12 mt-sm-0\">\n                <span>ADD NEW PRODUCT</span>\n            </button> -->\n\n        </div>\n        \n        <!-- / HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card mat-white-bg\">\n \n            <div class=\"example-container\">\n            <mat-table class=\"users-table\"\n                #table [dataSource]=\"dataSource\"\n                [@animateStagger]=\"{value:'50'}\"\n                matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear\n                fusePerfectScrollbar>\n\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\" >\n                    <mat-header-cell *matHeaderCellDef mat-sort-header style=\"flex:0 0 80px;\">ID</mat-header-cell>\n                    <mat-cell *matCellDef=\"let user\" style=\"flex:0 0 80px;\">\n                        <p class=\"text-truncate\">{{user.id}}</p>\n                    </mat-cell>\n                </ng-container>\n                    \n\n                <!-- Avatar Column -->\n                <ng-container cdkColumnDef=\"avatar\" >\n                    <mat-header-cell *cdkHeaderCellDef mat-sort-header style=\"flex:0 0 80px;\">avatar</mat-header-cell>\n                    <mat-cell *cdkCellDef=\"let user\" style=\"flex:0 0 80px;\">\n                        <img class=\"avatar\" *ngIf=\"user.avatarUrl\" [src]=\"user.avatarUrl\">\n                        <img class=\"avatar\" *ngIf=\"!user.avatarUrl\" [src]=\"'assets/images/avatars/profile.jpg'\">\n                        \n                        \n                        <!-- <img class=\"avatar\"\n                                *ngIf=\"user.avatar\" [alt]=\"user.userName\"\n                                [src]=\"user.avatar\"/>\n                        <img *ngIf=\"!user.avatar\" [src]=\"'assets/images/ecommerce/product-image-placeholder.png'\"> -->\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Last Name Column -->\n                <ng-container matColumnDef=\"lastName\" >\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Prénom</mat-header-cell>\n                    <mat-cell *matCellDef=\"let user\">\n                        <p class=\"text-truncate\">{{user.lastName}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Last Name Column -->\n                <ng-container matColumnDef=\"firstName\" >\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Nom</mat-header-cell>\n                    <mat-cell *matCellDef=\"let user\">\n                        <p class=\"text-truncate\">{{user.firstName}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <!-- Last Name Column -->\n                <ng-container matColumnDef=\"userName\" >\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Pseudonyme</mat-header-cell>\n                    <mat-cell *matCellDef=\"let user\">\n                        <p class=\"text-truncate\">{{user.userName}}</p>\n                    </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"button\" >\n                    <mat-header-cell style=\"flex:0 0 30px;\"  *matHeaderCellDef ></mat-header-cell>\n                    <mat-cell style=\"flex:0 0 30px;\" *matCellDef=\"let user\">\n                            <button \n                                matTooltip=\"Détail\" \n                                mat-icon-button \n                                [routerLink]=\"['/apps/referential/users/', user.id]\"\n                            >\n                                <mat-icon>more_horiz</mat-icon>\n                            </button>\n                    </mat-cell>\n                </ng-container> \n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    \n                <mat-row *cdkRowDef=\"let user; columns: displayedColumns;\"\n                    class=\"user\"\n                    matRipple\n                >\n                </mat-row>\n            </mat-table>\n            <div *ngIf=\"(userTable$ | async).loader['datas'].loading\"\n                class=\"h-96 w-100-p\"\n                fxLayout=\"column\"\n                fxLayoutAlign=\"center center\">\n                <mat-spinner diameter=\"40\" color=\"accent\" fxLayout=\"row\"></mat-spinner>\n                <div style=\"color:#4285F3\" fxLayout=\"row\">chargement...</div>\n            </div> \n\n            <mat-paginator *ngIf=\"(userTableFilter$ | async).filters && (userTableFilter$ | async).filters.selected.pagination; let pagination\"\n                (page)=\"onPageChangeEvent($event)\"\n                [length]=\"pagination.totalItems\" \n                [pageSize]=\"pagination.nbItemsPerPage\"\n                [pageSizeOptions]=\"[15, 100, 200]\">\n            </mat-paginator>\n\n            <!-- *ngIf=\"dataSource.pagination$ | async; let pagination\" -->\n            <!-- <mat-paginator *ngIf=\"dataSource.pagination$ | async; let pagination\"\n                [length]=\"pagination.totalItems\" \n                [pageSize]=\"pagination.itemsPerPage\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n            </mat-paginator> -->\n        </div>\n            <!-- paginator.totalItems\n            pagination.itemsPerPage -->\n            <!-- <mat-paginator \n                [length]=\"matPagination?.length\" \n                [pageSize]=\"matPagination?.pageSize\"\n                [pageSizeOptions]=\"matPagination?.pageSizeOption\">\n            </mat-paginator> -->\n\n            <!-- <div *ngIf=\"dataSource.pagination$ | async; let pagination\" >\n                {{pagination.totalPages}}\n            </div> -->\n            <!-- ttttt {{dataSource.pagination$.totalPages | async}} -->\n\n            <!-- totot {{dataSource.loading$ | async}} -->\n        </div> \n        <!-- / CONTENT CARD -->\n    </div>\n    <!-- / CENTER -->\n</div>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs/Observable';\nimport { CollectionViewer } from '@angular/cdk/collections';\nimport { fuseAnimations } from '@fuse/animations';\nimport { UserTable } from 'app/main/_models/user.model';\nimport { UserTableFilterState } from 'app/main/_ngxs/user/user-list-filter/user-list-filter.state';\nimport { Select, Store } from '@ngxs/store';\nimport { UserTableState } from 'app/main/_ngxs/user/user-list/user-list.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterUserTable } from 'app/main/_models/filters/user.filter';\nimport { ChangeUserTableFilter } from 'app/main/_ngxs/user/user-list-filter/user-list-filter.action';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n// import { DataInfo } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'app-userList',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n  animations : fuseAnimations\n})\nexport class UserListComponent implements OnInit {\n  @Select(UserTableFilterState.get) userTableFilter$: Observable<FilterInfo<FilterUserTable>>;\n  @Select(UserTableState.get) userTable$: Observable<Datas<UserTable[]>>;\n  \n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  dataSource : UserDataSource;\n  filterUser: FilterUserTable;\n  displayedColumns = ['id','avatar','lastName','firstName','userName','button'];\n  \n  formSearch: FormGroup;\n\n\n  // dataSource : UserDataSource;\n  // displayedColumns = ['id','avatar','lastName','firstName','userName','button'];\n  // pagination: Pagination;\n\n  // matPagination: MatPagination;\n\n\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ViewChild(MatSort) sort: MatSort;\n  \n  constructor(\n    // private userService: UserService,\n    // private notificationService: NotificationsService,\n    // private route: ActivatedRoute,\n    private _formBuilder: FormBuilder,\n    private _store: Store\n  ) {\n      this.formSearch = this._formBuilder.group({\n        keyword: [null, []]\n      });\n\n      this.formSearch.get('keyword').valueChanges\n        .subscribe(val => {\n          // if(val && val.length>=2) {\n            this.filterUser.selected.keyword=val;\n            this.dataSource.load(this.filterUser);\n          // }\n        });\n\n      this.filterUser = new FilterUserTable();\n      this.dataSource = new UserDataSource(this._store);\n      this.dataSource.load(this.filterUser);\n      // this.filterAsif.selected.idImport=routeParams['idImport'];\n      // this._store.dispatch(new ChangeUserTableFilter(this.filterUser));\n  }\n\n  ngOnInit() {\n    // this.dataSource = new UserDataSource(this.userService, this.route);\n    // this.dataSource.loadUsers(new Pagination());\n    this.userTableFilter$.subscribe(userTableFilter=>{\n      this.filterUser = JSON.parse(JSON.stringify(userTableFilter.filters));\n    });\n\n  }\n\n  onPageChangeEvent($event) {\n    this.filterUser.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent($event): void {\n\n    this.filterUser.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n    this.filterUser.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterUser.selected.pagination.sortColumn = this.sort.active;\n    this.filterUser.selected.pagination.sortDirection = this.sort.direction;\n\n    this.dataSource.load(this.filterUser);\n  }\n\n  // detail(data) {\n  //   this.router.navigate(\n  //     [`apps/account-statement-imports/${this.filterAsif.selected.idImport}/account-statement-import-files/${data.id}/detail`]);\n  // }\n\n  // loadUsersPage() {\n  //   this.pagination.currentPage = this.paginator.pageIndex + 1;\n  //   this.pagination.itemsPerPage = this.paginator.pageSize;\n  //   this.pagination.sortColumn = this.sort.active;\n  //   this.pagination.sortDirection = this.sort.direction;\n\n  //   this.dataSource.loadUsers(this.pagination);\n  // }\n \n}\n\nexport class UserDataSource extends DataSource<Datas<UserTable>> {\n  @Select(UserTableState.get) asifTable$: Observable<Datas<UserTable[]>>;\n\n  constructor (\n    private _store: Store\n    ) {\n    super();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<any[]> {\n    return this.asifTable$.map(x=>x.datas);\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n  }\n  \n  clear()\n  {\n  }\n\n  load(filter: FilterUserTable) {\n    this._store.dispatch(new ChangeUserTableFilter(filter));\n    }\n  }\n\n\n\n// export class UserDataSource extends DataSource<IUser> {\n//   private usersSubject = new BehaviorSubject<IUser[]>([]);\n//   private paginationSubject = new BehaviorSubject<Pagination>(null);\n//   private loadingSubject = new BehaviorSubject<boolean>(false);\n\n//   public loading$ = this.loadingSubject.asObservable();\n//   public pagination$ = this.paginationSubject.asObservable();\n\n//   constructor (\n//     private userService: UserService,\n//     private route: ActivatedRoute\n//   ) {\n//     super();\n//   }\n\n//   connect(collectionViewer: CollectionViewer): Observable<IUser[]> {\n//       return this.usersSubject.asObservable();\n//   }\n\n//   disconnect(collectionViewer: CollectionViewer): void {\n//       this.usersSubject.complete();\n//       this.loadingSubject.complete();\n//       this.paginationSubject.complete();\n//   }\n  \n//   loadUsers(pagination: Pagination) {\n\n//     this.loadingSubject.next(true);\n\n//     this.userService.getUsers(pagination)\n//       .subscribe((res: PaginatedResult<IUser[]>) => {\n//         this.usersSubject.next(res.result);\n//         this.paginationSubject.next(res.pagination);\n//         this.loadingSubject.next(false);\n//       });\n\n//     }\n\n\n    \n// }","\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\nimport { NotificationsService } from 'angular2-notifications';\r\n// import { IUser } from '../../../../../_models/user.model';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/of';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UserService } from '../user.service';\r\nimport { IUser } from 'app/main/_models/user.model';\r\n\r\n@Injectable()\r\nexport class UserListResolver implements Resolve<IUser[]> {\r\npageSize = 5;\r\npageNumber = 1;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private notificationService: NotificationsService\r\n    ) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot): Observable<IUser[]> {\r\n        return null;\r\n        // return this.userService.getUsers(this.pageNumber, this.pageSize)\r\n        //     .catch(error => {\r\n        //         this.notificationService.error('Erreur de retour de données', error);\r\n        //         this.router.navigate(['']);\r\n\r\n        //         return Observable.of(null);\r\n        // })\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { UserListComponent } from './user-list/user-list.component';\n// import { SharedModule } from '../../../../../core/modules/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { UserService } from './user.service';\n// import { AuthGuard } from '../../../../../_guards/auth.guard';\nimport { UserDetailResolver } from './user-detail/user-detail.resolver';\nimport { UserListResolver } from './user-list/user-list.resolver';\n// import { PreventUnsavedChanges } from '../../../../../_guards/prevent-unsaved-changes.guard';\n// import { DialogGuardComponent } from '../../../../../_guards/dialog-guard.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { AvatarEditorComponent } from './avatar-editor/avatar-editor.component';\nimport { GMapModule } from '../../g-map/g-map.module';\nimport { AuthGuard } from 'app/_guards/auth.guard';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { PreventUnsavedChanges } from 'app/_guards/prevent-unsaved-changes.guard';\nimport { NgxsModule } from '@ngxs/store';\nimport { UserTableState } from 'app/main/_ngxs/user/user-list/user-list.state';\nimport { UserTableFilterState } from 'app/main/_ngxs/user/user-list-filter/user-list-filter.state';\nimport { AngularMaterialModule } from 'app/angular-material.module';\n\nconst routes = [\n  {\n      path     : '',\n      component: UserListComponent,\n      // resolve  : { users: UserListResolver },\n      canActivate: [AuthGuard]\n  },\n  {\n      path     : ':idUser',\n      component: UserDetailComponent,\n      resolve  : { user: UserDetailResolver },\n      canActivate: [AuthGuard]\n      // canDeactivate: [PreventUnsavedChanges]\n  }\n  // ,\n  // {\n  //     path      : '**',\n  //     redirectTo: ''\n  // }\n];\n\n@NgModule({\n  imports: [\n    FuseSharedModule,\n    AngularMaterialModule,\n    FileUploadModule,\n    GMapModule,\n    NgxsModule.forFeature([\n      UserTableState,\n      UserTableFilterState\n    ]),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    UserListComponent,\n    UserDetailComponent,\n    AvatarEditorComponent\n  ],\n  providers : [\n    UserService,\n    UserDetailResolver,\n    UserListResolver,\n    PreventUnsavedChanges\n  ]\n})\nexport class UserModule { }"],"sourceRoot":"webpack:///"}