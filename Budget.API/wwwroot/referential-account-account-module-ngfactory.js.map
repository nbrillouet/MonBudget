{"version":3,"sources":["./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","./src/app/main/_models/generics/combo.model.ts","./src/app/main/_models/generics/select.model.ts","./src/app/main/_ngxs/referential/account/account-detail/account-detail.action.ts","./src/app/main/_ngxs/referential/account/account-detail/account-detail.state.ts","./src/app/main/apps/referential/account/account-detail/account-detail.component.html","./src/app/main/apps/referential/account/account-detail/account-detail.component.ts","./src/app/main/apps/referential/account/account-detail/account-detail.validator.ts","./src/app/main/apps/referential/account/account-list/account-list.component.html","./src/app/main/apps/referential/account/account-list/account-list.component.ts","./src/app/main/apps/referential/account/account.module.ts"],"names":[],"mappings":"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","file":"referential-account-account-module-ngfactory.js","sourcesContent":["<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","import { ISelect, SelectNameValue } from \"./select.model\";\r\n\r\nexport class ComboSimple<T> {\r\n    list: T[];\r\n    selected: ISelect;\r\n\r\n    constructor() {\r\n        this.list=null;\r\n        this.selected=null;\r\n    }\r\n}\r\n\r\nexport class ComboMultiple<T> {\r\n    list: T[];\r\n    listSelected: ISelect[];\r\n\r\n    constructor() {\r\n        this.list=null;\r\n        this.listSelected=null;\r\n    }\r\n}\r\n\r\n// export class ComboMultipleValue<T,U> {\r\n//     list: ISelectValue<T>[];\r\n//     listSelected: ISelectValue<T>[];\r\n// }\r\n\r\nexport class ComboNameValueMultiple<T,U> {\r\n    list: T[];\r\n    listSelected: SelectNameValue<U>[];\r\n}\r\n\r\n","export interface ISelect {\r\n    id: number;\r\n    label: string;\r\n}\r\n\r\nexport interface ISelectGroup {\r\n    id: number;\r\n    label: string;\r\n    selects: ISelect[];\r\n}\r\n\r\nexport class SelectYear {\r\n    id:number;\r\n    label:string;\r\n    year:number;\r\n}\r\n\r\nexport interface ISelectColor {\r\n    id: number;\r\n    label: string;\r\n    color: string;\r\n}\r\n\r\nexport enum EnumSelectType {\r\n    empty = 0,\r\n    inconnu = 1,\r\n    inconnue = 11,\r\n    tous =2,\r\n    toutes=22,\r\n    aucun=3,\r\n    aucune=33\r\n}\r\n\r\nexport class SelectNameValue<T> {\r\n    id: number;\r\n    name: string;\r\n    value: T;\r\n}\r\n\r\nexport class SelectNameValueGroup<T> {\r\n    id: number;\r\n    name: string;\r\n    selects: SelectNameValue<T>[];\r\n}\r\n\r\n","import { IAccountForDetail } from \"app/main/_models/referential/account.model\";\r\nimport { ISelect } from \"app/main/_models/generics/select.model\";\r\n\r\nexport const ACCOUNT_FOR_DETAIL_LOAD = 'account-for-detail-load';\r\n// export const ACCOUNT_FOR_DETAIL_LOAD_SUCCESS = 'account-for-detail-load-success';\r\nexport const ACCOUNT_FOR_DETAIL_CLEAR = 'account-for-detail-clear';\r\nexport const ACCOUNT_FOR_DETAIL_BANK_FAMILY_CHANGE = 'account-for-detail-bank-family-change';\r\n// export const ACCOUNT_FOR_DETAIL_BANK_FAMILY_CHANGE_SUCCESS = 'account-for-detail-bank-family-change-success';\r\nexport const ACCOUNT_FOR_DETAIL_BANK_SUB_FAMILY_CHANGE = 'account-for-detail-bank-sub-family-change';\r\n// export const ACCOUNT_FOR_DETAIL_BANK_SUB_FAMILY_CHANGE_SUCCESS = 'account-for-detail-bank-sub-family-change-success';\r\n\r\n\r\nexport class LoadAccountForDetail {\r\n    static readonly type = ACCOUNT_FOR_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\n// export class LoadAccountForDetailSuccess {\r\n//     static readonly type = ACCOUNT_FOR_DETAIL_LOAD_SUCCESS;\r\n \r\n//     constructor(public payload: IAccountForDetail) { }\r\n// }\r\n\r\nexport class ClearAccountForDetail {\r\n    static readonly type = ACCOUNT_FOR_DETAIL_CLEAR;\r\n}\r\n\r\n//BankFamily CHANGE\r\nexport class AccountForDetailChangeBankFamily {\r\n    static readonly type = ACCOUNT_FOR_DETAIL_BANK_FAMILY_CHANGE;\r\n    constructor(public payload: ISelect) { }\r\n}\r\n\r\n// export class AccountForDetailChangeBankFamilySuccess {\r\n//     static readonly type = ACCOUNT_FOR_DETAIL_BANK_FAMILY_CHANGE_SUCCESS;\r\n \r\n//     constructor(public payload: ISelect[]) { }\r\n// }\r\n\r\n//BankFamily CHANGE\r\nexport class AccountForDetailChangeBankSubFamily {\r\n    static readonly type = ACCOUNT_FOR_DETAIL_BANK_SUB_FAMILY_CHANGE;\r\n    constructor(public payload: ISelect) { }\r\n}\r\n\r\n// export class AccountForDetailChangeBankSubFamilySuccess {\r\n//     static readonly type = ACCOUNT_FOR_DETAIL_BANK_SUB_FAMILY_CHANGE_SUCCESS;\r\n \r\n//     constructor(public payload: ISelect[]) { }\r\n// }","import { ReferentialService } from \"app/main/_services/Referential/referential.service\";\r\nimport { IAccountForDetail } from \"app/main/_models/referential/account.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadAccountForDetail, ClearAccountForDetail, AccountForDetailChangeBankFamily, AccountForDetailChangeBankSubFamily } from \"./account-detail.action\";\r\nimport { ComboSimple } from \"app/main/_models/generics/combo.model\";\r\nimport { ISelect, EnumSelectType } from \"app/main/_models/generics/select.model\";\r\nimport { LoaderState } from \"app/main/_ngxs/_base/loader-state\";\r\nimport { Datas } from \"app/main/_models/generics/detail-info.model\";\r\n\r\nexport class AccountForDetailStateModel extends Datas<IAccountForDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet accountForDetailStateModel = new AccountForDetailStateModel();\r\n\r\n@State<AccountForDetailStateModel>({\r\n    name: 'AccountForDetail',\r\n    defaults : accountForDetailStateModel\r\n})\r\n\r\nexport class AccountForDetailState extends LoaderState {\r\n\r\n    constructor(\r\n        private _referentialService: ReferentialService\r\n        ) {\r\n            super();\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: AccountForDetailStateModel) {\r\n\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadAccountForDetail)\r\n    loadAccountForDetail(context: StateContext<AccountForDetailStateModel>, action: LoadAccountForDetail) {\r\n        this.loading(context,'datas');\r\n        \r\n        const state = context.getState();\r\n        state.datas = null;\r\n        context.patchState(state);\r\n\r\n        this._referentialService.accountService.GetForDetail(action.payload)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas = result;\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'datas');\r\n            });\r\n\r\n    }\r\n\r\n    // @Action(LoadAccountForDetailSuccess)\r\n    // loadSuccess(context: StateContext<AccountForDetailStateModel>, action: LoadAccountForDetailSuccess) {\r\n    //     let state = context.getState();\r\n    //     state.datas = action.payload;\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    @Action(ClearAccountForDetail)\r\n    clear(context: StateContext<AccountForDetailStateModel>) {\r\n        return context.setState(new AccountForDetailStateModel());\r\n    }\r\n\r\n    //====================================\r\n    //          BankFamily\r\n    //====================================\r\n    @Action(AccountForDetailChangeBankFamily)\r\n    accountForDetailChangeBankFamily(context: StateContext<AccountForDetailStateModel>, action: AccountForDetailChangeBankFamily) {\r\n        this.loading(context,'bankFamily');\r\n        \r\n        const state = context.getState();\r\n        state.datas.bankFamily.selected = action.payload;\r\n        state.datas.bankSubFamily = new ComboSimple<ISelect>();\r\n        context.patchState(state);\r\n\r\n        this._referentialService.bankSubFamilyService.GetSelectList(action.payload.id,EnumSelectType.inconnu)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.bankSubFamily.list = result;\r\n                state.datas.bankSubFamily.selected = result[0];\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'bankFamily');\r\n            });\r\n    }\r\n\r\n    // @Action(AccountForDetailChangeBankFamilySuccess)\r\n    // accountForDetailChangeBankFamilySuccess(context: StateContext<AccountForDetailStateModel>, action: AccountForDetailChangeBankFamilySuccess) {\r\n\r\n    //     let state = context.getState();\r\n    //     state.datas.bankSubFamily.list = action.payload;\r\n    //     state.datas.bankSubFamily.selected = action.payload[0];\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    //====================================\r\n    //          BankSubFamily\r\n    //====================================\r\n    @Action(AccountForDetailChangeBankSubFamily)\r\n    accountForDetailChangeBankSubFamily(context: StateContext<AccountForDetailStateModel>, action: AccountForDetailChangeBankSubFamily) {\r\n        this.loading(context,'bankSubFamily');\r\n        \r\n        const state = context.getState();\r\n        state.datas.bankSubFamily.selected = action.payload;\r\n        state.datas.bankAgency = new ComboSimple<ISelect>();\r\n        context.patchState(state);\r\n\r\n        this._referentialService.bankAgencyService.GetSelectList(action.payload.id,EnumSelectType.inconnu)\r\n            .subscribe(result=> {\r\n                let state = context.getState();\r\n                state.datas.bankAgency.list = result;\r\n                state.datas.bankAgency.selected = result[0];\r\n                context.patchState(state);\r\n\r\n                this.loaded(context,'bankSubFamily');\r\n            });\r\n    }\r\n\r\n    // @Action(AccountForDetailChangeBankSubFamilySuccess)\r\n    // accountForDetailChangeBankSubFamilySuccess(context: StateContext<AccountForDetailStateModel>, action: AccountForDetailChangeBankSubFamilySuccess) {\r\n\r\n    //     let state = context.getState();\r\n    //     state.datas.bankAgency.list = action.payload;\r\n    //     state.datas.bankAgency.selected = action.payload[0];\r\n\r\n    //     context.patchState(state);\r\n    // }\r\n\r\n    \r\n    \r\n}","<div id=\"product\" class=\"page-layout carded fullwidth\" fusePerfectScrollbar>\n\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent\"></div>\n  <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n    \n\n            <!-- HEADER -->\n            <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n                <!-- APP TITLE -->\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                    <button class=\"mr-0 mr-sm-16\" mat-icon-button\n                        [routerLink]=\"'/apps/referential/accounts'\"\n                        >\n                        <mat-icon>arrow_back</mat-icon>\n                    </button>\n\n                    <div class=\"product-image mr-8 mr-sm-16\" *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                        <mat-icon>account_balance</mat-icon>  \n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\n                        *fuseIfOnDom [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                        <div class=\"h2\" *ngIf=\"formLoaded && accountDetail && accountDetail.id!=0\">\n                            {{accountDetail.number}}  {{accountDetail.label}}\n                        </div>\n                        <div class=\"h2\" *ngIf=\"formLoaded && accountDetail && accountDetail.id==0\">\n                            Nouveau compte\n                        </div>\n                        <div class=\"subtitle secondary-text\">\n                            <span>Details compte bancaire</span>\n                        </div>\n                    </div>\n                </div>\n\n                <button mat-raised-button *ngIf=\"formLoaded && accountDetail\"\n                class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                [disabled]= \"accountForm.invalid || accountForm.pristine\"\n                (click)=\"save()\"\n                >\n                    <span>ENREGISTRER</span>\n                </button>\n\n                <!-- <button mat-raised-button\n                        class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                        [disabled]=\"accountForm.invalid\"\n                        *ngIf=\"pageType ==='new'\" (click)=\"create(accountForm)\">\n                    <span>AJOUTER</span>\n                </button>\n\n                <button mat-raised-button\n                        class=\"save-product-button mat-white-bg mt-16 mt-sm-0\"\n                        [disabled]=\"accountForm.invalid || accountForm.pristine\"\n                        *ngIf=\"pageType ==='edit'\" (click)=\"update(accountForm)\">\n                    <span>SAUVEGARDER</span>\n                </button> -->\n            </div>\n            <!-- / HEADER -->\n\n      <!-- CONTENT CARD -->\n      <div class=\"content-card white\">\n\n          <!-- CONTENT -->\n          <div class=\"content\">\n              <form name=\"accountForm\" \n                *ngIf=\"formLoaded && accountDetail\" \n                [formGroup]=\"accountForm\" \n                class=\"product w-100-p\" \n                fxLayout=\"column\" fxFlex>\n                    <mat-tab-group>\n\n                      <mat-tab label=\"Agence bancaire\">\n                          <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                                    <mat-label>Groupe Bancaire</mat-label>\n                                    <mat-select formControlName=\"bankFamily\" placeholder=\"Groupe Bancaire\" [compareWith]=\"compareObjects\" >\n                                        <mat-option *ngFor=\"let item of accountDetail.bankFamily.list\" [value]=\"item\">\n                                            {{ item.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                                    <mat-label>Caisse</mat-label>\n                                    <mat-select formControlName=\"bankSubFamily\" placeholder=\"Caisse\" [compareWith]=\"compareObjects\" >\n                                        <mat-option *ngFor=\"let item of accountDetail.bankSubFamily.list\" [value]=\"item\">\n                                            {{ item.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                                    <mat-label>Agence</mat-label>\n                                    <mat-select formControlName=\"bankAgency\" placeholder=\"Agence\" [compareWith]=\"compareObjects\" >\n                                        <mat-option *ngFor=\"let item of accountDetail.bankAgency.list\" [value]=\"item\">\n                                            {{ item.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                 \n                          </div>\n                      </mat-tab>\n                      <mat-tab label=\"Informations\">\n                        <div class=\"tab-content p-24\" fusePerfectScrollbar>\n                            <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\" >\n                                <mat-label>Type de compte</mat-label>\n                                <mat-select formControlName=\"accountType\" placeholder=\"Type de compte\" [compareWith]=\"compareObjects\" >\n                                    <mat-option *ngFor=\"let item of accountDetail.accountType.list\" [value]=\"item\">\n                                        {{ item.label }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                <mat-label>Libellé du compte</mat-label>\n                                <input matInput\n                                    name=\"label\"\n                                    formControlName=\"label\"\n                                    placeholder=\"Libellé du compte\">\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                <mat-label>Numéro de compte</mat-label>\n                                <input matInput\n                                    name=\"number\"\n                                    formControlName=\"number\"\n                                    placeholder=\"Numéro de compte\">\n                            </mat-form-field>\n\n                            <div fxLayout=\"row\"  fxLayoutAlign=\"start start\">\n                                \n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Montant de départ</mat-label>\n                                    <input matInput\n                                        type=\"number\"\n                                        name=\"startAmount\"\n                                        formControlName=\"startAmount\"\n                                        placeholder=\"Montant de départ\"\n                                    >\n                                    <mat-icon matSuffix>euro_symbol</mat-icon>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\n                                    <mat-label>Seuil d'alerte</mat-label>\n                                    <input matInput\n                                        type=\"number\"\n                                        name=\"alertThreshold\"\n                                        formControlName=\"alertThreshold\"\n                                        placeholder=\"Seuil d'alerte\"\n                                    >\n                                    <mat-icon matSuffix>euro_symbol</mat-icon>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                      </mat-tab>\n                  </mat-tab-group>\n              </form>\n\n          </div>\n      </div>\n\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { fuseAnimations } from '@fuse/animations';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { ReferentialService } from 'app/main/_services/Referential/referential.service';\nimport { IAccountForDetail } from 'app/main/_models/referential/account.model';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { AccountForDetailState } from 'app/main/_ngxs/referential/account/account-detail/account-detail.state';\nimport { LoadAccountForDetail, ClearAccountForDetail, AccountForDetailChangeBankFamily, AccountForDetailChangeBankSubFamily } from 'app/main/_ngxs/referential/account/account-detail/account-detail.action';\nimport { ValidateIsUnknown } from './account-detail.validator';\nimport { Datas } from 'app/main/_models/generics/detail-info.model';\n\n@Component({\n  selector: 'account-detail',\n  templateUrl: './account-detail.component.html',\n  styleUrls: ['./account-detail.component.scss'],\n  animations   : fuseAnimations\n})\nexport class AccountDetailComponent implements OnInit {\n@Select(AccountForDetailState.get) accountDetail$: Observable<Datas<IAccountForDetail>>;\n\nfirstLoad: boolean=true;\nformLoaded: boolean;\naccountDetail: IAccountForDetail;\naccountForm: FormGroup;\n\n// account: IAccountForDetail;\nbankAgencies: ISelect[];\naccountTypes: ISelect[];\npageType: string;\n\n\n  constructor(\n    private _activatedRoute : ActivatedRoute,\n    private _formBuilder: FormBuilder,\n    private _store: Store,\n    private _referentialService: ReferentialService,\n    private _notificationService: NotificationsService,\n  ) {\n    this.accountDetail$.subscribe(accountDetail=>{\n\n      if(accountDetail.loader['datas'].loaded) {\n\n        this.accountDetail = JSON.parse(JSON.stringify(accountDetail.datas));\n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n      // this._activatedRoute.data.subscribe(data => {\n      //   this.account = data['account'];\n      //   this.pageType=this.account.id==0 ? 'new' : 'edit';\n      //   this.accountForm = this.createAccountForm();\n\n      //   this.loadBankAgencyList();\n      //   this.loadAccountTypeList();\n\n      // })\n   }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n\n      let idAccount = routeParams['idAccount']=='new' ? 0 : routeParams['idAccount'];\n      this._store.dispatch(new LoadAccountForDetail(idAccount));\n    });\n  }\n\n  createForms() {\n    this.accountForm = \n        this._formBuilder.group({\n            id              : [this.accountDetail.id,[Validators.required]],\n            number          : [this.accountDetail.number,[Validators.required]],\n            label           : [this.accountDetail.label,[Validators.required]],\n            bankFamily      : [this.accountDetail.bankFamily.selected,[Validators.required, ValidateIsUnknown]],\n            bankSubFamily   : [this.accountDetail.bankSubFamily.selected,[Validators.required, ValidateIsUnknown]],\n            bankAgency      : [this.accountDetail.bankAgency.selected,[Validators.required, ValidateIsUnknown]],\n            startAmount     : [this.accountDetail.startAmount,[Validators.required]],\n            accountType     : [this.accountDetail.accountType.selected,[Validators.required, ValidateIsUnknown]],   \n            alertThreshold  : [this.accountDetail.alertThreshold,[Validators.required]]\n        });\n    \n    this.accountForm.get('bankFamily').valueChanges\n    .subscribe(val => {\n      this._store.dispatch(new AccountForDetailChangeBankFamily(val));\n      this.accountForm.controls['bankSubFamily'].setValue({id:1,label:'INCONNU'});\n    });\n\n    this.accountForm.get('bankSubFamily').valueChanges\n    .subscribe(val => {\n      this._store.dispatch(new AccountForDetailChangeBankSubFamily(val));\n      this.accountForm.controls['bankAgency'].setValue({id:1,label:'INCONNU'});\n    });\n    \n    this.accountForm.valueChanges.subscribe(val=>{\n      this.accountDetail.id = val;\n\n      //TODO synchronize\n      // this._store.dispatch(new LoadAccountForDetailSuccess(this.accountDetail));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearAccountForDetail());\n  }\n\n  save() {\n    this._referentialService.accountService.saveDetail(this.accountDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `La catégorie d'opération est enregistrée`);\n          // this._store.dispatch(new LoadOtfTableDatas(this.filterOtf.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n\n\n\n  // loadBankAgencyList() {\n  //   this._referentialService.bankAgencyService.GetSelectList(-1)\n  //       .subscribe(response => {\n  //         this.bankAgencies = response;\n  //       });\n  // }\n\n  // loadAccountTypeList() {\n  //   this._referentialService.accountTypeService.GetSelectList(EnumSelectType.aucun)\n  //       .subscribe(response => {\n  //         this.accountTypes = response;\n  //       });\n  // }\n\n  // update({ value, valid }: { value: IAccountForDetail, valid: boolean }) {\n  //   this.bindAccount(value);   \n \n  //   this._referentialService.accountService.update(this.account)\n  //     .subscribe(next => {\n  //       this.accountForm.reset(this.account);\n  //       this._notificationService.success('Sauvegarde réussi', 'Compte enregistré');\n  //     }, error => {\n  //       this._notificationService.error('Echec sauvegarde', error);\n  //     })\n\n  // }\n\n  // create({ value, valid }: { value: IAccountForDetail, valid: boolean }) {\n  //   this.bindAccount(value);   \n\n  //   let user: IUser = JSON.parse(localStorage.getItem('user'));\n\n  //   this._referentialService.accountService.create(user.id,this.account)\n  //     .subscribe(next => {\n  //       this.accountForm.reset(this.account);\n  //       this._notificationService.success('Sauvegarde réussi', 'Compte enregistré');\n  //     }, error => {\n  //       this._notificationService.error('Echec sauvegarde', error);\n  //     })\n  // }\n\n  // bindAccount(value: IAccountForDetail) {\n  //   this.account.id=value.id;\n  //   this.account.bankAgency=value.bankAgency;\n  //   this.account.accountType=value.accountType;\n  //   this.account.label=value.label;\n  //   this.account.number=value.number;\n  //   this.account.startAmount=value.startAmount;\n  //   this.account.alertThreshold=value.alertThreshold;\n  // }\n\n  // compareObjects(o1: any, o2: any) {\n  //   if(o1.label == o2.label && o1.id == o2.id )\n  //   return true;\n  //   else return false\n  // }\n\n}\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { ISelect } from \"app/main/_models/generics/select.model\";\r\n\r\nexport function ValidateIsUnknown(control: AbstractControl) {\r\n    \r\n    var select=<ISelect>control.value;\r\n\r\n    if (select==null ||select.label=='INCONNU' || select.label=='INCONNUE') {\r\n        return { isUnknown: true };\r\n    }\r\n    return null;\r\n  }","\n<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\n  <!-- TOP BACKGROUND -->\n  <div class=\"top-bg accent header-1-background\"></div>\n  <!-- / TOP BACKGROUND -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- HEADER -->\n        <div class=\"header-2-background accent p-12\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n            <!-- APP TITLE -->\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n                    <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n                        account_balance\n                    </mat-icon>\n                    \n                    <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                        Comptes bancaires\n                    </span>\n                </div>\n            </div>\n\n            <!-- BUTTON -->\n            <div fxflex fxLayoutAlign=\"end center\">\n                <button mat-raised-button\n                        class=\"save-product-button white mt-16 mt-sm-0\"\n                        [routerLink]=\"'/apps/referential/accounts/new'\">\n                    <span>AJOUTER UN COMPTE</span>\n                </button>\n            </div>\n        </div>\n\n    \n    \n    \n    \n    \n    \n    \n    <div fxLayout='column' class=\"cards\">\n        <div *ngFor=\"let bankAgency of bankAgencies\">\n            <mat-card class=\"example-card\" >\n                <mat-card-header >\n                    <img mat-card-avatar src=\"assets/images/{{bankAgency.bankFamily.logoClassName}}\"   alt=\"bank agency logo\">\n                    <mat-card-title>{{bankAgency.bankSubFamily.labelLong}}</mat-card-title>\n                    <mat-card-subtitle>{{bankAgency.label}}</mat-card-subtitle>\n                </mat-card-header>\n                \n                <mat-card-content>\n                    <div fxLayout='column' >\n\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"background-color: #EDEEEF;color: #1F1F1F;\" >\n                            <div fxflex = \"0%\" [hidden]=\"true\"></div>\n                            <div fxFlex = \"20%\">Numéro de compte</div>\n                            <div fxFlex = \"20%\">Nom du compte</div>\n                            <div fxFlex = \"20%\"><mat-icon matTooltip=\"compte joint\">link</mat-icon></div>\n                        </div>\n\n                        <div fxLayout='column' *ngFor=\"let account of bankAgency.accounts;last as last\">\n                            <div fxLayout='row' fxLayoutAlign=\"start center\" >\n                                <div  fxflex = \"0%\" [hidden]=\"true\">{{account.id}}</div>\n                                <div  fxFlex = \"20%\" >{{account.number}}</div>\n                                <div  fxFlex = \"20%\" >{{account.label}}</div>\n                                <div  fxFlex = \"20%\" >\n                                    <mat-icon (mouseover)=\"visualizeLinkedUser(account)\" matTooltip=\"{{linkUserToolTip}}\" *ngIf=\"account.linkedUsers.length>0\">link</mat-icon>\n                                </div>\n                                <div  fxFlex></div>\n                                <div  fxFlex = \"30px\" fxLayoutAlign=\"right center\">\n                                        <button  matTooltip=\"Supprimer\" \n                                            mat-icon-button\n                                            (click)=\"delete(account)\"\n                                        >\n                                            <mat-icon>delete</mat-icon>\n                                        </button>\n                                </div>\n                                <div  fxFlex = \"30px\" fxLayoutAlign=\"right center\">\n                                    <button  \n                                        matTooltip=\"Détail\" \n                                        mat-icon-button\n                                        [routerLink]=\"['/apps/referential/accounts/', account.id]\">\n                                        <mat-icon>more_horiz</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            <div class=\"list-divider\"></div>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n            <br>\n        </div>\n    </div>\n            \n\n    <!-- </div>  -->\n\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { NotificationsService } from 'angular2-notifications';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { IUser } from 'app/main/_models/user.model';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ReferentialService } from 'app/main/_services/Referential/referential.service';\nimport { UserDetailState } from 'app/main/_ngxs/user/user-detail/user-detail.state';\nimport { IBankAgencyAccounts } from 'app/main/_models/referential/bank-agency.model';\nimport { IAccountForDetail, IAccount } from 'app/main/_models/referential/account.model';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.scss'],\n  animations   : fuseAnimations\n})\nexport class AccountListComponent implements OnInit {\n@Select(UserDetailState.getUser) user$: Observable<IUser>;\n\nbankAgencies: IBankAgencyAccounts[];\ncheckboxes: number[]=[];\nhasSelectedAccounts: boolean = false;\nlinkUserToolTip: string;\n\nconfirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n  constructor(\n    public dialog: MatDialog,\n    private _referentialService: ReferentialService,\n    private notificationService: NotificationsService\n  ) {\n \n\n    this.user$.subscribe((user:IUser) => {\n      if(user) {\n\n          this.bankAgencies = user.bankAgencies;\n      }\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n  onSelectedChange($event,idAccount:number)\n  {\n    if($event.checked) {\n      this.checkboxes.push(idAccount);\n    }\n    else\n    {\n      let index = this.checkboxes.indexOf(idAccount);\n      if (index > -1) {\n        this.checkboxes.splice(index, 1);\n      }\n    }\n    this.hasSelectedAccounts = this.checkboxes.length>0;\n\n  }\n\n  delete (account: IAccountForDetail) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer ce compte?';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n        if (result)\n        {\n            let user: IUser = JSON.parse(localStorage.getItem('user'));\n            this._referentialService.accountService.delete(user.id,account)\n            .subscribe(next => {\n              this.deleteFromBankAgencies(account.id);\n              this.notificationService.success('Suppression réussi', 'Compte supprimé');\n            }, error => {\n              this.notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n  detail(account: IAccount) {\n    \n  }\n\n  visualizeLinkedUser(account: IAccountForDetail){\n    let label : string = 'Utilisateur(s) associé(s) à ce compte:\\n';\n    for(let linkedUser of account.linkedUsers) {\n      label = label  + `${linkedUser.label} \\n`;\n    }\n\n    this.linkUserToolTip=label;\n  }\n\n  deleteFromBankAgencies(idAccount:number) {\n        \n    for(let bankAgency of this.bankAgencies)\n    {\n      var index = bankAgency.accounts.findIndex(x=>x.id==idAccount);\n      if (index > -1) {\n        bankAgency.accounts.splice(index, 1);\n        break;\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../../../../../core/modules/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { AccountListComponent } from './account-list/account-list.component';\n// import { AuthGuard } from '../../../../../_guards/auth.guard';\n// import { AccountListResolver } from './account-list/account-list.resolver';\nimport { AccountDetailComponent } from './account-detail/account-detail.component';\n// import { AccountDetailResolver } from './account-detail/account-detail.resolver';\nimport { AuthGuard } from 'app/_guards/auth.guard';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule } from '@fuse/components';\nimport { NgxsModule } from '@ngxs/store';\nimport { AccountForDetailState } from 'app/main/_ngxs/referential/account/account-detail/account-detail.state';\nimport { AngularMaterialModule } from 'app/angular-material.module';\n\nconst routes = [\n  {\n      path     : '',\n      component: AccountListComponent,\n      // resolve  : { banks: AccountListResolver },\n      canActivate: [AuthGuard]\n  }\n  ,\n  {\n      path     : ':idAccount',\n      component: AccountDetailComponent,\n      // resolve  : { account: AccountDetailResolver },\n      canActivate: [AuthGuard]\n  }\n  \n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FuseSharedModule,\n    AngularMaterialModule,\n    FuseConfirmDialogModule,\n    RouterModule.forChild(routes),\n    NgxsModule.forFeature([\n      AccountForDetailState\n\n  ])\n  ],\n  declarations: [\n    AccountListComponent,\n    AccountDetailComponent\n  ],\n  providers : [\n    // AccountListResolver,\n    // AccountDetailResolver\n  ]\n})\nexport class AccountModule { }\n"],"sourceRoot":"webpack:///"}