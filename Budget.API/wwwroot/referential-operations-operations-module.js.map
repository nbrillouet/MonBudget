{"version":3,"sources":["webpack:///./src/app/main/_models/filters/operation-type-family.filter.ts","webpack:///./src/app/main/_models/filters/operation-type.filter.ts","webpack:///./src/app/main/_models/filters/operation.filter.ts","webpack:///./src/app/main/_models/generics/detail-info.model.ts","webpack:///./src/app/main/_models/generics/filter.info.model.ts","webpack:///./src/app/main/_models/generics/loading-info.model.ts","webpack:///./src/app/main/_models/generics/table-info.model.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action.ts","webpack:///./src/app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-detail/operation-detail.action.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-detail/operation-detail.state.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.action.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-list/operation-list.action.ts","webpack:///./src/app/main/_ngxs/referential/operation/operation-list/operation-list.state.ts","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-detail/operation-type-family-detail.component.html","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-detail/operation-type-family-detail.component.scss","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-detail/operation-type-family-detail.component.ts","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-list/operation-type-family-list.component.html","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-list/operation-type-family-list.component.scss","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family-list/operation-type-family-list.component.ts","webpack:///./src/app/main/apps/referential/operations/operation-type-family/operation-type-family.service.ts","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-detail/operation-type-detail.component.html","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-detail/operation-type-detail.component.scss","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-detail/operation-type-detail.component.ts","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-list/operation-type-list.component.html","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-list/operation-type-list.component.scss","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type-list/operation-type-list.component.ts","webpack:///./src/app/main/apps/referential/operations/operation-type/operation-type.service.ts","webpack:///./src/app/main/apps/referential/operations/operation/operation-detail/operation-detail.component.html","webpack:///./src/app/main/apps/referential/operations/operation/operation-detail/operation-detail.component.scss","webpack:///./src/app/main/apps/referential/operations/operation/operation-detail/operation-detail.component.ts","webpack:///./src/app/main/apps/referential/operations/operation/operation-list/operation-list.component.html","webpack:///./src/app/main/apps/referential/operations/operation/operation-list/operation-list.component.scss","webpack:///./src/app/main/apps/referential/operations/operation/operation-list/operation-list.component.ts","webpack:///./src/app/main/apps/referential/operations/operations-main-tab/operations-main-tab.component.html","webpack:///./src/app/main/apps/referential/operations/operations-main-tab/operations-main-tab.component.scss","webpack:///./src/app/main/apps/referential/operations/operations-main-tab/operations-main-tab.component.ts","webpack:///./src/app/main/apps/referential/operations/operations-main/operations-main.component.html","webpack:///./src/app/main/apps/referential/operations/operations-main/operations-main.component.scss","webpack:///./src/app/main/apps/referential/operations/operations-main/operations-main.component.ts","webpack:///./src/app/main/apps/referential/operations/operations.module.ts"],"names":[],"mappings":"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","file":"referential-operations-operations-module.js","sourcesContent":["import { Pagination } from \"../pagination.model\";\r\nimport { ISelect } from \"../generics/select.model\";\r\nimport { IUserForGroup } from \"../user.model\";\r\n\r\nexport class FilterOtfTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    movement: ISelect = null;\r\n\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOtfTable {\r\n    movements: ISelect[];\r\n\r\n    selected : FilterOtfTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOtfTableSelected();\r\n    }\r\n}","import { IUserForGroup } from \"../user.model\";\r\nimport { Pagination } from \"../pagination.model\";\r\nimport { ISelect } from \"../generics/select.model\";\r\n\r\nexport class FilterOtTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    otf: ISelect = null;\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOtTable {\r\n    otfs: ISelect[];\r\n    selected : FilterOtTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOtTableSelected();\r\n    }\r\n}","import { ISelect, ISelectGroup } from \"../generics/select.model\";\r\nimport { IUserForGroup } from \"../user.model\";\r\nimport { Pagination } from \"../pagination.model\";\r\n\r\nexport class FilterOperation {\r\n    operationMethod: ISelect;\r\n    operationType: ISelect;\r\n}\r\n\r\nexport class FilterOperationTableSelected {\r\n    user: IUserForGroup = null;\r\n    label: string = null;\r\n    operationMethods: ISelect[] = null;\r\n    operationTypes: ISelect[] = null;\r\n    pagination: Pagination = new Pagination();\r\n}\r\n\r\nexport class FilterOperationTable {\r\n    operationTypes: ISelectGroup[];\r\n    operationMethods: ISelect[];\r\n    selected : FilterOperationTableSelected;\r\n\r\n    constructor () {\r\n        this.selected = new FilterOperationTableSelected();\r\n    }\r\n}","import { LoadingInfo } from \"./loading-info.model\";\r\n\r\nexport class DetailInfo<T,U>  {\r\n    dataInfos : DataInfo<T>;\r\n    filter: U;\r\n\r\n    constructor () {\r\n        this.dataInfos = new DataInfo<T>();\r\n    }\r\n}\r\n\r\nexport class DataInfo<T> {\r\n    datas: T;\r\n    loadingInfo : LoadingInfo;\r\n\r\n    constructor(){\r\n        this.datas = null;\r\n        this.loadingInfo = new LoadingInfo();\r\n    }\r\n}","import { LoadingInfo } from \"./loading-info.model\";\r\n\r\n// interface NoParamConstructor<T> {\r\n//     new (): T;\r\n// }\r\n\r\n// export class FilterInfo<T> {\r\n//     filters: T;\r\n//     loadingInfo : LoadingInfo;\r\n\r\n//     constructor(filters: NoParamConstructor<T>){\r\n\r\n//         this.filters = new filters();\r\n//         this.loadingInfo = new LoadingInfo();\r\n//     }\r\n// }\r\n\r\nexport class FilterInfo<T> {\r\n    filters: T;\r\n    loadingInfo : LoadingInfo;\r\n\r\n    constructor(TCreator: { new (): T; }){\r\n\r\n        this.filters = new TCreator();\r\n        this.loadingInfo = new LoadingInfo();\r\n    }\r\n}","export interface ILoadingInfo {\r\n    loading: boolean;\r\n    loaded: boolean;\r\n}\r\n\r\nexport class LoadingInfo implements ILoadingInfo {\r\n    loading: boolean;\r\n    loaded: boolean;\r\n\r\n    constructor() {\r\n        this.loading = false;\r\n        this.loaded = false;\r\n    }\r\n}","import { LoadingInfo } from \"./loading-info.model\";\r\nimport { Pagination } from \"../pagination.model\";\r\n\r\nexport class TableInfo<T,U>  {\r\n    dataInfos : DataInfos<T>;\r\n    filter: U;\r\n\r\n    constructor () {\r\n        this.dataInfos = new DataInfos<T>();\r\n    }\r\n}\r\n\r\nexport class DataInfos<T> {\r\n    datas: T[];\r\n    // pagination: Pagination;\r\n    loadingInfo : LoadingInfo;\r\n\r\n    constructor(){\r\n        this.datas = null;\r\n        this.loadingInfo = new LoadingInfo();\r\n    }\r\n}\r\n\r\n\r\n","import { OtfDetail } from \"app/main/_models/referential/operation-type-family.model\";\r\n\r\n\r\nexport const OTF_DETAIL_LOAD = 'otf-detail-load';\r\nexport const OTF_DETAIL_LOAD_SUCCESS = 'otf-detail-load-success';\r\nexport const OTF_DETAIL_CLEAR = 'otf-detail-clear';\r\n\r\nexport class LoadOtfDetail {\r\n    static readonly type = OTF_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\nexport class LoadOtfDetailSuccess {\r\n    static readonly type = OTF_DETAIL_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: OtfDetail) { }\r\n}\r\n\r\nexport class ClearOtfDetail {\r\n    static readonly type = OTF_DETAIL_CLEAR;\r\n}\r\n\r\n","import { OtfDetail } from \"app/main/_models/referential/operation-type-family.model\";\r\nimport { DataInfo } from \"app/main/_models/generics/detail-info.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { ReferentialService } from \"app/main/_services/Referential/referential.service\";\r\nimport { LoadOtfDetail, LoadOtfDetailSuccess, ClearOtfDetail } from \"./operation-type-family-detail.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\n\r\n\r\nexport class OtfDetailStateModel extends DataInfo<OtfDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet otfDetailStateModel = new OtfDetailStateModel();\r\n\r\n@State<OtfDetailStateModel>({\r\n    name: 'OtfDetail',\r\n    defaults : otfDetailStateModel\r\n})\r\n\r\nexport class OtfDetailState {\r\n\r\n    constructor(\r\n        private _otfService: OtfService,\r\n        private _referentialService: ReferentialService\r\n        // private _store: Store\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtfDetailStateModel) {\r\n    \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtfDetail)\r\n    loadOtfDetail(context: StateContext<OtfDetailStateModel>, action: LoadOtfDetail) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.datas = null;\r\n        \r\n        context.patchState(state);\r\n        this._otfService.getOtfDetail(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOtfDetailSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOtfDetailSuccess)\r\n    loadSuccess(context: StateContext<OtfDetailStateModel>, action: LoadOtfDetailSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload;\r\n\r\n        context.patchState(state);\r\n    }\r\n\r\n    @Action(ClearOtfDetail)\r\n    clear(context: StateContext<OtfDetailStateModel>) {\r\n        return context.setState(new OtfDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","import { FilterOtfTable, FilterOtfTableSelected } from \"app/main/_models/filters/operation-type-family.filter\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\n\r\n// import { Pagination } from \"app/main/_models/pagination.model\";\r\n// import { FilterAsTable, FilterAsTableSelected } from \"app/main/_models/filters/account-statement.filter\";\r\n\r\nexport const OTF_TABLE_FILTER_LOAD = 'otf-table-filter-load';\r\nexport const OTF_TABLE_FILTER_LOAD_SUCCESS = 'otf-table-filter-load-success';\r\nexport const OTF_TABLE_FILTER_CHANGE = 'otf-table-filter-change';\r\nexport const OTF_TABLE_FILTER_UPDATE_PAGINATION = 'otf-table-filter-update-pagination';\r\n\r\nexport class LoadOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOtfTable) { }\r\n}\r\n\r\nexport class LoadOtfTableFilterSuccess {\r\n    static readonly type = OTF_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: FilterOtfTable) { }\r\n}\r\n\r\nexport class ChangeOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOtfTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOtfTableFilter {\r\n    static readonly type = OTF_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterOtfTable, FilterOtfTableSelected } from \"app/main/_models/filters/operation-type-family.filter\";\r\nimport { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtfTableFilter, LoadOtfTableFilterSuccess, ChangeOtfTableFilter, UpdatePaginationOtfTableFilter } from \"./operation-type-family-list-filter.action\";\r\nimport { LoadOtfTableDatas } from \"../operation-type-family-list/operation-type-family-list.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\n\r\n\r\nexport class OtfTableFilterStateModel extends FilterInfo<FilterOtfTable> {\r\n    constructor () {\r\n        super(FilterOtfTable);\r\n    }\r\n}\r\n\r\nlet otfTableFilterStateModel = new OtfTableFilterStateModel();\r\n\r\n@State<OtfTableFilterStateModel>({\r\n    name: 'OtfTableFilter',\r\n    defaults : otfTableFilterStateModel\r\n})\r\n\r\nexport class OtfTableFilterState {\r\n\r\n    constructor(\r\n        private _otfService: OtfService,\r\n        private _store: Store\r\n        ) {\r\n            \r\n    }\r\n\r\n    // async delay(ms: number) {\r\n    //     await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\r\n    //   }\r\n\r\n    @Selector()\r\n    static get(state: OtfTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    // @Selector()\r\n    // static getFilter(state: PlanTableComboFilterStateModel) {\r\n    //     return state.filter;\r\n    // }\r\n\r\n    @Action(LoadOtfTableFilter)\r\n    loadOtfTableFilter(context: StateContext<OtfTableFilterStateModel>, action: LoadOtfTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.filters = null;\r\n        \r\n        context.patchState(state);\r\n        this._otfService.getOtfTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n          \r\n                context.dispatch(new LoadOtfTableFilterSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOtfTableFilterSuccess)\r\n    loadSuccess(context: StateContext<OtfTableFilterStateModel>, action: LoadOtfTableFilterSuccess) {\r\n        \r\n        //conserver le payload\r\n        let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.filters = action.payload;\r\n\r\n        context.patchState(state);\r\n        \r\n        context.dispatch(new ChangeOtfTableFilter(payload));\r\n        \r\n    }\r\n        // this.delay(3000).then(any=>{\r\n    @Action(ChangeOtfTableFilter)\r\n    changeFilter(context: StateContext<OtfTableFilterStateModel>, action: ChangeOtfTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOtfTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOtfTableFilter)\r\n    UpdatePaginationOtfTableFilter(context: StateContext<OtfTableFilterStateModel>, action: UpdatePaginationOtfTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n        // this.delay(3000).then(any=>{\r\n            context.patchState(state);\r\n        // });\r\n    }\r\n\r\n    // HasChangedState( state: FilterOtfTableSelected, payload : FilterOtfTableSelected ) {\r\n\r\n    //     return false;\r\n    //     // if(payload.account == null || payload.otfState == null ) {\r\n    //     //     return false;\r\n    //     // }\r\n    //     if( state.movement==null && payload.movement!=null) {\r\n    //         return true;\r\n    //     };\r\n    //     if(state.label!=payload.label) {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     if(state.pagination != payload.pagination) {\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n        \r\n    // }\r\n\r\n    // ReloadFilters(state: FilterOtfTable, payload:FilterOtfTable ) {\r\n        \r\n    //     if(state.selected.idImport==null) {\r\n            \r\n    //         return true;\r\n    //     }\r\n        \r\n    //     if(state.selected.idImport != payload.selected.idImport) {\r\n            \r\n    //         return true;\r\n    //     }\r\n\r\n    //     if(state.selected.account && payload.selected.account && state.selected.account.id != payload.selected.account.id) {\r\n\r\n    //         return true;\r\n    //     }\r\n\r\n    //     return false;\r\n    // }\r\n}","export const OTF_TABLE_LOAD = 'otf-table-load';\r\nexport const OTF_TABLE_LOAD_SUCCESS = 'otf-table-load-success';\r\nexport const OTF_TABLE_FILTER_CHANGE = 'otf-table-filter-change';\r\nexport const OTF_TABLE_CLEAR = 'otf-table-clear';\r\n\r\nexport class LoadOtfTableDatas {\r\n    static readonly type = OTF_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class LoadOtfTableDatasSuccess {\r\n    static readonly type = OTF_TABLE_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\n// export class ChangeAsifTableFilter {\r\n//     static readonly type = ASIF_TABLE_FILTER_CHANGE;\r\n \r\n//     constructor(public payload: FilterAsifTableSelected) { }\r\n// }\r\n\r\nexport class ClearOtfTableDatas {\r\n    static readonly type = OTF_TABLE_CLEAR;\r\n    // constructor(public payload: any) { }\r\n}","import { DataInfos } from \"app/main/_models/generics/table-info.model\";\r\nimport { OtfTable } from \"app/main/_models/referential/operation-type-family.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtfTableDatas, LoadOtfTableDatasSuccess, ClearOtfTableDatas } from \"./operation-type-family-list.action\";\r\nimport { UpdatePaginationOtfTableFilter } from \"../operation-type-family-list-filter/operation-type-family-list-filter.action\";\r\nimport { OtfService } from \"app/main/apps/referential/operations/operation-type-family/operation-type-family.service\";\r\n\r\nexport class OtfTableStateModel extends DataInfos<OtfTable> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OtfTableStateModel();\r\n@State<OtfTableStateModel>({\r\n    name: 'OtfTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OtfTableState {\r\n    constructor(\r\n        private _otfService: OtfService,\r\n        private _store: Store\r\n        // private _notification: NotificationsService\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtfTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n\r\n    // async delay(ms: number) {\r\n    //     await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\r\n    //   }\r\n\r\n    @Action(LoadOtfTableDatas)\r\n    loadGrid(context: StateContext<OtfTableStateModel>, action: LoadOtfTableDatas) {\r\n        const state = context.getState();\r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        // state.datas = action.payload;\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        // this.delay(3000).then(any=>{\r\n        this._otfService.getOtfTable(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOtfTableDatasSuccess(result));\r\n            });\r\n        // });\r\n    }\r\n\r\n    @Action(LoadOtfTableDatasSuccess)\r\n    loadSuccess(context: StateContext<OtfTableStateModel>, action: LoadOtfTableDatasSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload.datas;\r\n        // state.pagination = action.payload.pagination;\r\n\r\n        context.patchState(state);\r\n\r\n\r\n        this._store.dispatch(new UpdatePaginationOtfTableFilter(action.payload.pagination));\r\n    }\r\n\r\n    @Action(ClearOtfTableDatas)\r\n    clear(context: StateContext<OtfTableStateModel>) {\r\n        return context.setState(new OtfTableStateModel());\r\n    }\r\n\r\n\r\n\r\n}","import { OtDetail } from \"app/main/_models/referential/operation-type.model\";\r\n\r\nexport const OT_DETAIL_LOAD = 'ot-detail-load';\r\nexport const OT_DETAIL_LOAD_SUCCESS = 'ot-detail-load-success';\r\nexport const OT_DETAIL_CLEAR = 'ot-detail-clear';\r\n\r\nexport class LoadOtDetail {\r\n    static readonly type = OT_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\nexport class LoadOtDetailSuccess {\r\n    static readonly type = OT_DETAIL_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: OtDetail) { }\r\n}\r\n\r\nexport class ClearOtDetail {\r\n    static readonly type = OT_DETAIL_CLEAR;\r\n}","import { DataInfo } from \"app/main/_models/generics/detail-info.model\";\r\nimport { OtDetail } from \"app/main/_models/referential/operation-type.model\";\r\nimport { State, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { ReferentialService } from \"app/main/_services/Referential/referential.service\";\r\nimport { LoadOtDetail, LoadOtDetailSuccess, ClearOtDetail } from \"./operation-type-detail.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\n\r\nexport class OtDetailStateModel extends DataInfo<OtDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet otDetailStateModel = new OtDetailStateModel();\r\n\r\n@State<OtDetailStateModel>({\r\n    name: 'OtDetail',\r\n    defaults : otDetailStateModel\r\n})\r\n\r\nexport class OtDetailState {\r\n\r\n    constructor(\r\n        private _otService: OtService,\r\n        private _referentialService: ReferentialService\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtDetailStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtDetail)\r\n    loadOtDetail(context: StateContext<OtDetailStateModel>, action: LoadOtDetail) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.datas = null;\r\n        \r\n        context.patchState(state);\r\n        this._otService.getOtDetail(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOtDetailSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOtDetailSuccess)\r\n    loadSuccess(context: StateContext<OtDetailStateModel>, action: LoadOtDetailSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload;\r\n\r\n        context.patchState(state);\r\n    }\r\n\r\n    @Action(ClearOtDetail)\r\n    clear(context: StateContext<OtDetailStateModel>) {\r\n        return context.setState(new OtDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","import { FilterOtTable, FilterOtTableSelected } from \"app/main/_models/filters/operation-type.filter\";\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\n\r\nexport const OT_TABLE_FILTER_LOAD = 'ot-table-filter-load';\r\nexport const OT_TABLE_FILTER_LOAD_SUCCESS = 'ot-table-filter-load-success';\r\nexport const OT_TABLE_FILTER_CHANGE = 'ot-table-filter-change';\r\nexport const OT_TABLE_FILTER_UPDATE_PAGINATION = 'ot-table-filter-update-pagination';\r\n\r\nexport class LoadOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOtTable) { }\r\n}\r\n\r\nexport class LoadOtTableFilterSuccess {\r\n    static readonly type = OT_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: FilterOtTable) { }\r\n}\r\n\r\nexport class ChangeOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOtTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOtTableFilter {\r\n    static readonly type = OT_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterOtTable } from \"app/main/_models/filters/operation-type.filter\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtTableFilter, LoadOtTableFilterSuccess, ChangeOtTableFilter, UpdatePaginationOtTableFilter } from \"./operation-type-list-filter.action\";\r\nimport { LoadOtTableDatas } from \"../operation-type-list/operation-type-list.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\n\r\nexport class OtTableFilterStateModel extends FilterInfo<FilterOtTable> {\r\n    constructor () {\r\n        super(FilterOtTable);\r\n    }\r\n}\r\n\r\nlet otTableFilterStateModel = new OtTableFilterStateModel();\r\n\r\n@State<OtTableFilterStateModel>({\r\n    name: 'OtTableFilter',\r\n    defaults : otTableFilterStateModel\r\n})\r\n\r\nexport class OtTableFilterState {\r\n\r\n    constructor(\r\n        private _otService: OtService,\r\n        private _store: Store\r\n        ) {\r\n            \r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtTableFilter)\r\n    loadOtfTableFilter(context: StateContext<OtTableFilterStateModel>, action: LoadOtTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.filters = null;\r\n        \r\n        context.patchState(state);\r\n        this._otService.getOtTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOtTableFilterSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOtTableFilterSuccess)\r\n    loadSuccess(context: StateContext<OtTableFilterStateModel>, action: LoadOtTableFilterSuccess) {\r\n        \r\n        //conserver le payload\r\n        let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.filters = action.payload;\r\n\r\n        context.patchState(state);\r\n        \r\n        context.dispatch(new ChangeOtTableFilter(payload));\r\n        \r\n    }\r\n\r\n    @Action(ChangeOtTableFilter)\r\n    changeFilter(context: StateContext<OtTableFilterStateModel>, action: ChangeOtTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOtTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOtTableFilter)\r\n    UpdatePaginationOtTableFilter(context: StateContext<OtTableFilterStateModel>, action: UpdatePaginationOtTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n\r\n        context.patchState(state);\r\n\r\n    }\r\n\r\n}","export const OT_TABLE_LOAD = 'ot-table-load';\r\nexport const OT_TABLE_LOAD_SUCCESS = 'ot-table-load-success';\r\nexport const OT_TABLE_FILTER_CHANGE = 'ot-table-filter-change';\r\nexport const OT_TABLE_CLEAR = 'ot-table-clear';\r\n\r\nexport class LoadOtTableDatas {\r\n    static readonly type = OT_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class LoadOtTableDatasSuccess {\r\n    static readonly type = OT_TABLE_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class ClearOtTableDatas {\r\n    static readonly type = OT_TABLE_CLEAR;\r\n}","import { DataInfos } from \"app/main/_models/generics/table-info.model\";\r\nimport { OtTable } from \"app/main/_models/referential/operation-type.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { LoadOtTableDatas, LoadOtTableDatasSuccess, ClearOtTableDatas } from \"./operation-type-list.action\";\r\nimport { UpdatePaginationOtTableFilter } from \"../operation-type-list-filter/operation-type-list-filter.action\";\r\nimport { OtService } from \"app/main/apps/referential/operations/operation-type/operation-type.service\";\r\n\r\nexport class OtTableStateModel extends DataInfos<OtTable> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OtTableStateModel();\r\n@State<OtTableStateModel>({\r\n    name: 'OtTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OtTableState {\r\n    constructor(\r\n        private _otService: OtService,\r\n        private _store: Store\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OtTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOtTableDatas)\r\n    loadGrid(context: StateContext<OtTableStateModel>, action: LoadOtTableDatas) {\r\n        const state = context.getState();\r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        this._otService.getOtTable(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOtTableDatasSuccess(result));\r\n            });\r\n    }\r\n\r\n    @Action(LoadOtTableDatasSuccess)\r\n    loadSuccess(context: StateContext<OtTableStateModel>, action: LoadOtTableDatasSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload.datas;\r\n\r\n        context.patchState(state);\r\n\r\n\r\n        this._store.dispatch(new UpdatePaginationOtTableFilter(action.payload.pagination));\r\n    }\r\n\r\n    @Action(ClearOtTableDatas)\r\n    clear(context: StateContext<OtTableStateModel>) {\r\n        return context.setState(new OtTableStateModel());\r\n    }\r\n\r\n\r\n\r\n}","import { OperationForDetail } from \"app/main/_models/referential/operation.model\";\r\n\r\nexport const OPERATION_FOR_DETAIL_LOAD = 'operation-for-detail-load';\r\nexport const OPERATION_FOR_DETAIL_LOAD_SUCCESS = 'operaion-for-detail-load-success';\r\nexport const OPERATION_FOR_DETAIL_CLEAR = 'operation-for-detail-clear';\r\n\r\nexport class LoadOperationForDetail {\r\n    static readonly type = OPERATION_FOR_DETAIL_LOAD;\r\n \r\n    constructor(public payload: number) { }\r\n}\r\n\r\nexport class LoadOperationForDetailSuccess {\r\n    static readonly type = OPERATION_FOR_DETAIL_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: OperationForDetail) { }\r\n}\r\n\r\nexport class ClearOperationForDetail {\r\n    static readonly type = OPERATION_FOR_DETAIL_CLEAR;\r\n}","import { DataInfo } from \"app/main/_models/generics/detail-info.model\";\r\nimport { OperationForDetail } from \"app/main/_models/referential/operation.model\";\r\nimport { State, Action, Selector, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { ReferentialService } from \"app/main/_services/Referential/referential.service\";\r\nimport { LoadOperationForDetail, LoadOperationForDetailSuccess, ClearOperationForDetail } from \"./operation-detail.action\";\r\n\r\nexport class OperationForDetailStateModel extends DataInfo<OperationForDetail> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet operationForDetailStateModel = new OperationForDetailStateModel();\r\n\r\n@State<OperationForDetailStateModel>({\r\n    name: 'OperationForDetail',\r\n    defaults : operationForDetailStateModel\r\n})\r\n\r\nexport class OperationForDetailState {\r\n\r\n    constructor(\r\n        private _OperationService: OperationService,\r\n        private _referentialService: ReferentialService\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationForDetailStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationForDetail)\r\n    loadOperationForDetail(context: StateContext<OperationForDetailStateModel>, action: LoadOperationForDetail) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.datas = null;\r\n        \r\n        context.patchState(state);\r\n        this._OperationService.getDetail(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOperationForDetailSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOperationForDetailSuccess)\r\n    loadSuccess(context: StateContext<OperationForDetailStateModel>, action: LoadOperationForDetailSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload;\r\n\r\n        context.patchState(state);\r\n    }\r\n\r\n    @Action(ClearOperationForDetail)\r\n    clear(context: StateContext<OperationForDetailStateModel>) {\r\n        return context.setState(new OperationForDetailStateModel());\r\n    }\r\n\r\n    \r\n    \r\n}","\r\nimport { Pagination } from \"app/main/_models/pagination.model\";\r\nimport { FilterOperationTable, FilterOperationTableSelected } from \"app/main/_models/filters/operation.filter\";\r\n\r\nexport const OPERATION_TABLE_FILTER_LOAD = 'operation-table-filter-load';\r\nexport const OPERATION_TABLE_FILTER_LOAD_SUCCESS = 'operation-table-filter-load-success';\r\nexport const OPERATION_TABLE_FILTER_CHANGE = 'operation-table-filter-change';\r\nexport const OPERATION_TABLE_FILTER_UPDATE_PAGINATION = 'operation-table-filter-update-pagination';\r\n\r\nexport class LoadOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_LOAD;\r\n \r\n    constructor(public payload: FilterOperationTable) { }\r\n}\r\n\r\nexport class LoadOperationTableFilterSuccess {\r\n    static readonly type = OPERATION_TABLE_FILTER_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: FilterOperationTable) { }\r\n}\r\n\r\nexport class ChangeOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_CHANGE;\r\n \r\n    constructor(public payload: FilterOperationTableSelected) { }\r\n}\r\n\r\nexport class UpdatePaginationOperationTableFilter {\r\n    static readonly type = OPERATION_TABLE_FILTER_UPDATE_PAGINATION;\r\n \r\n    constructor(public payload: Pagination) { }\r\n}","import { FilterInfo } from \"app/main/_models/generics/filter.info.model\";\r\nimport { FilterOperationTable } from \"app/main/_models/filters/operation.filter\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { LoadOperationTableFilter, LoadOperationTableFilterSuccess, ChangeOperationTableFilter, UpdatePaginationOperationTableFilter } from \"./operation-list-filter.action\";\r\nimport { LoadOperationTableDatas } from \"../operation-list/operation-list.action\";\r\n\r\nexport class OperationTableFilterStateModel extends FilterInfo<FilterOperationTable> {\r\n    constructor () {\r\n        super(FilterOperationTable);\r\n    }\r\n}\r\n\r\nlet operationTableFilterStateModel = new OperationTableFilterStateModel();\r\n\r\n@State<OperationTableFilterStateModel>({\r\n    name: 'OperationTableFilter',\r\n    defaults : operationTableFilterStateModel\r\n})\r\n\r\nexport class OperationTableFilterState {\r\n\r\n    constructor(\r\n        private _operationService: OperationService,\r\n        private _store: Store\r\n        ) {\r\n            \r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationTableFilterStateModel) {\r\n \r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationTableFilter)\r\n    loadOperationfTableFilter(context: StateContext<OperationTableFilterStateModel>, action: LoadOperationTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n        state.filters = null;\r\n        \r\n        context.patchState(state);\r\n        this._operationService.getTableFilter(action.payload.selected)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOperationTableFilterSuccess(result));\r\n            });\r\n\r\n    }\r\n\r\n    @Action(LoadOperationTableFilterSuccess)\r\n    loadSuccess(context: StateContext<OperationTableFilterStateModel>, action: LoadOperationTableFilterSuccess) {\r\n        \r\n        //conserver le payload\r\n        let payload = JSON.parse(JSON.stringify(action.payload.selected));\r\n\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.filters = action.payload;\r\n\r\n        context.patchState(state);\r\n        \r\n        context.dispatch(new ChangeOperationTableFilter(payload));\r\n        \r\n    }\r\n\r\n    @Action(ChangeOperationTableFilter)\r\n    changeFilter(context: StateContext<OperationTableFilterStateModel>, action: ChangeOperationTableFilter) {\r\n        \r\n        this._store.dispatch(new LoadOperationTableDatas(action.payload));\r\n\r\n     }\r\n\r\n    @Action(UpdatePaginationOperationTableFilter)\r\n    UpdatePaginationOperationTableFilter(context: StateContext<OperationTableFilterStateModel>, action: UpdatePaginationOperationTableFilter) {\r\n        const state = context.getState();\r\n        \r\n        state.filters.selected.pagination = action.payload;\r\n\r\n        context.patchState(state);\r\n\r\n    }\r\n}","\r\nexport const OPERATION_TABLE_LOAD = 'operation-table-load';\r\nexport const OPERATION_TABLE_LOAD_SUCCESS = 'operation-table-load-success';\r\nexport const OPERATION_TABLE_FILTER_CHANGE = 'operation-table-filter-change';\r\nexport const OPERATION_TABLE_CLEAR = 'operation-table-clear';\r\n\r\nexport class LoadOperationTableDatas {\r\n    static readonly type = OPERATION_TABLE_LOAD;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class LoadOperationTableDatasSuccess {\r\n    static readonly type = OPERATION_TABLE_LOAD_SUCCESS;\r\n \r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class ClearOperationTableDatas {\r\n    static readonly type = OPERATION_TABLE_CLEAR;\r\n}","import { DataInfos } from \"app/main/_models/generics/table-info.model\";\r\nimport { OperationTable } from \"app/main/_models/referential/operation.model\";\r\nimport { State, Store, Selector, Action, StateContext } from \"@ngxs/store\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { LoadOperationTableDatas, LoadOperationTableDatasSuccess, ClearOperationTableDatas } from \"./operation-list.action\";\r\nimport { UpdatePaginationOperationTableFilter } from \"../operation-list-filter/operation-list-filter.action\";\r\n\r\n\r\nexport class OperationTableStateModel extends DataInfos<OperationTable> {\r\n    constructor () {\r\n        super();\r\n    }\r\n}\r\n\r\nlet tableInfo = new OperationTableStateModel();\r\n@State<OperationTableStateModel>({\r\n    name: 'OperationTable',\r\n    defaults : tableInfo\r\n})\r\n\r\nexport class OperationTableState {\r\n    constructor(\r\n        private _operationService: OperationService,\r\n        private _store: Store\r\n        ) {\r\n    }\r\n\r\n    @Selector()\r\n    static get(state: OperationTableStateModel) {\r\n        return state;\r\n    }\r\n\r\n    @Action(LoadOperationTableDatas)\r\n    loadGrid(context: StateContext<OperationTableStateModel>, action: LoadOperationTableDatas) {\r\n        const state = context.getState();\r\n        state.loadingInfo.loaded=false;\r\n        state.loadingInfo.loading=true;\r\n\r\n        state.datas = null;\r\n        context.patchState(state);\r\n        \r\n        this._operationService.getTable(action.payload)\r\n            .subscribe(result=> {\r\n                context.dispatch(new LoadOperationTableDatasSuccess(result));\r\n            });\r\n    }\r\n\r\n    @Action(LoadOperationTableDatasSuccess)\r\n    loadSuccess(context: StateContext<OperationTableStateModel>, action: LoadOperationTableDatasSuccess) {\r\n        let state = context.getState();\r\n        state.loadingInfo.loaded = true;\r\n        state.loadingInfo.loading = false;\r\n        state.datas = action.payload.datas;\r\n\r\n        context.patchState(state);\r\n\r\n\r\n        this._store.dispatch(new UpdatePaginationOperationTableFilter(action.payload.pagination));\r\n    }\r\n\r\n    @Action(ClearOperationTableDatas)\r\n    clear(context: StateContext<OperationTableStateModel>) {\r\n        return context.setState(new OperationTableStateModel());\r\n    }\r\n}","module.exports = \"<div id=\\\"product\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n    <!-- TOP BACKGROUND -->\\n    <div class=\\\"top-bg accent\\\"></div>\\n    <!-- / TOP BACKGROUND -->\\n\\n    <!-- CENTER -->\\n    <div class=\\\"center\\\">\\n\\n        <!-- HEADER -->\\n        <div class=\\\"header accent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <!-- APP TITLE -->\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <!-- (click)=\\\"movePrevious()\\\" -->\\n                <button class=\\\"mr-0 mr-sm-16\\\" mat-icon-button \\n                    [routerLink]=\\\"['/apps/referential/operations/operation-type-families']\\\">\\n                    <mat-icon>arrow_back</mat-icon>\\n                </button>\\n\\n                <div class=\\\"product-image mr-8 mr-sm-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n                    <img *ngIf=\\\"formLoaded && otfDetail\\\" [src]=\\\"'assets/images/Otf/'+otfDetail.logoClassName.selected.label+'_128.png'\\\">\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\n                     *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\n                    <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && otfDetail && idOperationTypeFamily!=-1\\\" >\\n                        {{otfDetail.label}}\\n                    </div>\\n                    <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && otfDetail && idOperationTypeFamily==-1\\\" >\\n                            Nouvelle catégorie d'opération\\n                    </div>\\n                    <div class=\\\"subtitle secondary-text\\\">\\n                        <span>Détail de la catégorie d'opérations</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / APP TITLE -->\\n            <button mat-raised-button *ngIf=\\\"formLoaded && otfDetail\\\"\\n                class=\\\"save-product-button mat-white-bg mt-16 mt-sm-0\\\"\\n                [disabled]= \\\"otfDetailForm.invalid || otfDetailForm.pristine\\\"\\n                (click)=\\\"saveOtf()\\\"\\n            >\\n                <span>ENREGISTRER</span>\\n            </button>\\n        </div>\\n        <!-- / HEADER -->\\n\\n        <!-- CONTENT CARD -->\\n        <div class=\\\"content-card white\\\">\\n\\n            <form *ngIf=\\\"formLoaded && otfDetail\\\" \\n                name=\\\"otfDetailForm\\\" \\n                [formGroup]=\\\"otfDetailForm\\\" \\n                class=\\\"product w-100-p\\\" \\n                fxLayout=\\\"column\\\" fxFlex\\n            >\\n                <div class=\\\"example-container tab-content p-24\\\" >\\n\\n                    <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\">\\n                        <mat-label>Libellé catégorie opération</mat-label>\\n                        <input matInput\\n                            name=\\\"label\\\"\\n                            formControlName=\\\"label\\\"\\n                            placeholder=\\\"Libellé catégorie opération\\\">\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\" >\\n                        <mat-label>Mouvement</mat-label>\\n                        <mat-select formControlName=\\\"movement\\\" placeholder=\\\"Mouvement\\\" [compareWith]=\\\"compareObjects\\\" >\\n                            <mat-option *ngFor=\\\"let item of otfDetail.movement.list\\\" [value]=\\\"item\\\">\\n                                {{ item.label }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\" >\\n                        <mat-label>Icône</mat-label>\\n                        <mat-select formControlName=\\\"logoClassName\\\" placeholder=\\\"Icône\\\" [compareWith]=\\\"compareObjects\\\" >\\n                            <mat-option *ngFor=\\\"let item of otfDetail.logoClassName.list\\\" [value]=\\\"item\\\">\\n                                <img [src]=\\\"'assets/images/Otf/'+item.label+'_32.png'\\\">\\n                                {{ item.label }}\\n                            </mat-option>\\n                        </mat-select>\\n                        \\n                        \\n                        <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                            <input matInput>\\n                            <img *ngFor=\\\"let item of otfDetail.logoClassName.list\\\" [src]=\\\"'assets/images/Otf/'+item.label+'_32.png'\\\">\\n                            \\n                        </div> -->\\n                    </mat-form-field>\\n                </div>\\n\\n                </form> \\n\\n        </div>\\n        <!-- / CONTENT CARD -->\\n\\n    </div>\\n    <!-- / CENTER -->\\n</div>\\n\\n\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important; }\\n\\n#product .header .product-image {\\n  overflow: hidden;\\n  width: 56px;\\n  height: 56px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .header .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n#product .header .subtitle {\\n  margin: 6px 0 0 0; }\\n\\n#product .content .mat-tab-group,\\n#product .content .mat-tab-body-wrapper,\\n#product .content .tab-content {\\n  flex: 1 1 auto;\\n  max-width: 100%; }\\n\\n#product .content .mat-tab-body-content {\\n  display: flex; }\\n\\n#product .content .mat-tab-label {\\n  height: 64px; }\\n\\n#product .content .product-image {\\n  overflow: hidden;\\n  width: 128px;\\n  height: 128px;\\n  margin-right: 16px;\\n  margin-bottom: 16px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .content .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUtZmFtaWx5L29wZXJhdGlvbi10eXBlLWZhbWlseS1kZXRhaWwvQzpcXFByb2plY3RzXFxBbmd1bGFyXFx1ZGVteS1hcHAtZnVzZVxcQnVkZ2V0LlNQQS9zcmNcXGFwcFxcbWFpblxcYXBwc1xccmVmZXJlbnRpYWxcXG9wZXJhdGlvbnNcXG9wZXJhdGlvbi10eXBlLWZhbWlseVxcb3BlcmF0aW9uLXR5cGUtZmFtaWx5LWRldGFpbFxcb3BlcmF0aW9uLXR5cGUtZmFtaWx5LWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsNEJBQTJCLEVBQzFCOztBQUdMO0VBS1ksaUJBQWdCO0VBQ2hCLFlBQVc7RUFDWCxhQUFZO0VBQ1osc0NBQXFDLEVBT3hDOztBQWZUO0lBV2dCLGFBQVk7SUFDWixZQUFXO0lBQ1gsZ0JBQWUsRUFDbEI7O0FBZGI7RUFrQlksa0JBQWlCLEVBQ3BCOztBQW5CVDs7O0VBMkJZLGVBQWM7RUFDZCxnQkFBZSxFQUNsQjs7QUE3QlQ7RUFnQ1ksY0FBYSxFQUNoQjs7QUFqQ1Q7RUFvQ1ksYUFBWSxFQUNmOztBQXJDVDtFQXdDWSxpQkFBZ0I7RUFDaEIsYUFBWTtFQUNaLGNBQWE7RUFDYixtQkFBa0I7RUFDbEIsb0JBQW1CO0VBQ25CLHNDQUFxQyxFQU94Qzs7QUFwRFQ7SUFnRGdCLGFBQVk7SUFDWixZQUFXO0lBQ1gsZ0JBQWUsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FwcHMvcmVmZXJlbnRpYWwvb3BlcmF0aW9ucy9vcGVyYXRpb24tdHlwZS1mYW1pbHkvb3BlcmF0aW9uLXR5cGUtZmFtaWx5LWRldGFpbC9vcGVyYXRpb24tdHlwZS1mYW1pbHktZGV0YWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuXHJcbiNwcm9kdWN0IHtcclxuXHJcbiAgICAuaGVhZGVyIHtcclxuXHJcbiAgICAgICAgLnByb2R1Y3QtaW1hZ2Uge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB3aWR0aDogNTZweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3VidGl0bGUge1xyXG4gICAgICAgICAgICBtYXJnaW46IDZweCAwIDAgMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnQge1xyXG5cclxuICAgICAgICAubWF0LXRhYi1ncm91cCxcclxuICAgICAgICAubWF0LXRhYi1ib2R5LXdyYXBwZXIsXHJcbiAgICAgICAgLnRhYi1jb250ZW50e1xyXG4gICAgICAgICAgICBmbGV4OiAxIDEgYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1hdC10YWItYm9keS1jb250ZW50IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tYXQtdGFiLWxhYmVsIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnByb2R1Y3QtaW1hZ2Uge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB3aWR0aDogMTI4cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTI4cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { fuseAnimations } from '@fuse/animations';\nimport { OtfDetailState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state';\nimport { Observable } from 'rxjs';\nimport { DataInfo } from 'app/main/_models/generics/detail-info.model';\nimport { OtfDetail } from 'app/main/_models/referential/operation-type-family.model';\nimport { LoadOtfDetail, LoadOtfDetailSuccess, ClearOtfDetail } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.action';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OtfService } from '../operation-type-family.service';\nimport { LoadOtfTableDatas } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action';\nimport { FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { OtfTableFilterState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\n\n@Component({\n  selector: 'operation-type-family-detail',\n  templateUrl: './operation-type-family-detail.component.html',\n  styleUrls: ['./operation-type-family-detail.component.scss'],\n  animations   : fuseAnimations\n})\nexport class OperationTypeFamilyDetailComponent implements OnInit, OnDestroy {\n@Select(OtfDetailState.get) otfDetail$: Observable<DataInfo<OtfDetail>>;\n@Select(OtfTableFilterState.get) otfTableFilter$: Observable<FilterInfo<FilterOtfTable>>;\n\nidOperationTypeFamily: number;\nfilterOtf: FilterOtfTable;\notfDetail: OtfDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\notfDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _otfService: OtfService\n  ) { \n\n    this.otfTableFilter$.subscribe(otfTableFilter=>{\n      this.filterOtf = JSON.parse(JSON.stringify(otfTableFilter.filters));\n    });\n\n\n    this.otfDetail$.subscribe(otfDetail=>{\n   \n      if(otfDetail.loadingInfo.loaded) {\n\n        this.otfDetail = JSON.parse(JSON.stringify(otfDetail.datas));\n \n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n\n      this.idOperationTypeFamily = routeParams['idOperationTypeFamily']=='new' ? -1 : routeParams['idOperationTypeFamily'];\n      this._store.dispatch(new LoadOtfDetail(this.idOperationTypeFamily));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOtfDetail());\n  }\n\n  createForms() {\n    \n    this.otfDetailForm = this._formBuilder.group({\n        label: [this.otfDetail.label, [Validators.required]],\n        logoClassName: [this.otfDetail.logoClassName.selected, [Validators.required]],\n        movement: [this.otfDetail.movement.selected, [Validators.required]],\n      });\n     \n    this.otfDetailForm.valueChanges.subscribe(val=>{\n        this.otfDetail.label = val.label;\n        this.otfDetail.logoClassName.selected = val.logoClassName;\n        this.otfDetail.movement.selected = val.movement;\n\n        this._store.dispatch(new LoadOtfDetailSuccess(this.otfDetail));\n      });\n \n  }  \n\n  \n  saveOtf() {\n    this._otfService.saveOtfDetail(this.otfDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `La catégorie d'opération est enregistrée`);\n          this._store.dispatch(new LoadOtfTableDatas(this.filterOtf.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","module.exports = \"<div class=\\\"example-container\\\">\\n    \\n    <mat-table class=\\\"mat-table\\\"\\n        #table [dataSource]=\\\"dataSource\\\"\\n        [@animateStagger]=\\\"{value:'50'}\\\"\\n        matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear \\n        (matSortChange)=\\\"onSortChangeEvent($event)\\\"\\n    >\\n\\n        <!-- id -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell style=\\\"flex:0 0 70px;\\\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n            <mat-cell style=\\\"flex:0 0 70px;\\\" *matCellDef=\\\"let data\\\">\\n                <p class=\\\"text-truncate\\\">{{data.id}}</p>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- logoClassName -->\\n        <ng-container cdkColumnDef=\\\"logoClassName\\\" >\\n            <mat-header-cell *cdkHeaderCellDef mat-sort-header style=\\\"flex:0 0 70px;\\\">icône</mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let data\\\" style=\\\"flex:0 0 70px;\\\">\\n                <img class=\\\"logo\\\" *ngIf=\\\"data.logoClassName\\\" [src]=\\\"'assets/images/Otf/'+data.logoClassName+'_32.png'\\\">\\n                <!-- <img class=\\\"avatar\\\" *ngIf=\\\"!user.avatarUrl\\\" [src]=\\\"'assets/images/avatars/profile.jpg'\\\"> -->\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- Label -->\\n        <ng-container matColumnDef=\\\"label\\\" >\\n            <mat-header-cell style=\\\"flex: 0 0 40%;\\\"  *matHeaderCellDef >\\n                <div mat-sort-header >Libellé</div>\\n                \\n                <div (click)=\\\"templateFor='col2'\\\" [matMenuTriggerFor]=\\\"menuLabel\\\" \\n                    style=\\\"cursor: pointer;\\\" fxFlex fxLayoutAlign=\\\"end start\\\"   >\\n                    <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('label')\\\">filter_list</mat-icon>\\n                    <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('label')\\\">filter_list</mat-icon>\\n                </div>\\n                <mat-menu #menuLabel=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                    <filter-label *ngIf=\\\"templateFor==='col2' && (otfTableFilter$ | async).loadingInfo.loaded\\\"\\n                        [label]=\\\"(otfTableFilter$ | async).filters.selected.label\\\"\\n                        (applyLabelFilter)=\\\"applyFilterLabel($event)\\\"\\n                    ></filter-label>\\n                </mat-menu>\\n            </mat-header-cell >\\n            <mat-cell style=\\\"flex: 0 0 40%;\\\" *matCellDef=\\\"let data\\\">\\n                <p class=\\\"text-truncate\\\">{{data.label}}</p>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- Movement -->\\n        <ng-container matColumnDef=\\\"movement\\\" >\\n            <mat-header-cell style=\\\"flex: 0 0 15%;\\\" *matHeaderCellDef >\\n                <div mat-sort-header >Sens</div>\\n        \\n                <div (click)=\\\"templateFor='col3'\\\" [matMenuTriggerFor]=\\\"menuMovement\\\"\\n                    fxFlex fxLayoutAlign=\\\"end start\\\" style=\\\"cursor: pointer;\\\">\\n                    <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('movement')\\\">filter_list</mat-icon>\\n                    <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('movement')\\\">filter_list</mat-icon>\\n                </div>\\n        \\n                <mat-menu #menuMovement=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                <filter-movement *ngIf=\\\"templateFor==='col3' && filterMovement\\\"\\n                    [movement]=\\\"filterMovement\\\"\\n                    (applyFilterMovement)=\\\"applyFilterMovement($event)\\\"\\n                >\\n                </filter-movement>\\n                </mat-menu>\\n            </mat-header-cell>\\n            <mat-cell style=\\\"flex: 0 0 15%;\\\" *matCellDef=\\\"let data\\\">\\n                <p class=\\\"text-truncate\\\">{{data.movement.label}}</p>\\n            </mat-cell>\\n        </ng-container>\\n        \\n        <!-- Delete -->\\n        <!-- style=\\\"flex:0 0 25%;\\\" -->\\n        <ng-container matColumnDef=\\\"buttonDelete\\\" >\\n            <mat-header-cell style=\\\"flex:0 0 30%;\\\"  *matHeaderCellDef ></mat-header-cell>\\n            <mat-cell style=\\\"flex:0 0 30%;justify-content: flex-end\\\"  *matCellDef=\\\"let data\\\">\\n                <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Supprimer\\\" mat-icon-button (click)=\\\"delete(data)\\\">\\n                    <mat-icon>delete</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Détail\\\" mat-icon-button (click)=\\\"detail(data)\\\">\\n                        <mat-icon>more_horiz</mat-icon>\\n                    </button>\\n            </mat-cell>\\n        </ng-container> \\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky:true\\\"></mat-header-row>\\n        \\n        <mat-row \\n            *cdkRowDef=\\\"let data; columns: displayedColumns;\\\"\\n            matRipple\\n            [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\"\\n            class=\\\"element-row\\\" \\n        >\\n\\n        </mat-row>\\n\\n    </mat-table>\\n\\n    <div *ngIf=\\\"(otfTable$ | async).loadingInfo.loading\\\"\\n        class=\\\"h-96 w-100-p\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n        <mat-spinner diameter=\\\"40\\\" color=\\\"accent\\\" fxLayout=\\\"row\\\"></mat-spinner>\\n        <div style=\\\"color:#4285F3\\\" fxLayout=\\\"row\\\">chargement...</div>\\n    </div> \\n\\n    \\n    <p class=\\\"empty-result\\\" \\n        *ngIf=\\\"(otfTable$ | async).loadingInfo.loaded \\n            && (otfTable$ | async).datas.length==0\\\"\\n    >\\n        Aucun résultat\\n    </p>\\n</div>\\n\\n<mat-paginator *ngIf=\\\"(otfTableFilter$ | async).loadingInfo.loaded\\\"\\n    (page)=\\\"onPageChangeEvent($event)\\\"\\n    [length]=\\\"(otfTableFilter$ | async).filters.selected.pagination.totalItems\\\" \\n    [pageSize]=\\\"(otfTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\\\"\\n    [pageSizeOptions]=\\\"[15, 100, 200]\\\">\\n</mat-paginator>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important;\\n  max-height: calc(100% - 50px) !important; }\\n\\n.mat-table {\\n  width: 100% !important;\\n  height: 100%; }\\n\\n.element-row {\\n  position: relative; }\\n\\n.element-row:not(.expanded) {\\n  cursor: pointer; }\\n\\n.element-row:not(.expanded):hover {\\n  background: #f5f5f5; }\\n\\n.element-row.expanded {\\n  border-bottom-color: red;\\n  background: #f5f5f5; }\\n\\n.ng-trigger-detailExpand {\\n  background: #f5f5f5; }\\n\\n.mat-row {\\n  min-height: 36px;\\n  max-height: 36px;\\n  padding-top: 0px;\\n  padding-right: 6px;\\n  padding-bottom: 0px;\\n  padding-left: 6px;\\n  width: 100%; }\\n\\n.mat-header-row {\\n  min-height: 40px;\\n  max-height: 40px;\\n  padding-top: 0px;\\n  padding-right: 6px;\\n  padding-bottom: 0px;\\n  padding-left: 6px;\\n  width: 100%; }\\n\\n.red-icon {\\n  color: #F44336; }\\n\\n.text-green {\\n  color: #09D261; }\\n\\n.text-red {\\n  color: #F44336; }\\n\\n.empty-result {\\n  text-align: center;\\n  color: #4285F3; }\\n\\n.mat-paginator {\\n  position: fixed !important;\\n  background-color: transparent !important;\\n  bottom: 0px;\\n  right: 20px; }\\n\\n.mat-paginator .mat-paginator-container {\\n    min-height: 50px !important;\\n    max-height: 50px !important; }\\n\\n.mat-paginator .mat-paginator-page-size {\\n    min-height: 50px !important;\\n    max-height: 50px !important;\\n    align-items: center !important; }\\n\\n.dot {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #bbb;\\n  border-radius: 50%;\\n  display: inline-block;\\n  text-align: center;\\n  color: white;\\n  padding-top: 5px; }\\n\\n.logo {\\n  height: 22px;\\n  width: 22px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUtZmFtaWx5L29wZXJhdGlvbi10eXBlLWZhbWlseS1saXN0L0M6XFxQcm9qZWN0c1xcQW5ndWxhclxcdWRlbXktYXBwLWZ1c2VcXEJ1ZGdldC5TUEEvc3JjXFxhcHBcXG1haW5cXGFwcHNcXHJlZmVyZW50aWFsXFxvcGVyYXRpb25zXFxvcGVyYXRpb24tdHlwZS1mYW1pbHlcXG9wZXJhdGlvbi10eXBlLWZhbWlseS1saXN0XFxvcGVyYXRpb24tdHlwZS1mYW1pbHktbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsNEJBQTJCO0VBQzNCLHlDQUF1QyxFQUN0Qzs7QUFXRDtFQUNFLHVCQUFzQjtFQUN0QixhQUFXLEVBR1o7O0FBRUQ7RUFDRSxtQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLG9CQUFtQixFQUNwQjs7QUFFRDtFQUNFLHlCQUF3QjtFQUN4QixvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLGlCQUFlO0VBQ2YsbUJBQWlCO0VBQ2pCLG9CQUFtQjtFQUNuQixrQkFBaUI7RUFDakIsWUFBVyxFQUNaOztBQUVEO0VBR0UsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixpQkFBZTtFQUNmLG1CQUFpQjtFQUNqQixvQkFBbUI7RUFDbkIsa0JBQWlCO0VBQ2pCLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGVBQWMsRUFDZjs7QUFNRDtFQUNFLGVBQWMsRUFDZjs7QUFDRDtFQUNFLGVBQWMsRUFDZjs7QUFFRDtFQUNFLG1CQUFpQjtFQUNqQixlQUFhLEVBQ2Q7O0FBRUQ7RUFDRSwyQkFBMEI7RUFDMUIseUNBQXdDO0VBQ3hDLFlBQVc7RUFDWCxZQUFXLEVBWVo7O0FBaEJEO0lBT0ksNEJBQTJCO0lBQzNCLDRCQUEyQixFQUM1Qjs7QUFUSDtJQVlJLDRCQUEyQjtJQUMzQiw0QkFBMkI7SUFDM0IsK0JBQThCLEVBQy9COztBQUdIO0VBQ0UsYUFBWTtFQUNaLFlBQVc7RUFDWCx1QkFBc0I7RUFDdEIsbUJBQWtCO0VBQ2xCLHNCQUFxQjtFQUNyQixtQkFBa0I7RUFDbEIsYUFBVztFQUNYLGlCQUFlLEVBQ2hCOztBQUVEO0VBQ0ksYUFBVztFQUNYLFlBQVUsRUFDYiIsImZpbGUiOiJzcmMvYXBwL21haW4vYXBwcy9yZWZlcmVudGlhbC9vcGVyYXRpb25zL29wZXJhdGlvbi10eXBlLWZhbWlseS9vcGVyYXRpb24tdHlwZS1mYW1pbHktbGlzdC9vcGVyYXRpb24tdHlwZS1mYW1pbHktbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBtYXgtaGVpZ2h0OmNhbGMoMTAwJSAtIDUwcHgpICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIC5zY3JvbGxhYmxlLXNtYWxsIHtcclxuICAgICAgICBcclxuICAgIC8vICAgbWF4LWhlaWdodDo2NXZoO1xyXG4gICAgLy8gfVxyXG4gIFxyXG4gICAgLy8gLnNjcm9sbGFibGUtbGFyZ2Uge1xyXG4gICAgLy8gICBtYXgtaGVpZ2h0Ojg2dmg7XHJcbiAgICAvLyB9XHJcbiAgICBcclxuICAgIC5tYXQtdGFibGUge1xyXG4gICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICBoZWlnaHQ6MTAwJTtcclxuICAgICAgLy8gbWF4LWhlaWdodDo2NXZoO1xyXG4gICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmVsZW1lbnQtcm93IHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuZWxlbWVudC1yb3c6bm90KC5leHBhbmRlZCkge1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5lbGVtZW50LXJvdzpub3QoLmV4cGFuZGVkKTpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5lbGVtZW50LXJvdy5leHBhbmRlZCB7XHJcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDtcclxuICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgIH1cclxuICBcclxuICAgIC5uZy10cmlnZ2VyLWRldGFpbEV4cGFuZCB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAubWF0LXJvdyB7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDM2cHg7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDM2cHg7XHJcbiAgICAgIHBhZGRpbmctdG9wOjBweDtcclxuICAgICAgcGFkZGluZy1yaWdodDo2cHg7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNnB4O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICBcclxuICAgIC5tYXQtaGVhZGVyLXJvdyB7XHJcbiAgICAvLyAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICAvLyB0b3A6IDA7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDQwcHg7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDQwcHg7XHJcbiAgICAgIHBhZGRpbmctdG9wOjBweDtcclxuICAgICAgcGFkZGluZy1yaWdodDo2cHg7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNnB4O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICBcclxuICAgIC5yZWQtaWNvbiB7XHJcbiAgICAgIGNvbG9yOiAjRjQ0MzM2O1xyXG4gICAgfVxyXG4gICAgLy8gLmhpZ2hsaWdodHtcclxuICAgIC8vICAgYmFja2dyb3VuZDogI0ZDQzdDMztcclxuICAgIC8vICAgLy8gb3BhY2l0eTogMC4zO1xyXG4gICAgLy8gfVxyXG4gIFxyXG4gICAgLnRleHQtZ3JlZW4ge1xyXG4gICAgICBjb2xvcjogIzA5RDI2MTtcclxuICAgIH1cclxuICAgIC50ZXh0LXJlZCB7XHJcbiAgICAgIGNvbG9yOiAjRjQ0MzM2O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLmVtcHR5LXJlc3VsdCB7XHJcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgICBjb2xvcjojNDI4NUYzO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLm1hdC1wYWdpbmF0b3Ige1xyXG4gICAgICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgICAgYm90dG9tOiAwcHg7XHJcbiAgICAgIHJpZ2h0OiAyMHB4O1xyXG5cclxuICAgICAgLm1hdC1wYWdpbmF0b3ItY29udGFpbmVyIHtcclxuICAgICAgICBtaW4taGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgbWF4LWhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICBcclxuICAgICAgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIHtcclxuICAgICAgICBtaW4taGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgbWF4LWhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5kb3Qge1xyXG4gICAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmJiO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBjb2xvcjp3aGl0ZTtcclxuICAgICAgcGFkZGluZy10b3A6NXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5sb2dvIHtcclxuICAgICAgICBoZWlnaHQ6MjJweDtcclxuICAgICAgICB3aWR0aDoyMnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC5tYXQtcGFnaW5hdG9yIHtcclxuICAgIC8vICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgLy8gICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICAgIC8vICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgLy8gICBib3R0b206IDBweDtcclxuICAgIC8vICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyAgIC8vIGxlZnQ6IDBweDtcclxuICAgIC8vICAgcmlnaHQ6IDIwcHg7XHJcbiAgICAvLyAgIG1hcmdpbi1ib3R0b206IDEwcHggIWltcG9ydGFudDtcclxuICAgIC8vICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIC8vIH1cclxuICAiXX0= */\"","import { Component, OnInit, ViewChild, ViewEncapsulation, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { OtfTable } from 'app/main/_models/referential/operation-type-family.model';\nimport { FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { Router } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { DataInfos } from 'app/main/_models/generics/table-info.model';\nimport { OtfTableFilterState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state';\nimport { OtfTableState } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state';\nimport { ChangeOtfTableFilter, LoadOtfTableFilter } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.action';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { OtfService } from '../operation-type-family.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { LoadOtfTableDatas } from 'app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.action';\nimport { ComboSimple } from 'app/main/_models/generics/combo.model';\nimport { ISelect } from 'app/main/_models/generics/select.model';\n\n@Component({\n  selector: 'operation-type-family-list',\n  templateUrl: './operation-type-family-list.component.html',\n  styleUrls: ['./operation-type-family-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationTypeFamilyComponent implements OnInit {\n  // @Input() headerPanelIsVisible: boolean;\n  \n  @Select(OtfTableFilterState.get) otfTableFilter$: Observable<FilterInfo<FilterOtfTable>>;\n  @Select(OtfTableState.get) otfTable$: Observable<DataInfos<OtfTable>>;\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OtfTable>();\n  filterOtf: FilterOtfTable;\n  idAccountStatement: number;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','logoClassName','label','movement','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  filterMovement: ComboSimple<ISelect>;\n\n  constructor(\n    private _store: Store,\n    private dialog: MatDialog,\n    private _router: Router,\n    private _otfService: OtfService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOtf = new FilterOtfTable();\n      this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n\n      this.otfTable$.subscribe(asifTable=>{\n\n        this.dataSource.data = asifTable.datas; \n      });\n\n   }\n\n  ngOnInit() {\n    this.otfTableFilter$.subscribe(otfTableFilter=>{\n      if(otfTableFilter.loadingInfo.loaded) {\n        this.filterOtf = otfTableFilter.filters;\n        this.filterMovement= {list : otfTableFilter.filters.movements,selected: otfTableFilter.filters.selected.movement};\n      }\n    });\n  \n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOtf.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOtf.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOtf.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOtf.selected.pagination.sortColumn = this.sort.active;\n    this.filterOtf.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOtfTableFilter(this.filterOtf.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOtf)\n      return false;\n    if(filter=='label')\n      return this.filterOtf.selected!=null && this.filterOtf.selected.label!=null && this.filterOtf.selected.label!='';\n    if(filter=='movement')\n    {\n      return this.filterOtf.selected!=null && this.filterOtf.selected.movement!=null;\n    }\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer cette catégorie d\\'opération? Tous les types d\\'opérations associés et les opérations seront supprimés';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._otfService.deleteOtfDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOtfTableDatas(this.filterOtf.selected));\n              this._notificationService.success('Suppression réussi', 'La catégorie d\\'opération est supprimé');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operation-type-families/${data.id}`]);\n    // [routerLink]=\"['/apps/referential/operations/operation-type-families', data.id]\"\n  }\n\n  applyFilterLabel(data) {\n  \n    // this.filterOtf.selected.pagination.currentPage=0;\n    this.filterOtf.selected.label = data;\n    // this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n    this.applyFilter();\n  }\n\n  applyFilterMovement(data) {\n\n    \n    this.filterOtf.selected.movement = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOtf.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOtfTableFilter(this.filterOtf));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { OtfTable, OtfDetail } from 'app/main/_models/referential/operation-type-family.model';\nimport { environment } from 'environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { FilterOtfTableSelected, FilterOtfTable } from 'app/main/_models/filters/operation-type-family.filter';\nimport { IUserForGroup } from 'app/main/_models/user.model';\n\n@Injectable()\nexport class OtfService {\n\n  baseUrl = environment.apiUrl;\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  userForGroup = this.user!=null ? <IUserForGroup> {id:this.user.id,idUserGroup:this.user.idUserGroup} : null;\n\n      constructor(\n          private http: HttpClient\n      ) { }\n  \n      getOtfTable (filter: FilterOtfTableSelected) {\n        filter.user =  this.userForGroup;\n        console.log('filter.user',filter.user);\n        return this.http\n          .post(`${this.baseUrl}referential/operation-type-families/filter`,filter)\n          .map((response: OtfTable) => {\n              return response;\n          });\n      }\n  \n      getOtfTableFilter(filter: FilterOtfTableSelected) {\n        filter.user =  this.userForGroup;\n        \n        return this.http\n              .post(`${this.baseUrl}referential/operation-type-families/table-filter`,filter)\n              .map((response: FilterOtfTable) => {\n                  return response;\n              });\n      }\n\n      getOtfDetail(idOperationTypeFamily: number) {\n        // console.log('idOperationTypeFamily',idOperationTypeFamily);\n        return this.http\n            .get(`${this.baseUrl}referential/operation-type-families/${idOperationTypeFamily}/detail`)\n            .map(response => <OtfDetail>response)\n      }\n\n      saveOtfDetail(otfDetail: OtfDetail) {\n        otfDetail.user =  this.userForGroup;\n          \n        return this.http\n              .post(`${this.baseUrl}referential/operation-type-families/save`,otfDetail)\n              .map((response: OtfDetail) => {\n                  return response;\n              });\n      }\n\n      deleteOtfDetail(idOtf: number) {\n          \n        return this.http\n              .delete(`${this.baseUrl}referential/operation-type-families/${idOtf}/delete`)\n              .map((response: boolean) => {\n                  return response;\n              });\n      }\n\n}\n","module.exports = \"<div id=\\\"product\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n    <!-- TOP BACKGROUND -->\\n    <div class=\\\"top-bg accent\\\"></div>\\n    <!-- / TOP BACKGROUND -->\\n\\n    <!-- CENTER -->\\n    <div class=\\\"center\\\">\\n\\n        <!-- HEADER -->\\n        <div class=\\\"header accent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <!-- APP TITLE -->\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <!-- (click)=\\\"movePrevious()\\\" -->\\n                <button class=\\\"mr-0 mr-sm-16\\\" mat-icon-button \\n                    [routerLink]=\\\"['/apps/referential/operations/operation-types']\\\">\\n                    <mat-icon>arrow_back</mat-icon>\\n                </button>\\n\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\n                     *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\n                    <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && otDetail && idOperationType!=-1\\\" >\\n                        {{otDetail.label}}\\n                    </div>\\n                    <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && otDetail && idOperationType==-1\\\" >\\n                            Nouveau type d'opération\\n                    </div>\\n                    <div class=\\\"subtitle secondary-text\\\">\\n                        <span>Détail du type d'opérations</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / APP TITLE -->\\n            <button mat-raised-button *ngIf=\\\"formLoaded && otDetail\\\"\\n                class=\\\"save-product-button mat-white-bg mt-16 mt-sm-0\\\"\\n                [disabled]= \\\"otDetailForm.invalid || otDetailForm.pristine\\\"\\n                (click)=\\\"saveOt()\\\"\\n            >\\n                <span>ENREGISTRER</span>\\n            </button>\\n        </div>\\n        <!-- / HEADER -->\\n\\n        <!-- CONTENT CARD -->\\n        <div class=\\\"content-card white\\\">\\n\\n            <form *ngIf=\\\"formLoaded && otDetail\\\" \\n                name=\\\"otDetailForm\\\" \\n                [formGroup]=\\\"otDetailForm\\\" \\n                class=\\\"product w-100-p\\\" \\n                fxLayout=\\\"column\\\" fxFlex\\n            >\\n                <div class=\\\"example-container tab-content p-24\\\" >\\n\\n                    <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\">\\n                        <mat-label>Libellé type opération</mat-label>\\n                        <input matInput\\n                            name=\\\"label\\\"\\n                            formControlName=\\\"label\\\"\\n                            placeholder=\\\"Libellé type opération\\\">\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\" >\\n                        <mat-label>catégorie d'opérations</mat-label>\\n                        <mat-select formControlName=\\\"operationTypeFamily\\\" placeholder=\\\"catégorie d'opérations\\\" [compareWith]=\\\"compareObjects\\\" >\\n                            <mat-option *ngFor=\\\"let item of otDetail.operationTypeFamily.list\\\" [value]=\\\"item\\\">\\n                                {{ item.label }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n\\n                </div>\\n\\n                </form> \\n\\n        </div>\\n        <!-- / CONTENT CARD -->\\n\\n    </div>\\n    <!-- / CENTER -->\\n</div>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important; }\\n\\n#product .header .product-image {\\n  overflow: hidden;\\n  width: 56px;\\n  height: 56px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .header .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n#product .header .subtitle {\\n  margin: 6px 0 0 0; }\\n\\n#product .content .mat-tab-group,\\n#product .content .mat-tab-body-wrapper,\\n#product .content .tab-content {\\n  flex: 1 1 auto;\\n  max-width: 100%; }\\n\\n#product .content .mat-tab-body-content {\\n  display: flex; }\\n\\n#product .content .mat-tab-label {\\n  height: 64px; }\\n\\n#product .content .product-image {\\n  overflow: hidden;\\n  width: 128px;\\n  height: 128px;\\n  margin-right: 16px;\\n  margin-bottom: 16px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .content .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUvb3BlcmF0aW9uLXR5cGUtZGV0YWlsL0M6XFxQcm9qZWN0c1xcQW5ndWxhclxcdWRlbXktYXBwLWZ1c2VcXEJ1ZGdldC5TUEEvc3JjXFxhcHBcXG1haW5cXGFwcHNcXHJlZmVyZW50aWFsXFxvcGVyYXRpb25zXFxvcGVyYXRpb24tdHlwZVxcb3BlcmF0aW9uLXR5cGUtZGV0YWlsXFxvcGVyYXRpb24tdHlwZS1kZXRhaWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLDRCQUEyQixFQUMxQjs7QUFHTDtFQUtZLGlCQUFnQjtFQUNoQixZQUFXO0VBQ1gsYUFBWTtFQUNaLHNDQUFxQyxFQU94Qzs7QUFmVDtJQVdnQixhQUFZO0lBQ1osWUFBVztJQUNYLGdCQUFlLEVBQ2xCOztBQWRiO0VBa0JZLGtCQUFpQixFQUNwQjs7QUFuQlQ7OztFQTJCWSxlQUFjO0VBQ2QsZ0JBQWUsRUFDbEI7O0FBN0JUO0VBZ0NZLGNBQWEsRUFDaEI7O0FBakNUO0VBb0NZLGFBQVksRUFDZjs7QUFyQ1Q7RUF3Q1ksaUJBQWdCO0VBQ2hCLGFBQVk7RUFDWixjQUFhO0VBQ2IsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFQUNuQixzQ0FBcUMsRUFPeEM7O0FBcERUO0lBZ0RnQixhQUFZO0lBQ1osWUFBVztJQUNYLGdCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUvb3BlcmF0aW9uLXR5cGUtZGV0YWlsL29wZXJhdGlvbi10eXBlLWRldGFpbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG92ZXJmbG93LXk6IGF1dG8gIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcblxyXG4jcHJvZHVjdCB7XHJcblxyXG4gICAgLmhlYWRlciB7XHJcblxyXG4gICAgICAgIC5wcm9kdWN0LWltYWdlIHtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgd2lkdGg6IDU2cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN1YnRpdGxlIHtcclxuICAgICAgICAgICAgbWFyZ2luOiA2cHggMCAwIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250ZW50IHtcclxuXHJcbiAgICAgICAgLm1hdC10YWItZ3JvdXAsXHJcbiAgICAgICAgLm1hdC10YWItYm9keS13cmFwcGVyLFxyXG4gICAgICAgIC50YWItY29udGVudHtcclxuICAgICAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tYXQtdGFiLWJvZHktY29udGVudCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubWF0LXRhYi1sYWJlbCB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNjRweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wcm9kdWN0LWltYWdlIHtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgd2lkdGg6IDEyOHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEyOHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogM3B4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { Select, Store } from '@ngxs/store';\nimport { OtDetailState } from 'app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state';\nimport { Observable } from 'rxjs';\nimport { DataInfo } from 'app/main/_models/generics/detail-info.model';\nimport { OtDetail } from 'app/main/_models/referential/operation-type.model';\nimport { OtTableFilterState } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OtService } from '../operation-type.service';\nimport { LoadOtDetail, ClearOtDetail, LoadOtDetailSuccess } from 'app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.action';\nimport { LoadOtTableDatas } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action';\n\n@Component({\n  selector: 'operation-type-detail',\n  templateUrl: './operation-type-detail.component.html',\n  styleUrls: ['./operation-type-detail.component.scss'],\n  animations   : fuseAnimations\n})\nexport class OperationTypeDetailComponent implements OnInit, OnDestroy {\n\n@Select(OtDetailState.get) otDetail$: Observable<DataInfo<OtDetail>>;\n@Select(OtTableFilterState.get) otTableFilter$: Observable<FilterInfo<FilterOtTable>>;\n\nidOperationType: number;\nfilterOt: FilterOtTable;\notDetail: OtDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\notDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _otService: OtService\n  ) { \n\n    this.otTableFilter$.subscribe(otTableFilter=>{\n      this.filterOt = JSON.parse(JSON.stringify(otTableFilter.filters));\n    });\n\n\n    this.otDetail$.subscribe(otDetail=>{\n\n      if(otDetail.loadingInfo.loaded) {\n\n        this.otDetail = JSON.parse(JSON.stringify(otDetail.datas));\n\n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n\n      this.idOperationType = routeParams['idOperationType']=='new' ? -1 : routeParams['idOperationType'];\n      this._store.dispatch(new LoadOtDetail(this.idOperationType));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOtDetail());\n  }\n\n  createForms() {\n    \n    this.otDetailForm = this._formBuilder.group({\n        label: [this.otDetail.label, [Validators.required]],\n        operationTypeFamily: [this.otDetail.operationTypeFamily.selected, [Validators.required]],\n      });\n     \n    this.otDetailForm.valueChanges.subscribe(val=>{\n        this.otDetail.label = val.label;\n        this.otDetail.operationTypeFamily.selected = val.operationTypeFamily;\n\n        this._store.dispatch(new LoadOtDetailSuccess(this.otDetail));\n      });\n \n  }  \n\n  \n  saveOt() {\n    this._otService.saveOtDetail(this.otDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `Le type d'opération est enregistré`);\n          this._store.dispatch(new LoadOtTableDatas(this.filterOt.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","module.exports = \"<div class=\\\"example-container\\\">\\n    \\n    <mat-table class=\\\"mat-table\\\"\\n        #table [dataSource]=\\\"dataSource\\\"\\n        [@animateStagger]=\\\"{value:'50'}\\\"\\n        matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear \\n        (matSortChange)=\\\"onSortChangeEvent($event)\\\"\\n    >\\n\\n        <!-- id -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell style=\\\"flex:0 0 70px;\\\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n            <mat-cell style=\\\"flex:0 0 70px;\\\" *matCellDef=\\\"let data\\\">\\n                <p class=\\\"text-truncate\\\">{{data.id}}</p>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- OperationTypeFamily -->\\n        <ng-container matColumnDef=\\\"operationTypeFamily\\\" >\\n          <mat-header-cell style=\\\"flex: 0 0 30%;\\\" *matHeaderCellDef >\\n              <div mat-sort-header >Catégorie opération</div>\\n      \\n              <div (click)=\\\"templateFor='col2'\\\" [matMenuTriggerFor]=\\\"menuOtf\\\"\\n                  fxFlex fxLayoutAlign=\\\"end start\\\" style=\\\"cursor: pointer;\\\">\\n                  <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('operationTypeFamily')\\\">filter_list</mat-icon>\\n                  <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('operationTypeFamily')\\\">filter_list</mat-icon>\\n              </div>\\n      \\n              <mat-menu #menuOtf=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                <filter-movement *ngIf=\\\"templateFor==='col2' && filterOtf\\\"\\n                    [movement]=\\\"filterOtf\\\"\\n                    (applyFilterMovement)=\\\"applyFilterOtf($event)\\\"\\n                >\\n                </filter-movement>\\n              </mat-menu>\\n          </mat-header-cell>\\n          <mat-cell style=\\\"flex: 0 0 30%;\\\" *matCellDef=\\\"let data\\\">\\n              <p class=\\\"text-truncate\\\">{{data.operationTypeFamily.label}}</p>\\n          </mat-cell>\\n      </ng-container>\\n\\n        <!-- Label -->\\n        <ng-container matColumnDef=\\\"label\\\" >\\n            <mat-header-cell style=\\\"flex: 0 0 30%;\\\"  *matHeaderCellDef >\\n                <div mat-sort-header >Libellé</div>\\n                \\n                <div (click)=\\\"templateFor='col3'\\\" [matMenuTriggerFor]=\\\"menuLabel\\\" \\n                    style=\\\"cursor: pointer;\\\" fxFlex fxLayoutAlign=\\\"end start\\\"   >\\n                    <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('label')\\\">filter_list</mat-icon>\\n                    <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('label')\\\">filter_list</mat-icon>\\n                </div>\\n                <mat-menu #menuLabel=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                  <filter-label *ngIf=\\\"templateFor==='col3' && filterOt\\\"\\n                      [label]=\\\"filterOt.selected.label\\\" \\n                      (applyLabelFilter)=\\\"applyFilterLabel($event)\\\"\\n                    ></filter-label>\\n                </mat-menu>\\n            </mat-header-cell >\\n            <mat-cell style=\\\"flex: 0 0 30%;\\\" *matCellDef=\\\"let data\\\">\\n                <p class=\\\"text-truncate\\\">{{data.label}}</p>\\n            </mat-cell>\\n        </ng-container>\\n\\n        \\n        \\n        <!-- Delete--Detail -->\\n        <!-- style=\\\"flex:0 0 25%;\\\" -->\\n        <ng-container matColumnDef=\\\"buttonDelete\\\" >\\n            <mat-header-cell style=\\\"flex:0 0 30%;\\\"  *matHeaderCellDef ></mat-header-cell>\\n            <mat-cell style=\\\"flex:0 0 30%;justify-content: flex-end\\\"  *matCellDef=\\\"let data\\\">\\n                <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Supprimer\\\" mat-icon-button (click)=\\\"delete(data)\\\">\\n                    <mat-icon>delete</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Détail\\\" mat-icon-button (click)=\\\"detail(data)\\\">\\n                        <mat-icon>more_horiz</mat-icon>\\n                    </button>\\n            </mat-cell>\\n        </ng-container> \\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky:true\\\"></mat-header-row>\\n        \\n        <mat-row \\n            *cdkRowDef=\\\"let data; columns: displayedColumns;\\\"\\n            matRipple\\n            [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\"\\n            class=\\\"element-row\\\" \\n        >\\n        </mat-row>\\n\\n    </mat-table>\\n\\n    <div *ngIf=\\\"(otTable$ | async).loadingInfo.loading\\\"\\n        class=\\\"h-96 w-100-p\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n        <mat-spinner diameter=\\\"40\\\" color=\\\"accent\\\" fxLayout=\\\"row\\\"></mat-spinner>\\n        <div style=\\\"color:#4285F3\\\" fxLayout=\\\"row\\\">chargement...</div>\\n    </div> \\n\\n    \\n    <p class=\\\"empty-result\\\" \\n        *ngIf=\\\"(otTable$ | async).loadingInfo.loaded \\n            && (otTable$ | async).datas.length==0\\\"\\n    >\\n        Aucun résultat\\n    </p>\\n</div>\\n\\n<mat-paginator *ngIf=\\\"(otTableFilter$ | async).loadingInfo.loaded\\\"\\n    (page)=\\\"onPageChangeEvent($event)\\\"\\n    [length]=\\\"(otTableFilter$ | async).filters.selected.pagination.totalItems\\\" \\n    [pageSize]=\\\"(otTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\\\"\\n    [pageSizeOptions]=\\\"[15, 100, 200]\\\">\\n</mat-paginator>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important;\\n  max-height: calc(100% - 50px) !important; }\\n\\n.mat-paginator {\\n  position: fixed !important;\\n  background-color: transparent !important;\\n  bottom: 0px;\\n  right: 20px; }\\n\\n.mat-paginator .mat-paginator-container {\\n    min-height: 50px !important;\\n    max-height: 50px !important; }\\n\\n.mat-paginator .mat-paginator-page-size {\\n    min-height: 50px !important;\\n    max-height: 50px !important;\\n    align-items: center !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUvb3BlcmF0aW9uLXR5cGUtbGlzdC9DOlxcUHJvamVjdHNcXEFuZ3VsYXJcXHVkZW15LWFwcC1mdXNlXFxCdWRnZXQuU1BBL3NyY1xcYXBwXFxtYWluXFxhcHBzXFxyZWZlcmVudGlhbFxcb3BlcmF0aW9uc1xcb3BlcmF0aW9uLXR5cGVcXG9wZXJhdGlvbi10eXBlLWxpc3RcXG9wZXJhdGlvbi10eXBlLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLDRCQUEyQjtFQUMzQix5Q0FBdUMsRUFDdEM7O0FBRUw7RUFDSSwyQkFBMEI7RUFDMUIseUNBQXdDO0VBQ3hDLFlBQVc7RUFDWCxZQUFXLEVBWWQ7O0FBaEJEO0lBT1EsNEJBQTJCO0lBQzNCLDRCQUEyQixFQUM5Qjs7QUFUTDtJQVlRLDRCQUEyQjtJQUMzQiw0QkFBMkI7SUFDM0IsK0JBQThCLEVBQ2pDIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uLXR5cGUvb3BlcmF0aW9uLXR5cGUtbGlzdC9vcGVyYXRpb24tdHlwZS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgbWF4LWhlaWdodDpjYWxjKDEwMCUgLSA1MHB4KSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuLm1hdC1wYWdpbmF0b3Ige1xyXG4gICAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgICByaWdodDogMjBweDtcclxuXHJcbiAgICAubWF0LXBhZ2luYXRvci1jb250YWluZXIge1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSB7XHJcbiAgICAgICAgbWluLWhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, OnInit, ViewEncapsulation, ViewChild, SimpleChanges, Input, OnChanges } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { Select, Store } from '@ngxs/store';\nimport { OtTableFilterState } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state';\nimport { OtTableState } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state';\nimport { Observable } from 'rxjs';\nimport { DataInfos } from 'app/main/_models/generics/table-info.model';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { OtTable } from 'app/main/_models/referential/operation-type.model';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { ComboSimple } from 'app/main/_models/generics/combo.model';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { Router } from '@angular/router';\nimport { OtService } from '../operation-type.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { LoadOtTableFilter, ChangeOtTableFilter } from 'app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.action';\nimport { LoadOtTableDatas } from 'app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.action';\n\n@Component({\n  selector: 'operation-type-list',\n  templateUrl: './operation-type-list.component.html',\n  styleUrls: ['./operation-type-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationTypeListComponent implements OnInit {\n  // @Input() headerPanelIsVisible: boolean;\n  \n  @Select(OtTableFilterState.get) otTableFilter$: Observable<FilterInfo<FilterOtTable>>;\n  @Select(OtTableState.get) otTable$: Observable<DataInfos<OtTable>>;\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OtTable>();\n  filterOt: FilterOtTable;\n  idAccountStatement: number;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','operationTypeFamily','label','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  \n  filterOtf: ComboSimple<ISelect>=null;\n\n  constructor(\n    private _store: Store,\n    private _dialog: MatDialog,\n    private _router: Router,\n    private _otService: OtService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOt = new FilterOtTable();\n      this._store.dispatch(new LoadOtTableFilter(this.filterOt));\n\n      this.otTable$.subscribe(otTable=>{\n        this.dataSource.data = otTable.datas; \n\n      });\n\n   }\n\n  ngOnInit() {\n    this.otTableFilter$.subscribe(otTableFilter=>{\n      if(otTableFilter.loadingInfo.loaded) {\n        this.filterOt = otTableFilter.filters;\n        this.filterOtf= {list : otTableFilter.filters.otfs,selected: otTableFilter.filters.selected.otf};\n\n      }\n    });\n  \n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOt.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOt.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOt.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOt.selected.pagination.sortColumn = this.sort.active;\n    this.filterOt.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOtTableFilter(this.filterOt.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOt)\n      return false;\n    if(filter=='label')\n      return this.filterOt.selected!=null && this.filterOt.selected.label!=null && this.filterOt.selected.label!='';\n    if(filter=='operationTypeFamily')\n      return this.filterOt.selected!=null && this.filterOt.selected.otf!=null;\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this._dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer ce type d\\'opération? \\nToutes les opérations associées seront supprimées';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._otService.deleteOtDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOtTableDatas(this.filterOt.selected));\n              this._notificationService.success('Suppression réussi', 'Le type d\\'opération est supprimé');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operation-types/${data.id}`]);\n  }\n\n  applyFilterLabel(data) {\n    this.filterOt.selected.label = data;\n    this.applyFilter();\n  }\n\n  applyFilterOtf(data) {\n    this.filterOt.selected.otf = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOt.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOtTableFilter(this.filterOt));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { IUserForGroup } from 'app/main/_models/user.model';\nimport { HttpClient } from '@angular/common/http';\nimport { FilterOtTableSelected, FilterOtTable } from 'app/main/_models/filters/operation-type.filter';\nimport { OtTable, OtDetail } from 'app/main/_models/referential/operation-type.model';\n\n@Injectable()\nexport class OtService {\n\n  baseUrl = environment.apiUrl;\n  user = JSON.parse(localStorage.getItem('currentUser'));\n  userForGroup = this.user!=null ? <IUserForGroup> {id:this.user.id,idUserGroup:this.user.idUserGroup} : null;\n\n      constructor(\n          private _http: HttpClient\n      ) { }\n  \n      getOtTable (filter: FilterOtTableSelected) {\n        filter.user =  this.userForGroup;\n        \n        return this._http\n          .post(`${this.baseUrl}referential/operation-types/filter`,filter)\n          .map((response: OtTable) => {\n              return response;\n          });\n      }\n  \n      getOtTableFilter(filter: FilterOtTableSelected) {\n        filter.user =  this.userForGroup;\n          \n        return this._http\n              .post(`${this.baseUrl}referential/operation-types/table-filter`,filter)\n              .map((response: FilterOtTable) => {\n                  return response;\n              });\n      }\n\n      getOtDetail(idOperationType: number) {\n        return this._http\n            .get(`${this.baseUrl}referential/operation-types/${idOperationType}/user-groups/${this.userForGroup.idUserGroup}/detail`)\n            .map(response => <OtDetail>response)\n      }\n\n      saveOtDetail(otDetail: OtDetail) {\n        otDetail.user =  this.userForGroup;\n          \n        return this._http\n              .post(`${this.baseUrl}referential/operation-types/save`,otDetail)\n              .map((response: OtDetail) => {\n                  return response;\n              });\n      }\n\n      deleteOtDetail(idOt: number) {\n          \n        return this._http\n              .delete(`${this.baseUrl}referential/operation-types/${idOt}/delete`)\n              .map((response: boolean) => {\n                  return response;\n              });\n      }\n\n}","module.exports = \"<div id=\\\"product\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n  <!-- TOP BACKGROUND -->\\n  <div class=\\\"top-bg accent\\\"></div>\\n  <!-- / TOP BACKGROUND -->\\n\\n  <!-- CENTER -->\\n  <div class=\\\"center\\\">\\n\\n      <!-- HEADER -->\\n      <div class=\\\"header accent\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n          <!-- APP TITLE -->\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <!-- (click)=\\\"movePrevious()\\\" -->\\n              <button class=\\\"mr-0 mr-sm-16\\\" mat-icon-button \\n                  [routerLink]=\\\"['/apps/referential/operations/operations']\\\">\\n                  <mat-icon>arrow_back</mat-icon>\\n              </button>\\n\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\n                   *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\n                  <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && operationDetail && idOperation!=-1\\\" >\\n                      {{operationDetail.label}}\\n                  </div>\\n                  <div class=\\\"h2\\\" *ngIf=\\\"formLoaded && operationDetail && idOperation==-1\\\" >\\n                          Nouvelle opération\\n                  </div>\\n                  <div class=\\\"subtitle secondary-text\\\">\\n                      <span>Détail de l'opération</span>\\n                  </div>\\n              </div>\\n          </div>\\n          <!-- / APP TITLE -->\\n          <button mat-raised-button *ngIf=\\\"formLoaded && operationDetail\\\"\\n              class=\\\"save-product-button mat-white-bg mt-16 mt-sm-0\\\"\\n              [disabled]= \\\"operationDetailForm.invalid || operationDetailForm.pristine\\\"\\n              (click)=\\\"saveOt()\\\"\\n          >\\n              <span>ENREGISTRER</span>\\n          </button>\\n      </div>\\n      <!-- / HEADER -->\\n\\n      <!-- CONTENT CARD -->\\n      <div class=\\\"content-card white\\\">\\n\\n          <form *ngIf=\\\"formLoaded && operationDetail\\\" \\n              name=\\\"operationDetailForm\\\" \\n              [formGroup]=\\\"operationDetailForm\\\" \\n              class=\\\"product w-100-p\\\" \\n              fxLayout=\\\"column\\\" fxFlex\\n          >\\n              <div class=\\\"example-container tab-content p-24\\\" >\\n\\n                  <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\">\\n                      <mat-label>Libellé type opération</mat-label>\\n                      <input matInput\\n                          name=\\\"label\\\"\\n                          formControlName=\\\"label\\\"\\n                          placeholder=\\\"Libellé opération\\\">\\n                  </mat-form-field>\\n\\n                  <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\" >\\n                      <mat-label>Méthode opérations</mat-label>\\n                      <mat-select formControlName=\\\"operationMethod\\\" placeholder=\\\"Méthode opérations\\\" [compareWith]=\\\"compareObjects\\\" >\\n                          <mat-option *ngFor=\\\"let item of operationDetail.operationMethod.list\\\" [value]=\\\"item\\\">\\n                              {{ item.label }}\\n                          </mat-option>\\n                      </mat-select>\\n                  </mat-form-field>\\n\\n                  <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"always\\\" class=\\\"w-100-p\\\" >\\n                    <mat-label>Type opérations</mat-label>\\n                    <mat-select class=\\\"mini-select\\\" \\n                      formControlName=\\\"operationType\\\" \\n                      [compareWith]=\\\"compareObjects\\\" \\n                      placeholder=\\\"Type opérations\\\" >\\n                    \\n                    <mat-optgroup *ngFor=\\\"let group of operationDetail.operationType.list\\\" [label]=\\\"group.label\\\">\\n                      <mat-option *ngFor=\\\"let item of group.selects\\\" [value]=\\\"item\\\">\\n                        {{ item.label }}\\n                      </mat-option>\\n                    </mat-optgroup>\\n                  </mat-select>\\n\\n                    <!-- <mat-select formControlName=\\\"operationType\\\" placeholder=\\\"Type opérations\\\" [compareWith]=\\\"compareObjects\\\" >\\n                        <mat-option *ngFor=\\\"let item of operationDetail.operationType.list\\\" [value]=\\\"item\\\">\\n                            {{ item.label }}\\n                        </mat-option>\\n                    </mat-select> -->\\n                </mat-form-field>\\n\\n              </div>\\n\\n              </form> \\n\\n      </div>\\n      <!-- / CONTENT CARD -->\\n\\n  </div>\\n  <!-- / CENTER -->\\n</div>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important; }\\n\\n#product .header .product-image {\\n  overflow: hidden;\\n  width: 56px;\\n  height: 56px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .header .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n#product .header .subtitle {\\n  margin: 6px 0 0 0; }\\n\\n#product .content .mat-tab-group,\\n#product .content .mat-tab-body-wrapper,\\n#product .content .tab-content {\\n  flex: 1 1 auto;\\n  max-width: 100%; }\\n\\n#product .content .mat-tab-body-content {\\n  display: flex; }\\n\\n#product .content .mat-tab-label {\\n  height: 64px; }\\n\\n#product .content .product-image {\\n  overflow: hidden;\\n  width: 128px;\\n  height: 128px;\\n  margin-right: 16px;\\n  margin-bottom: 16px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n\\n#product .content .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uL29wZXJhdGlvbi1kZXRhaWwvQzpcXFByb2plY3RzXFxBbmd1bGFyXFx1ZGVteS1hcHAtZnVzZVxcQnVkZ2V0LlNQQS9zcmNcXGFwcFxcbWFpblxcYXBwc1xccmVmZXJlbnRpYWxcXG9wZXJhdGlvbnNcXG9wZXJhdGlvblxcb3BlcmF0aW9uLWRldGFpbFxcb3BlcmF0aW9uLWRldGFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsNEJBQTJCLEVBQzFCOztBQUdMO0VBS1ksaUJBQWdCO0VBQ2hCLFlBQVc7RUFDWCxhQUFZO0VBQ1osc0NBQXFDLEVBT3hDOztBQWZUO0lBV2dCLGFBQVk7SUFDWixZQUFXO0lBQ1gsZ0JBQWUsRUFDbEI7O0FBZGI7RUFrQlksa0JBQWlCLEVBQ3BCOztBQW5CVDs7O0VBMkJZLGVBQWM7RUFDZCxnQkFBZSxFQUNsQjs7QUE3QlQ7RUFnQ1ksY0FBYSxFQUNoQjs7QUFqQ1Q7RUFvQ1ksYUFBWSxFQUNmOztBQXJDVDtFQXdDWSxpQkFBZ0I7RUFDaEIsYUFBWTtFQUNaLGNBQWE7RUFDYixtQkFBa0I7RUFDbEIsb0JBQW1CO0VBQ25CLHNDQUFxQyxFQU94Qzs7QUFwRFQ7SUFnRGdCLGFBQVk7SUFDWixZQUFXO0lBQ1gsZ0JBQWUsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FwcHMvcmVmZXJlbnRpYWwvb3BlcmF0aW9ucy9vcGVyYXRpb24vb3BlcmF0aW9uLWRldGFpbC9vcGVyYXRpb24tZGV0YWlsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuXHJcbiNwcm9kdWN0IHtcclxuXHJcbiAgICAuaGVhZGVyIHtcclxuXHJcbiAgICAgICAgLnByb2R1Y3QtaW1hZ2Uge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB3aWR0aDogNTZweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3VidGl0bGUge1xyXG4gICAgICAgICAgICBtYXJnaW46IDZweCAwIDAgMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnQge1xyXG5cclxuICAgICAgICAubWF0LXRhYi1ncm91cCxcclxuICAgICAgICAubWF0LXRhYi1ib2R5LXdyYXBwZXIsXHJcbiAgICAgICAgLnRhYi1jb250ZW50e1xyXG4gICAgICAgICAgICBmbGV4OiAxIDEgYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1hdC10YWItYm9keS1jb250ZW50IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tYXQtdGFiLWxhYmVsIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnByb2R1Y3QtaW1hZ2Uge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB3aWR0aDogMTI4cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTI4cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { OperationForDetail } from 'app/main/_models/referential/operation.model';\nimport { OperationForDetailState } from 'app/main/_ngxs/referential/operation/operation-detail/operation-detail.state';\nimport { Observable } from 'rxjs';\nimport { OperationTableFilterState } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOperationTable } from 'app/main/_models/filters/operation.filter';\nimport { DataInfo } from 'app/main/_models/generics/detail-info.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store, Select } from '@ngxs/store';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OperationService } from 'app/main/_services/Referential/operation.service';\nimport { LoadOperationForDetail, ClearOperationForDetail, LoadOperationForDetailSuccess } from 'app/main/_ngxs/referential/operation/operation-detail/operation-detail.action';\nimport { LoadOperationTableDatas } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.action';\n\n@Component({\n  selector: 'operation-detail',\n  templateUrl: './operation-detail.component.html',\n  styleUrls: ['./operation-detail.component.scss'],\n  animations   : fuseAnimations\n})\n\nexport class OperationDetailComponent implements OnInit, OnDestroy {\n\n@Select(OperationForDetailState.get) operationDetail$: Observable<DataInfo<OperationForDetail>>;\n@Select(OperationTableFilterState.get) operationTableFilter$: Observable<FilterInfo<FilterOperationTable>>;\n\nidOperation: number;\nfilterOperation: FilterOperationTable;\noperationDetail: OperationForDetail;\nfirstLoad: boolean=true;\nformLoaded: boolean;\n\noperationDetailForm: FormGroup;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _store: Store,\n    private _formBuilder: FormBuilder,\n    private _notificationService: NotificationsService,\n    private _operationService: OperationService\n  ) { \n\n    this.operationTableFilter$.subscribe(operationTableFilter=>{\n      this.filterOperation = JSON.parse(JSON.stringify(operationTableFilter.filters));\n    });\n\n\n    this.operationDetail$.subscribe(operationDetail=>{\n  \n      if(operationDetail.loadingInfo.loaded) {\n\n        this.operationDetail = JSON.parse(JSON.stringify(operationDetail.datas));\n\n        if(this.firstLoad) {\n          //creation du formulaire\n          this.createForms();\n          this.firstLoad=false;\n        }\n\n        this.formLoaded=true;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this._activatedRoute.params.subscribe(routeParams => {\n \n      this.idOperation = routeParams['idOperation']=='new' ? -1 : routeParams['idOperation'];\n      this._store.dispatch(new LoadOperationForDetail(this.idOperation));\n    });\n  }\n\n  ngOnDestroy() {\n    this._store.dispatch(new ClearOperationForDetail());\n  }\n\n  createForms() {\n    \n    this.operationDetailForm = this._formBuilder.group({\n        label: [this.operationDetail.label, [Validators.required]],\n        operationMethod: [this.operationDetail.operationMethod.selected, [Validators.required]],\n        operationType: [this.operationDetail.operationType.selected, [Validators.required]]\n      });\n     \n    this.operationDetailForm.valueChanges.subscribe(val=>{\n        this.operationDetail.label = val.label;\n        this.operationDetail.operationMethod.selected = val.operationMethod;\n        this.operationDetail.operationType.selected = val.operationType;\n\n        this._store.dispatch(new LoadOperationForDetailSuccess(this.operationDetail));\n      });\n \n  }  \n\n  \n  saveOt() {\n    this._operationService.saveDetail(this.operationDetail)\n      .subscribe(resp=> {\n        if(resp)\n        {\n          this._notificationService.success('Enregistrement effectué', `L'opération est enregistrée`);\n          this._store.dispatch(new LoadOperationTableDatas(this.filterOperation.selected));\n        }\n        else {\n          this._notificationService.error('Echec de l\\'enregistrement');\n        }\n      });\n  }\n\n  compareObjects(o1: any, o2: any) {\n    if(o1.label == o2.label && o1.id == o2.id )\n    return true;\n    else return false;\n  }\n\n}\n","module.exports = \"<div class=\\\"example-container\\\">\\n    \\n  <mat-table class=\\\"mat-table\\\"\\n      #table [dataSource]=\\\"dataSource\\\"\\n      [@animateStagger]=\\\"{value:'50'}\\\"\\n      matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\" matSortDisableClear \\n      (matSortChange)=\\\"onSortChangeEvent($event)\\\"\\n  >\\n\\n      <!-- id -->\\n      <ng-container matColumnDef=\\\"id\\\">\\n          <mat-header-cell style=\\\"flex:0 0 70px;\\\" *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n          <mat-cell style=\\\"flex:0 0 70px;\\\" *matCellDef=\\\"let data\\\">\\n              <p class=\\\"text-truncate\\\">{{data.id}}</p>\\n          </mat-cell>\\n      </ng-container>\\n\\n      <!-- OperationMethod -->\\n      <ng-container matColumnDef=\\\"operationMethod\\\" >\\n        <mat-header-cell style=\\\"flex: 0 0 20%;\\\" *matHeaderCellDef >\\n            <div mat-sort-header >Méthode d'opération</div>\\n    \\n            <div (click)=\\\"templateFor='col2'\\\" [matMenuTriggerFor]=\\\"menuOperationMethod\\\"\\n                fxFlex fxLayoutAlign=\\\"end start\\\" style=\\\"cursor: pointer;\\\">\\n                <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('operationMethod')\\\">filter_list</mat-icon>\\n                <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('operationMethod')\\\">filter_list</mat-icon>\\n            </div>\\n    \\n            <mat-menu #menuOperationMethod=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n              <filter-combo-multiple *ngIf=\\\"templateFor==='col2' && filterOperationMethod\\\"\\n                  [filterComboMultiple]=\\\"filterOperationMethod\\\"\\n                  (applyFilterComboMultiple)=\\\"applyFilterOperationMethod($event)\\\"\\n              >\\n              </filter-combo-multiple>\\n            </mat-menu>\\n        </mat-header-cell>\\n        <mat-cell style=\\\"flex: 0 0 20%;\\\" *matCellDef=\\\"let data\\\">\\n            <p class=\\\"text-truncate\\\">{{data.operationMethod.label}}</p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <!-- Operation Type -->\\n    <ng-container matColumnDef=\\\"operationType\\\" >\\n        <mat-header-cell style=\\\"flex: 0 0 20%;\\\" *matHeaderCellDef >\\n            <div mat-sort-header >Type d'opération</div>\\n    \\n            <div (click)=\\\"templateFor='col2'\\\" [matMenuTriggerFor]=\\\"menuOperationType\\\"\\n                fxFlex fxLayoutAlign=\\\"end start\\\" style=\\\"cursor: pointer;\\\">\\n                <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('operationType')\\\">filter_list</mat-icon>\\n                <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('operationType')\\\">filter_list</mat-icon>\\n            </div>\\n    \\n            <mat-menu #menuOperationType=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n              <filter-combo-multiple-group *ngIf=\\\"templateFor==='col2' && filterOperationMethod\\\"\\n                  [filterComboMultipleGroup]=\\\"filterOperationType\\\"\\n                  (applyFilterComboMultipleGroup)=\\\"applyFilterOperationType($event)\\\"\\n              >\\n              </filter-combo-multiple-group>\\n            </mat-menu>\\n        </mat-header-cell>\\n        <mat-cell style=\\\"flex: 0 0 20%;\\\" *matCellDef=\\\"let data\\\">\\n            <p class=\\\"text-truncate\\\">{{data.operationType.label}}</p>\\n        </mat-cell>\\n    </ng-container>\\n\\n\\n    <!-- Label -->\\n    <ng-container matColumnDef=\\\"label\\\" >\\n        <mat-header-cell style=\\\"flex: 0 0 20%;\\\"  *matHeaderCellDef >\\n            <div mat-sort-header >Libellé</div>\\n            \\n            <div (click)=\\\"templateFor='col3'\\\" [matMenuTriggerFor]=\\\"menuLabel\\\" \\n                style=\\\"cursor: pointer;\\\" fxFlex fxLayoutAlign=\\\"end start\\\"   >\\n                <mat-icon color=\\\"warn\\\" *ngIf=\\\"hasFilterData('label')\\\">filter_list</mat-icon>\\n                <mat-icon color=\\\"primary\\\" *ngIf=\\\"!hasFilterData('label')\\\">filter_list</mat-icon>\\n            </div>\\n            <mat-menu #menuLabel=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n              <filter-label *ngIf=\\\"templateFor==='col3' && filterOperation\\\"\\n                  [label]=\\\"filterOperation.selected.label\\\" \\n                  (applyLabelFilter)=\\\"applyFilterLabel($event)\\\"\\n                ></filter-label>\\n            </mat-menu>\\n        </mat-header-cell >\\n        <mat-cell style=\\\"flex: 0 0 20%;\\\" *matCellDef=\\\"let data\\\">\\n            <p class=\\\"text-truncate\\\">{{data.label}}</p>\\n        </mat-cell>\\n    </ng-container>\\n\\n      \\n      \\n    <!-- Delete--Detail -->\\n    <!-- style=\\\"flex:0 0 25%;\\\" -->\\n    <ng-container matColumnDef=\\\"buttonDelete\\\" >\\n        <mat-header-cell style=\\\"flex:0 0 25%;\\\"  *matHeaderCellDef ></mat-header-cell>\\n        <mat-cell style=\\\"flex:0 0 30%;justify-content: flex-end\\\"  *matCellDef=\\\"let data\\\">\\n            <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Supprimer\\\" mat-icon-button (click)=\\\"delete(data)\\\">\\n                <mat-icon>delete</mat-icon>\\n            </button>\\n            <button *ngIf=\\\"!data.isMandatory\\\" matTooltip=\\\"Détail\\\" mat-icon-button (click)=\\\"detail(data)\\\">\\n                    <mat-icon>more_horiz</mat-icon>\\n                </button>\\n        </mat-cell>\\n    </ng-container> \\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky:true\\\"></mat-header-row>\\n    \\n    <mat-row \\n        *cdkRowDef=\\\"let data; columns: displayedColumns;\\\"\\n        matRipple\\n        [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\"\\n        class=\\\"element-row\\\" \\n    >\\n    </mat-row>\\n\\n  </mat-table>\\n\\n  <div *ngIf=\\\"(operationTable$ | async).loadingInfo.loading\\\"\\n      class=\\\"h-96 w-100-p\\\"\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center center\\\">\\n      <mat-spinner diameter=\\\"40\\\" color=\\\"accent\\\" fxLayout=\\\"row\\\"></mat-spinner>\\n      <div style=\\\"color:#4285F3\\\" fxLayout=\\\"row\\\">chargement...</div>\\n  </div> \\n\\n  \\n  <p class=\\\"empty-result\\\" \\n      *ngIf=\\\"(operationTable$ | async).loadingInfo.loaded \\n          && (operationTable$ | async).datas.length==0\\\"\\n  >\\n      Aucun résultat\\n  </p>\\n</div>\\n\\n<mat-paginator *ngIf=\\\"(operationTableFilter$ | async).loadingInfo.loaded\\\"\\n  (page)=\\\"onPageChangeEvent($event)\\\"\\n  [length]=\\\"(operationTableFilter$ | async).filters.selected.pagination.totalItems\\\" \\n  [pageSize]=\\\"(operationTableFilter$ | async).filters.selected.pagination.nbItemsPerPage\\\"\\n  [pageSizeOptions]=\\\"[15, 100, 200]\\\">\\n</mat-paginator>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto !important;\\n  max-height: calc(100% - 50px) !important; }\\n\\n.mat-paginator {\\n  position: fixed !important;\\n  background-color: transparent !important;\\n  bottom: 0px;\\n  right: 20px; }\\n\\n.mat-paginator .mat-paginator-container {\\n    min-height: 50px !important;\\n    max-height: 50px !important; }\\n\\n.mat-paginator .mat-paginator-page-size {\\n    min-height: 50px !important;\\n    max-height: 50px !important;\\n    align-items: center !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9uL29wZXJhdGlvbi1saXN0L0M6XFxQcm9qZWN0c1xcQW5ndWxhclxcdWRlbXktYXBwLWZ1c2VcXEJ1ZGdldC5TUEEvc3JjXFxhcHBcXG1haW5cXGFwcHNcXHJlZmVyZW50aWFsXFxvcGVyYXRpb25zXFxvcGVyYXRpb25cXG9wZXJhdGlvbi1saXN0XFxvcGVyYXRpb24tbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsNEJBQTJCO0VBQzNCLHlDQUF1QyxFQUN0Qzs7QUFFSDtFQUNFLDJCQUEwQjtFQUMxQix5Q0FBd0M7RUFDeEMsWUFBVztFQUNYLFlBQVcsRUFZWjs7QUFoQkQ7SUFPTSw0QkFBMkI7SUFDM0IsNEJBQTJCLEVBQzlCOztBQVRIO0lBWU0sNEJBQTJCO0lBQzNCLDRCQUEyQjtJQUMzQiwrQkFBOEIsRUFDakMiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FwcHMvcmVmZXJlbnRpYWwvb3BlcmF0aW9ucy9vcGVyYXRpb24vb3BlcmF0aW9uLWxpc3Qvb3BlcmF0aW9uLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBvdmVyZmxvdy15OiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgbWF4LWhlaWdodDpjYWxjKDEwMCUgLSA1MHB4KSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbi5tYXQtcGFnaW5hdG9yIHtcclxuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gIGJvdHRvbTogMHB4O1xyXG4gIHJpZ2h0OiAyMHB4O1xyXG5cclxuICAubWF0LXBhZ2luYXRvci1jb250YWluZXIge1xyXG4gICAgICBtaW4taGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIHtcclxuICAgICAgbWluLWhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG4gICAgICBtYXgtaGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICB9XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ViewEncapsulation, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { LoadOperationTableDatas } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.action';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { ChangeOperationTableFilter, LoadOperationTableFilter } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.action';\nimport { Select, Store } from '@ngxs/store';\nimport { OperationTableFilterState } from 'app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state';\nimport { OperationTableState } from 'app/main/_ngxs/referential/operation/operation-list/operation-list.state';\nimport { Observable } from 'rxjs';\nimport { DataInfos } from 'app/main/_models/generics/table-info.model';\nimport { OperationTable } from 'app/main/_models/referential/operation.model';\nimport { FilterInfo } from 'app/main/_models/generics/filter.info.model';\nimport { FilterOperationTable } from 'app/main/_models/filters/operation.filter';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialogRef, MatDialog } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { OperationService } from 'app/main/_services/Referential/operation.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { FilterComboMultiple, FilterComboMultipleGroup } from 'app/main/_models/filters/mini-filter/combo-multiple.filters';\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n  selector: 'operation-list',\n  templateUrl: './operation-list.component.html',\n  styleUrls: ['./operation-list.component.scss'],\n  animations : fuseAnimations,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OperationListComponent implements OnInit {\n  // @Input() headerPanelIsVisible: boolean;\n  \n  @Select(OperationTableFilterState.get) operationTableFilter$: Observable<FilterInfo<FilterOperationTable>>;\n  @Select(OperationTableState.get) operationTable$: Observable<DataInfos<OperationTable>>;\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  dataSource = new MatTableDataSource<OperationTable>();\n  filterOperation: FilterOperationTable;\n  selectedIndex: number = 0;\n  displayedColumns = ['id','operationMethod','operationType','label','buttonDelete'];\n  templateFor:string;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n  filterOperationMethod: FilterComboMultiple ={ placeholder:'Méthode d\\'opérations',combos:null };\n  filterOperationType: FilterComboMultipleGroup ={ placeholder:'Type d\\'opérations',combos:null };\n\n\n\n  constructor(\n    private _store: Store,\n    private _dialog: MatDialog,\n    private _router: Router,\n    private _operationService: OperationService,\n    private _notificationService: NotificationsService\n  ) {\n\n      this.filterOperation = new FilterOperationTable();\n      this._store.dispatch(new LoadOperationTableFilter(this.filterOperation));\n\n      this.operationTable$.subscribe(operationTable=>{\n        this.dataSource.data = operationTable.datas; \n\n      });\n\n   }\n\n  ngOnInit() {\n    this.operationTableFilter$.subscribe(operationTableFilter=>{\n      if(operationTableFilter.loadingInfo.loaded) {\n        this.filterOperation = operationTableFilter.filters;\n        \n        this.filterOperationType.combos = {list : operationTableFilter.filters.operationTypes, listSelected: operationTableFilter.filters.selected.operationTypes};\n        this.filterOperationMethod.combos = {list : operationTableFilter.filters.operationMethods,listSelected: operationTableFilter.filters.selected.operationMethods};\n\n      }\n    });\n  \n  }\n  \n  // ngOnChanges(changes: SimpleChanges) {\n\n  //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;;\n  // }\n  \n  onPageChangeEvent(event) {\n    this.filterOperation.selected.pagination.currentPage = this.paginator.pageIndex;\n    this.loadPage();\n  }\n  \n  onSortChangeEvent(event): void {\n    this.filterOperation.selected.pagination.currentPage=0;\n    this.loadPage();\n  }\n\n  loadPage() {\n\n    this.filterOperation.selected.pagination.nbItemsPerPage = this.paginator.pageSize;\n    this.filterOperation.selected.pagination.sortColumn = this.sort.active;\n    this.filterOperation.selected.pagination.sortDirection = this.sort.direction;\n\n    this._store.dispatch(new ChangeOperationTableFilter(this.filterOperation.selected));\n  }\n\n  hasFilterData(filter:string) {\n    if(!this.filterOperation)\n      return false;\n    if(filter=='label')\n      return this.filterOperation.selected!=null && this.filterOperation.selected.label!=null && this.filterOperation.selected.label!='';\n    if(filter=='operationMethod')\n      return this.filterOperationMethod.combos!=null && this.filterOperationMethod.combos.listSelected && this.filterOperationMethod.combos.listSelected.length>0;\n    if(filter=='operationType')\n      return this.filterOperationType.combos!=null && this.filterOperationType.combos.listSelected && this.filterOperationType.combos.listSelected.length>0;\n  }\n\n  delete(data) {\n    this.confirmDialogRef = this._dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Etes vous sûr de supprimer cette opération?';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result)\n        {\n            this._operationService.deleteDetail(data.id)\n            .subscribe(resp => {\n              this._store.dispatch(new LoadOperationTableDatas(this.filterOperation.selected));\n              this._notificationService.success('Suppression réussi', 'L\\'opération est supprimée');\n            }, error => {\n              this._notificationService.error('Echec suppression', error);\n            })\n        }\n        this.confirmDialogRef = null;\n    });\n  }\n\n\n  detail(data) {\n    this._router.navigate(\n          [`/apps/referential/operations/operations/${data.id}`]);\n  }\n\n  applyFilterLabel(data) {\n    this.filterOperation.selected.label = data;\n    this.applyFilter();\n  }\n\n  applyFilterOperationType(data) {\n    this.filterOperation.selected.operationTypes = data;\n    this.applyFilter();\n  }\n\n  applyFilterOperationMethod(data) {\n    this.filterOperation.selected.operationMethods = data;\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.filterOperation.selected.pagination.currentPage=0;\n    this._store.dispatch(new LoadOperationTableFilter(this.filterOperation));\n  }\n\n}\n","module.exports = \"<mat-tab-group \\n    \\n    [selectedIndex]=\\\"selectedIndex\\\"\\n    (selectedTabChange)=\\\"onTabChanged($event)\\\"\\n>\\n    <mat-tab *ngFor=\\\"let operationField of operationFields;index as i\\\" [label]=\\\"operationField.label\\\">\\n      <ng-template mat-tab-label>\\n          {{operationField.label}}\\n      </ng-template>\\n\\n      <operation-type-family-list *ngIf=\\\"selectedIndex == 0 && selectedIndex == i\\\"></operation-type-family-list>\\n      <operation-type-list  *ngIf=\\\"selectedIndex == 1 && selectedIndex == i\\\"></operation-type-list>\\n      <operation-list  *ngIf=\\\"selectedIndex == 2 && selectedIndex == i\\\"></operation-list>\\n    </mat-tab>\\n</mat-tab-group>\\n\"","module.exports = \".mat-tab-body-content {\\n  overflow: hidden !important; }\\n\\n.mat-tab-group {\\n  height: 100% !important; }\\n\\n.mat-tab-group .mat-tab-body-wrapper {\\n    height: 100% !important; }\\n\\n.mat-tab-group .mat-tab-label {\\n    background-color: #FFFFFF !important; }\\n\\n.mat-tab-group .mat-tab-label-container {\\n    padding: 0 24px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9ucy1tYWluLXRhYi9DOlxcUHJvamVjdHNcXEFuZ3VsYXJcXHVkZW15LWFwcC1mdXNlXFxCdWRnZXQuU1BBL3NyY1xcYXBwXFxtYWluXFxhcHBzXFxyZWZlcmVudGlhbFxcb3BlcmF0aW9uc1xcb3BlcmF0aW9ucy1tYWluLXRhYlxcb3BlcmF0aW9ucy1tYWluLXRhYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDRCQUEyQixFQUMxQjs7QUFFTDtFQUNJLHdCQUF1QixFQWExQjs7QUFkRDtJQUlRLHdCQUF1QixFQUUxQjs7QUFOTDtJQVFRLHFDQUFvQyxFQUN2Qzs7QUFUTDtJQVlRLGdCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9hcHBzL3JlZmVyZW50aWFsL29wZXJhdGlvbnMvb3BlcmF0aW9ucy1tYWluLXRhYi9vcGVyYXRpb25zLW1haW4tdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItYm9keS1jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbi5tYXQtdGFiLWdyb3VwIHtcclxuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG5cclxuICAgIC5tYXQtdGFiLWJvZHktd3JhcHBlciB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgfVxyXG4gICAgLm1hdC10YWItbGFiZWwge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkYgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAubWF0LXRhYi1sYWJlbC1jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMjRweDtcclxuICAgIH1cclxufSJdfQ== */\"","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ISelect } from 'app/main/_models/generics/select.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'operations-main-tab',\n  templateUrl: './operations-main-tab.component.html',\n  styleUrls: ['./operations-main-tab.component.scss']\n})\nexport class OperationsMainTabComponent implements OnInit {\n  @Input() subject: string;\n  // @Input() headerPanelIsVisible: boolean;\n\n  operationFields: ISelect[];\n  selectedIndex:number;\n  \n  constructor(\n    private _router: Router\n  ) {\n    \n    this.operationFields = [ {id: 1, label:'Catégorie opération'},{id: 2, label:'Type opération'},{id: 3, label:'Opération'} ];\n    \n    \n    \n  }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes.subject) {\n\n      this.subject = changes.subject.currentValue;\n      switch(this.subject) {\n        case 'operation-type-families':\n          this.selectedIndex = 0;\n          break;\n        case 'operation-types':\n          this.selectedIndex = 1;\n          break;\n        case 'operations':\n          this.selectedIndex = 2;\n          break;\n      }\n    }\n\n    // if(changes.headerPanelIsVisible) {\n    //   this.headerPanelIsVisible = changes.headerPanelIsVisible.currentValue;\n    // }\n\n   }\n\n   \n  onTabChanged($event) {\n\n    this.selectedIndex=$event.index;\n\n    switch(this.selectedIndex) {\n      case 0:\n      this.subject = 'operation-type-families';\n        break;\n      case 1:\n        this.subject = 'operation-types';\n        break;\n      case 2:\n        this.subject = 'operations';\n        break;\n    }\n\n    this._router.navigate(\n      [`apps/referential/operations/${this.subject}`]);\n  }\n\n}\n","module.exports = \"<div id=\\\"products\\\" class=\\\"page-layout carded fullwidth inner-scroll\\\">\\n\\n  <!-- TOP BACKGROUND -->\\n  <div class=\\\"top-bg accent header-1-background\\\"></div>\\n  <!-- / TOP BACKGROUND -->\\n\\n    <!-- CENTER -->\\n      <div class=\\\"center\\\">\\n        <div style=\\\"height:15px;text-align:center;cursor:pointer;\\\" class=\\\"test accent\\\" (click)=\\\"onHeaderPanelClick()\\\">\\n            <mat-icon style=\\\"font-size:20px;margin-top:-2px;\\\">{{headerPanelIcon}}</mat-icon>\\n        </div>\\n\\n        <!-- HEADER -->\\n        <div *ngIf=\\\"headerPanelIsVisible\\\" class=\\\"header-2-background accent p-12 pb-0 pt-6\\\"\\n            fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n            fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\n            \\n            <div class=\\\"toolbar w-100-p\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\n            \\n              <div class=\\\"left-side\\\" fxLayout=\\\"row\\\">\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                      <mat-icon class=\\\"logo-icon mr-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">history</mat-icon>\\n                      <span class=\\\"logo-text h1\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Référentiel opération: {{subjectTitle}}</span>\\n                  </div>\\n              </div>\\n\\n              <button mat-raised-button\\n                  class=\\\"save-product-button white mt-16 mt-sm-0\\\"\\n                  (click)=\\\"Add()\\\"\\n              >\\n                  <span>NOUVEAU</span>\\n              </button>\\n\\n            </div>\\n\\n        </div>\\n          \\n          <!-- / HEADER -->\\n          <div class=\\\"content-card\\\">\\n            <operations-main-tab style=\\\"height:100%;\\\" [subject]=\\\"subject\\\" ></operations-main-tab>\\n          </div>\\n      </div>\\n      <!-- / CENTER -->\\n  </div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.header-1-background {\\n  background-color: #9B9B9B;\\n  background: url(\\\"/assets/images/backgrounds/bck_1.png\\\") no-repeat; }\\n.header-2-background {\\n  background-color: #9B9B9B;\\n  background: url(\\\"/assets/images/backgrounds/bck_22.png\\\") no-repeat;\\n  min-height: 120px !important;\\n  max-height: 120px !important;\\n  height: 120px !important; }\\n.test {\\n  background: url(\\\"/assets/images/backgrounds/bck_21.png\\\") no-repeat; }\\n#products .header {\\n  position: relative; }\\n#products .header .search-input-wrapper {\\n    max-width: 480px; }\\n#products .header .selected-project {\\n    position: absolute;\\n    bottom: 0px;\\n    left: 42px;\\n    background: rgba(0, 0, 0, 0.12);\\n    color: #FFFFFF;\\n    padding: 8px 16px;\\n    height: 40px;\\n    line-height: 24px;\\n    font-size: 16px; }\\n#products .header .project-selector {\\n    position: absolute;\\n    left: 0px;\\n    bottom: 0px;\\n    margin-left: 1px;\\n    border-radius: 0;\\n    background: rgba(0, 0, 0, 0.12); }\\n#products .header .project-selector mat-icon {\\n      color: #FFFFFF; }\\n#products .content {\\n  flex: 1; }\\n#products .content mat-tab-group {\\n    height: 100%; }\\n#products .content mat-tab-group .mat-tab-body-wrapper {\\n      flex-grow: 1; }\\n#products .content .mat-tab-label {\\n    background-color: #FFFFFF !important; }\\n#products .content .mat-tab-label-container {\\n    padding: 0 24px; }\\n#products .products-table {\\n  flex: 1 1 auto;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\n  overflow: auto; }\\n#products .products-table .mat-header-row {\\n    min-height: 64px; }\\n#products .products-table .product {\\n    position: relative;\\n    cursor: pointer;\\n    height: 70px; }\\n#products .products-table .mat-cell {\\n    min-width: 0;\\n    display: flex;\\n    align-items: center; }\\n#products .products-table .mat-column-id {\\n    flex: 0 1 84px; }\\n#products .products-table .mat-column-image {\\n    flex: 0 1 84px; }\\n#products .products-table .mat-column-image .product-image {\\n      width: 52px;\\n      height: 52px;\\n      border: 1px solid rgba(0, 0, 0, 0.12); }\\n#products .products-table .mat-column-buttons {\\n    flex: 0 1 80px; }\\n#products .products-table .quantity-indicator {\\n    display: inline-block;\\n    vertical-align: middle;\\n    width: 8px;\\n    height: 8px;\\n    border-radius: 4px;\\n    margin-right: 8px; }\\n#products .products-table .quantity-indicator + span {\\n      display: inline-block;\\n      vertical-align: middle; }\\n#products .products-table .active-icon {\\n    border-radius: 50%; }\\n#products .spinner-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FuseConfigService } from '@fuse/services/config.service';\n\n@Component({\n  selector: 'operations-main',\n  templateUrl: './operations-main.component.html',\n  styleUrls: ['./operations-main.component.scss'],\n  animations : fuseAnimations\n})\nexport class OperationsMainComponent implements OnInit {\nsubject: string = 'operation-type-families';\nsubjectTitle: string = 'Catégorie d\\'opérations';\n\nheaderPanelIcon: string;\nheaderPanelIsVisible: boolean = false;\nfuseConfig:any;\n\nconstructor(\n  private _activatedRoute: ActivatedRoute,\n  private _router: Router,\n  private _fuseConfigService: FuseConfigService\n  ) {\n\n  this._activatedRoute.url.subscribe(url=> {\n    this.subject = url[0].path;\n    switch(this.subject) {\n      case 'operation-type-families':\n        this.subjectTitle = 'Catégorie d\\'opérations';\n        break;\n      case 'operation-types':\n        this.subjectTitle = 'Type d\\'opérations';\n        break;\n      case 'operations':\n        this.subjectTitle = 'Opérations';\n        break;\n    }\n  });\n\n  //prendre en compte le fuseConfig\n  this._fuseConfigService.config\n  .subscribe((config) => {\n      // Update the stored config\n      this.fuseConfig = config;\n  });\n}\n\n  ngOnInit() {\n    this.onHeaderPanelClick();\n  }\n\n  Add() {\n      this._router.navigate(\n        [`apps/referential/operations/${this.subject}/new`]);\n  }\n\n  onHeaderPanelClick() {\n    this.headerPanelIsVisible = this.headerPanelIsVisible ? false : true;\n    this.headerPanelIcon = this.headerPanelIsVisible ? 'keyboard_arrow_up' : 'keyboard_arrow_down';\n    this.fuseConfig.layout.toolbar.hidden=!this.headerPanelIsVisible;\n    this._fuseConfigService.setConfig(this.fuseConfig);\n\n  }\n\n  }\n  \n\n\n","import { AuthGuard } from \"app/_guards/auth.guard\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { OperationListComponent } from \"./operation/operation-list/operation-list.component\";\r\nimport { OtfService } from \"./operation-type-family/operation-type-family.service\";\r\nimport { NgxsModule } from \"@ngxs/store\";\r\nimport { OtfTableFilterState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-list-filter/operation-type-family-list-filter.state\";\r\nimport { OtfTableState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-list/operation-type-family-list.state\";\r\nimport { OperationTypeFamilyComponent } from \"./operation-type-family/operation-type-family-list/operation-type-family-list.component\";\r\nimport { OperationTypeListComponent } from \"./operation-type/operation-type-list/operation-type-list.component\";\r\nimport { OperationTypeFamilyDetailComponent } from \"./operation-type-family/operation-type-family-detail/operation-type-family-detail.component\";\r\nimport { OtfDetailState } from \"app/main/_ngxs/referential/operation-type-family/operation-type-family-detail/operation-type-family-detail.state\";\r\nimport { FuseConfirmDialogModule } from \"@fuse/components\";\r\nimport { FilterLabelComponent } from \"../../web-component/mini-filter/filter-label/filter-label.component\";\r\nimport { FilterMovementComponent } from \"../../web-component/mini-filter/filter-movement/filter-movement.component\";\r\nimport { OtTableFilterState } from \"app/main/_ngxs/referential/operation-type/operation-type-list-filter/operation-type-list-filter.state\";\r\nimport { OtTableState } from \"app/main/_ngxs/referential/operation-type/operation-type-list/operation-type-list.state\";\r\nimport { OtService } from \"./operation-type/operation-type.service\";\r\nimport { OperationTypeDetailComponent } from \"./operation-type/operation-type-detail/operation-type-detail.component\";\r\nimport { OtDetailState } from \"app/main/_ngxs/referential/operation-type/operation-type-detail/operation-type-detail.state\";\r\nimport { OperationsMainComponent } from \"./operations-main/operations-main.component\";\r\nimport { OperationsMainTabComponent } from \"./operations-main-tab/operations-main-tab.component\";\r\nimport { OperationService } from \"app/main/_services/Referential/operation.service\";\r\nimport { FilterComboMultiple } from \"app/main/_models/filters/mini-filter/combo-multiple.filters\";\r\nimport { FilterComboMultipleComponent } from \"../../web-component/mini-filter/filter-combo-multiple/filter-combo-multiple.component\";\r\nimport { OperationTableFilterState } from \"app/main/_ngxs/referential/operation/operation-list-filter/operation-list-filter.state\";\r\nimport { OperationTableState } from \"app/main/_ngxs/referential/operation/operation-list/operation-list.state\";\r\nimport { OperationForDetailState } from \"app/main/_ngxs/referential/operation/operation-detail/operation-detail.state\";\r\nimport { FilterComboMultipleGroupComponent } from \"../../web-component/mini-filter/filter-combo-multiple-group/filter-combo-multiple-group.component\";\r\nimport { OperationDetailComponent } from \"./operation/operation-detail/operation-detail.component\";\r\nimport { MiniFilterModule } from \"../../web-component/mini-filter/mini-filter.module\";\r\n\r\nconst routes = [\r\n  // {\r\n  //   path     : '',\r\n  //   redirectTo: 'operation-type-families',\r\n  //   // component: OperationMainComponent,\r\n  //   canActivate: [AuthGuard]\r\n  // },\r\n  {\r\n    path     : 'operation-type-families',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-type-families/:idOperationTypeFamily',\r\n    component: OperationTypeFamilyDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-types',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path     : 'operation-types/:idOperationType',\r\n    component: OperationTypeDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n  ,\r\n  {\r\n    path     : 'operations',\r\n    component: OperationsMainComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n  ,\r\n  {\r\n    path     : 'operations/:idOperation',\r\n    component: OperationDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n\r\n    \r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FuseSharedModule,\r\n      FuseConfirmDialogModule,\r\n      MiniFilterModule,\r\n      RouterModule.forChild(routes),\r\n      NgxsModule.forFeature([\r\n        OtfTableFilterState,\r\n        OtfTableState,\r\n        OtfDetailState,\r\n        OtTableFilterState,\r\n        OtTableState,\r\n        OtDetailState,\r\n        OperationTableFilterState,\r\n        OperationTableState,\r\n        OperationForDetailState\r\n\r\n    ])\r\n    ],\r\n    declarations: [\r\n        OperationsMainComponent,\r\n        OperationsMainTabComponent,\r\n        OperationTypeFamilyComponent,\r\n        OperationTypeFamilyDetailComponent,\r\n        OperationTypeListComponent,\r\n        OperationTypeDetailComponent,\r\n        OperationListComponent,\r\n        OperationDetailComponent\r\n        // FilterLabelComponent,\r\n        // FilterMovementComponent,\r\n        // FilterComboMultipleComponent,\r\n        // FilterComboMultipleGroupComponent\r\n\r\n    ],\r\n    providers : [\r\n      OtfService,\r\n      OtService,\r\n      OperationService\r\n    ],\r\n    entryComponents: [\r\n      // FuseConfirmDialogModule\r\n  ]\r\n  })\r\n  export class OperationsModule { }"],"sourceRoot":""}